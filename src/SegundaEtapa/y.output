   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error

   4  statement_list : statement
   5                 | statement_list statement

   6  statement : executable_statement
   7            | declare_statement
   8            | return_statement ';'
   9            | return_statement error
  10            | error ';'

  11  executable_statement : if_statement ';'
  12                       | if_statement error
  13                       | assign_statement
  14                       | outf_statement ';'
  15                       | outf_statement error
  16                       | repeat_statement
  17                       | goto_statement ';'
  18                       | goto_statement error
  19                       | mult_assign_statement ';'
  20                       | mult_assign_statement error

  21  executable_statement_list : executable_statement
  22                            | executable_statement_list executable_statement

  23  declare_statement : var_type var_list ';'
  24                    | var_type var_list error
  25                    | var_type ID ';'
  26                    | var_type ID error
  27                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END ';'
  28                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END error
  29                    | var_type FUN error '(' parametro ')' BEGIN fun_body END
  30                    | var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END ';'
  31                    | var_type FUN ID '(' error ')' BEGIN fun_body END ';'
  32                    | TYPEDEF PAIR '<' var_type '>' ID ';'
  33                    | TYPEDEF PAIR '<' var_type '>' ID error
  34                    | TYPEDEF error
  35                    | TYPEDEF PAIR error
  36                    | TYPEDEF PAIR '<' var_type '>' error

  37  var_list : ID ',' ID
  38           | ID ',' var_list
  39           | ID ID

  40  parametro : var_type ID
  41            | ID
  42            | var_type error

  43  return_statement : RET '(' expr ')'

  44  fun_body : statement_list

  45  var_type : UINTEGER
  46           | SINGLE

  47  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  48               | IF cond THEN ctrl_block_statement END_IF
  49               | IF '(' cond ')' THEN ctrl_block_statement error
  50               | IF '(' cond ')' THEN error END_IF
  51               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  52               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  53               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  54               | IF cond THEN error ELSE ctrl_block_statement END_IF
  55               | IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF
  56               | IF fun_invoc THEN ctrl_block_statement END_IF
  57               | IF '(' fun_invoc ')' THEN ctrl_block_statement error
  58               | IF '(' fun_invoc ')' THEN error END_IF
  59               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  60               | IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  61               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  62               | IF fun_invoc THEN error ELSE ctrl_block_statement END_IF

  63  ctrl_block_statement : executable_statement_list

  64  cond : expr cond_op expr
  65       | expr expr

  66  cond_op : '<'
  67          | '>'
  68          | '='
  69          | NEQ
  70          | LEQ
  71          | MEQ

  72  assign_statement : ID ASSIGN expr ';'
  73                   | ID ASSIGN expr error

  74  expr : expr '+' term
  75       | expr '-' term
  76       | term
  77       | error

  78  term : term '*' fact
  79       | term '/' fact
  80       | fact

  81  fact : ID
  82       | CTE
  83       | fun_invoc

  84  fun_invoc : ID '(' expr ')'
  85            | ID '(' expr ',' expr ')'

  86  outf_statement : OUTF '(' expr ')'
  87                 | OUTF '(' CHARCH ')'
  88                 | OUTF error

  89  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' ';'
  90                   | REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' error
  91                   | REPEAT BEGIN executable_statement_list END UNTIL cond
  92                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';'
  93                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error
  94                   | REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';'
  95                   | REPEAT BEGIN error
  96                   | REPEAT BEGIN executable_statement_list END error

  97  mult_assign_statement : id_list ASSIGN expr_list

  98  id_list : ID ',' ID
  99          | id_list ',' ID

 100  expr_list : expr ',' expr
 101            | expr expr
 102            | expr_list ',' expr

 103  goto_statement : GOTO TAG '@'
 104                 | GOTO error

state 0
	$accept : . prog $end  (0)

	error  shift 1
	ID  shift 2
	.  error

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)

	BEGIN  shift 5
	.  error


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 16
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 5
	prog : ID BEGIN . statement_list END  (1)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 29
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 6
	statement : error . ';'  (10)

	';'  shift 30
	.  error


state 7
	assign_statement : ID . ASSIGN expr ';'  (72)
	assign_statement : ID . ASSIGN expr error  (73)
	id_list : ID . ',' ID  (98)

	ASSIGN  shift 31
	','  shift 32
	.  error


state 8
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (47)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (48)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (49)
	if_statement : IF . '(' cond ')' THEN error END_IF  (50)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (52)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (53)
	if_statement : IF . cond THEN error ELSE ctrl_block_statement END_IF  (54)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement END_IF  (55)
	if_statement : IF . fun_invoc THEN ctrl_block_statement END_IF  (56)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement error  (57)
	if_statement : IF . '(' fun_invoc ')' THEN error END_IF  (58)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF . fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (61)
	if_statement : IF . fun_invoc THEN error ELSE ctrl_block_statement END_IF  (62)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	'('  shift 36
	.  error

	expr  goto 37
	cond  goto 38
	fun_invoc  goto 39
	term  goto 40
	fact  goto 41


state 9
	outf_statement : OUTF . '(' expr ')'  (86)
	outf_statement : OUTF . '(' CHARCH ')'  (87)
	outf_statement : OUTF . error  (88)

	error  shift 42
	'('  shift 43
	.  error


state 10
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID ';'  (32)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID error  (33)
	declare_statement : TYPEDEF . error  (34)
	declare_statement : TYPEDEF . PAIR error  (35)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' error  (36)

	error  shift 44
	PAIR  shift 45
	.  error


state 11
	return_statement : RET . '(' expr ')'  (43)

	'('  shift 46
	.  error


state 12
	var_type : UINTEGER .  (45)

	.  reduce 45


state 13
	var_type : SINGLE .  (46)

	.  reduce 46


state 14
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')' ';'  (89)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')' error  (90)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (91)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';'  (92)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error  (93)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT . BEGIN error  (95)
	repeat_statement : REPEAT . BEGIN executable_statement_list END error  (96)

	BEGIN  shift 47
	.  error


state 15
	goto_statement : GOTO . TAG '@'  (103)
	goto_statement : GOTO . error  (104)

	error  shift 48
	TAG  shift 49
	.  error


state 16
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (5)

	error  shift 6
	ID  shift 7
	IF  shift 8
	END  shift 50
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement  goto 51
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 17
	statement_list : statement .  (4)

	.  reduce 4


state 18
	statement : executable_statement .  (6)

	.  reduce 6


state 19
	statement : declare_statement .  (7)

	.  reduce 7


state 20
	statement : return_statement . ';'  (8)
	statement : return_statement . error  (9)

	error  shift 52
	';'  shift 53
	.  error


state 21
	executable_statement : if_statement . ';'  (11)
	executable_statement : if_statement . error  (12)

	error  shift 54
	';'  shift 55
	.  error


state 22
	executable_statement : assign_statement .  (13)

	.  reduce 13


state 23
	executable_statement : outf_statement . ';'  (14)
	executable_statement : outf_statement . error  (15)

	error  shift 56
	';'  shift 57
	.  error


state 24
	executable_statement : repeat_statement .  (16)

	.  reduce 16


state 25
	executable_statement : goto_statement . ';'  (17)
	executable_statement : goto_statement . error  (18)

	error  shift 58
	';'  shift 59
	.  error


state 26
	executable_statement : mult_assign_statement . ';'  (19)
	executable_statement : mult_assign_statement . error  (20)

	error  shift 60
	';'  shift 61
	.  error


state 27
	declare_statement : var_type . var_list ';'  (23)
	declare_statement : var_type . var_list error  (24)
	declare_statement : var_type . ID ';'  (25)
	declare_statement : var_type . ID error  (26)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END ';'  (27)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END error  (28)
	declare_statement : var_type . FUN error '(' parametro ')' BEGIN fun_body END  (29)
	declare_statement : var_type . FUN ID '(' parametro ',' ')' BEGIN fun_body END ';'  (30)
	declare_statement : var_type . FUN ID '(' error ')' BEGIN fun_body END ';'  (31)

	ID  shift 62
	FUN  shift 63
	.  error

	var_list  goto 64


state 28
	mult_assign_statement : id_list . ASSIGN expr_list  (97)
	id_list : id_list . ',' ID  (99)

	ASSIGN  shift 65
	','  shift 66
	.  error


state 29
	prog : ID BEGIN statement_list . END  (1)
	statement_list : statement_list . statement  (5)

	error  shift 6
	ID  shift 7
	IF  shift 8
	END  shift 67
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement  goto 51
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 30
	statement : error ';' .  (10)

	.  reduce 10


state 31
	assign_statement : ID ASSIGN . expr ';'  (72)
	assign_statement : ID ASSIGN . expr error  (73)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 68
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 32
	id_list : ID ',' . ID  (98)

	ID  shift 70
	.  error


state 33
	expr : error .  (77)

	.  reduce 77


state 34
	fact : ID .  (81)
	fun_invoc : ID . '(' expr ')'  (84)
	fun_invoc : ID . '(' expr ',' expr ')'  (85)

	'('  shift 71
	error  reduce 81
	ID  reduce 81
	CTE  reduce 81
	NEQ  reduce 81
	LEQ  reduce 81
	MEQ  reduce 81
	IF  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	END  reduce 81
	END_IF  reduce 81
	OUTF  reduce 81
	TYPEDEF  reduce 81
	RET  reduce 81
	UINTEGER  reduce 81
	SINGLE  reduce 81
	REPEAT  reduce 81
	GOTO  reduce 81
	';'  reduce 81
	')'  reduce 81
	','  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	'='  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81


state 35
	fact : CTE .  (82)

	.  reduce 82


state 36
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (47)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (49)
	if_statement : IF '(' . cond ')' THEN error END_IF  (50)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (53)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement END_IF  (55)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement error  (57)
	if_statement : IF '(' . fun_invoc ')' THEN error END_IF  (58)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (61)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 37
	cond  goto 72
	fun_invoc  goto 73
	term  goto 40
	fact  goto 41


state 37
	cond : expr . cond_op expr  (64)
	cond : expr . expr  (65)
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	NEQ  shift 74
	LEQ  shift 75
	MEQ  shift 76
	'<'  shift 77
	'>'  shift 78
	'='  shift 79
	'+'  shift 80
	'-'  shift 81
	.  error

	expr  goto 82
	fun_invoc  goto 69
	cond_op  goto 83
	term  goto 40
	fact  goto 41


state 38
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (48)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (52)
	if_statement : IF cond . THEN error ELSE ctrl_block_statement END_IF  (54)

	THEN  shift 84
	.  error


state 39
	if_statement : IF fun_invoc . THEN ctrl_block_statement END_IF  (56)
	if_statement : IF fun_invoc . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF fun_invoc . THEN error ELSE ctrl_block_statement END_IF  (62)
	fact : fun_invoc .  (83)

	THEN  shift 85
	error  reduce 83
	ID  reduce 83
	CTE  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 40
	expr : term .  (76)
	term : term . '*' fact  (78)
	term : term . '/' fact  (79)

	'*'  shift 86
	'/'  shift 87
	error  reduce 76
	ID  reduce 76
	CTE  reduce 76
	NEQ  reduce 76
	LEQ  reduce 76
	MEQ  reduce 76
	IF  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	END  reduce 76
	END_IF  reduce 76
	OUTF  reduce 76
	TYPEDEF  reduce 76
	RET  reduce 76
	UINTEGER  reduce 76
	SINGLE  reduce 76
	REPEAT  reduce 76
	GOTO  reduce 76
	';'  reduce 76
	')'  reduce 76
	','  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	'='  reduce 76
	'+'  reduce 76
	'-'  reduce 76


state 41
	term : fact .  (80)

	.  reduce 80


state 42
	outf_statement : OUTF error .  (88)

	.  reduce 88


state 43
	outf_statement : OUTF '(' . expr ')'  (86)
	outf_statement : OUTF '(' . CHARCH ')'  (87)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	CHARCH  shift 88
	.  error

	expr  goto 89
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 44
	declare_statement : TYPEDEF error .  (34)

	.  reduce 34


state 45
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID ';'  (32)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID error  (33)
	declare_statement : TYPEDEF PAIR . error  (35)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' error  (36)

	error  shift 90
	'<'  shift 91
	.  error


state 46
	return_statement : RET '(' . expr ')'  (43)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 92
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 47
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')' ';'  (89)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')' error  (90)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (91)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')' ';'  (92)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')' error  (93)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT BEGIN . error  (95)
	repeat_statement : REPEAT BEGIN . executable_statement_list END error  (96)

	error  shift 93
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 95
	id_list  goto 28


state 48
	goto_statement : GOTO error .  (104)

	.  reduce 104


state 49
	goto_statement : GOTO TAG . '@'  (103)

	'@'  shift 96
	.  error


state 50
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 51
	statement_list : statement_list statement .  (5)

	.  reduce 5


state 52
	statement : return_statement error .  (9)

	.  reduce 9


state 53
	statement : return_statement ';' .  (8)

	.  reduce 8


state 54
	executable_statement : if_statement error .  (12)

	.  reduce 12


state 55
	executable_statement : if_statement ';' .  (11)

	.  reduce 11


state 56
	executable_statement : outf_statement error .  (15)

	.  reduce 15


state 57
	executable_statement : outf_statement ';' .  (14)

	.  reduce 14


state 58
	executable_statement : goto_statement error .  (18)

	.  reduce 18


state 59
	executable_statement : goto_statement ';' .  (17)

	.  reduce 17


state 60
	executable_statement : mult_assign_statement error .  (20)

	.  reduce 20


state 61
	executable_statement : mult_assign_statement ';' .  (19)

	.  reduce 19


state 62
	declare_statement : var_type ID . ';'  (25)
	declare_statement : var_type ID . error  (26)
	var_list : ID . ',' ID  (37)
	var_list : ID . ',' var_list  (38)
	var_list : ID . ID  (39)

	error  shift 97
	ID  shift 98
	';'  shift 99
	','  shift 100
	.  error


state 63
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END ';'  (27)
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END error  (28)
	declare_statement : var_type FUN . error '(' parametro ')' BEGIN fun_body END  (29)
	declare_statement : var_type FUN . ID '(' parametro ',' ')' BEGIN fun_body END ';'  (30)
	declare_statement : var_type FUN . ID '(' error ')' BEGIN fun_body END ';'  (31)

	error  shift 101
	ID  shift 102
	.  error


state 64
	declare_statement : var_type var_list . ';'  (23)
	declare_statement : var_type var_list . error  (24)

	error  shift 103
	';'  shift 104
	.  error


state 65
	mult_assign_statement : id_list ASSIGN . expr_list  (97)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 105
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41
	expr_list  goto 106


state 66
	id_list : id_list ',' . ID  (99)

	ID  shift 107
	.  error


state 67
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 68
	assign_statement : ID ASSIGN expr . ';'  (72)
	assign_statement : ID ASSIGN expr . error  (73)
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)

	error  shift 108
	';'  shift 109
	'+'  shift 80
	'-'  shift 81
	.  error


state 69
	fact : fun_invoc .  (83)

	.  reduce 83


state 70
	id_list : ID ',' ID .  (98)

	.  reduce 98


state 71
	fun_invoc : ID '(' . expr ')'  (84)
	fun_invoc : ID '(' . expr ',' expr ')'  (85)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 110
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 72
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (47)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (49)
	if_statement : IF '(' cond . ')' THEN error END_IF  (50)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (53)

	')'  shift 111
	.  error


state 73
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement END_IF  (55)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement error  (57)
	if_statement : IF '(' fun_invoc . ')' THEN error END_IF  (58)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (61)
	fact : fun_invoc .  (83)

	')'  shift 112
	error  reduce 83
	ID  reduce 83
	CTE  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 74
	cond_op : NEQ .  (69)

	.  reduce 69


state 75
	cond_op : LEQ .  (70)

	.  reduce 70


state 76
	cond_op : MEQ .  (71)

	.  reduce 71


state 77
	cond_op : '<' .  (66)

	.  reduce 66


state 78
	cond_op : '>' .  (67)

	.  reduce 67


state 79
	cond_op : '=' .  (68)

	.  reduce 68


state 80
	expr : expr '+' . term  (74)

	ID  shift 34
	CTE  shift 35
	.  error

	fun_invoc  goto 69
	term  goto 113
	fact  goto 41


state 81
	expr : expr '-' . term  (75)

	ID  shift 34
	CTE  shift 35
	.  error

	fun_invoc  goto 69
	term  goto 114
	fact  goto 41


state 82
	cond : expr expr .  (65)
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)

	'+'  shift 80
	'-'  shift 81
	error  reduce 65
	ID  reduce 65
	IF  reduce 65
	THEN  reduce 65
	ELSE  reduce 65
	END  reduce 65
	END_IF  reduce 65
	OUTF  reduce 65
	TYPEDEF  reduce 65
	RET  reduce 65
	UINTEGER  reduce 65
	SINGLE  reduce 65
	REPEAT  reduce 65
	GOTO  reduce 65
	')'  reduce 65


state 83
	cond : expr cond_op . expr  (64)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 115
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 84
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (48)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (52)
	if_statement : IF cond THEN . error ELSE ctrl_block_statement END_IF  (54)

	error  shift 116
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 118
	id_list  goto 28


state 85
	if_statement : IF fun_invoc THEN . ctrl_block_statement END_IF  (56)
	if_statement : IF fun_invoc THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF fun_invoc THEN . error ELSE ctrl_block_statement END_IF  (62)

	error  shift 119
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 120
	id_list  goto 28


state 86
	term : term '*' . fact  (78)

	ID  shift 34
	CTE  shift 35
	.  error

	fun_invoc  goto 69
	fact  goto 121


state 87
	term : term '/' . fact  (79)

	ID  shift 34
	CTE  shift 35
	.  error

	fun_invoc  goto 69
	fact  goto 122


state 88
	outf_statement : OUTF '(' CHARCH . ')'  (87)

	')'  shift 123
	.  error


state 89
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	outf_statement : OUTF '(' expr . ')'  (86)

	')'  shift 124
	'+'  shift 80
	'-'  shift 81
	.  error


state 90
	declare_statement : TYPEDEF PAIR error .  (35)

	.  reduce 35


state 91
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID ';'  (32)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID error  (33)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' error  (36)

	UINTEGER  shift 12
	SINGLE  shift 13
	.  error

	var_type  goto 125


state 92
	return_statement : RET '(' expr . ')'  (43)
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)

	')'  shift 126
	'+'  shift 80
	'-'  shift 81
	.  error


state 93
	repeat_statement : REPEAT BEGIN error .  (95)

	.  reduce 95


state 94
	executable_statement_list : executable_statement .  (21)

	.  reduce 21


state 95
	executable_statement_list : executable_statement_list . executable_statement  (22)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')' ';'  (89)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')' error  (90)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')' ';'  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')' error  (93)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT BEGIN executable_statement_list . END error  (96)

	ID  shift 7
	IF  shift 8
	END  shift 127
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 128
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	id_list  goto 28


state 96
	goto_statement : GOTO TAG '@' .  (103)

	.  reduce 103


state 97
	declare_statement : var_type ID error .  (26)

	.  reduce 26


state 98
	var_list : ID ID .  (39)

	.  reduce 39


state 99
	declare_statement : var_type ID ';' .  (25)

	.  reduce 25


state 100
	var_list : ID ',' . ID  (37)
	var_list : ID ',' . var_list  (38)

	ID  shift 129
	.  error

	var_list  goto 130


state 101
	declare_statement : var_type FUN error . '(' parametro ')' BEGIN fun_body END  (29)

	'('  shift 131
	.  error


state 102
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END ';'  (27)
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END error  (28)
	declare_statement : var_type FUN ID . '(' parametro ',' ')' BEGIN fun_body END ';'  (30)
	declare_statement : var_type FUN ID . '(' error ')' BEGIN fun_body END ';'  (31)

	'('  shift 132
	.  error


state 103
	declare_statement : var_type var_list error .  (24)

	.  reduce 24


state 104
	declare_statement : var_type var_list ';' .  (23)

	.  reduce 23


state 105
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	expr_list : expr . ',' expr  (100)
	expr_list : expr . expr  (101)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	','  shift 133
	'+'  shift 80
	'-'  shift 81
	.  error

	expr  goto 134
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 106
	mult_assign_statement : id_list ASSIGN expr_list .  (97)
	expr_list : expr_list . ',' expr  (102)

	','  shift 135
	error  reduce 97
	';'  reduce 97


state 107
	id_list : id_list ',' ID .  (99)

	.  reduce 99


state 108
	assign_statement : ID ASSIGN expr error .  (73)

	.  reduce 73


state 109
	assign_statement : ID ASSIGN expr ';' .  (72)

	.  reduce 72


state 110
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	fun_invoc : ID '(' expr . ')'  (84)
	fun_invoc : ID '(' expr . ',' expr ')'  (85)

	')'  shift 136
	','  shift 137
	'+'  shift 80
	'-'  shift 81
	.  error


state 111
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (47)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (49)
	if_statement : IF '(' cond ')' . THEN error END_IF  (50)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (53)

	THEN  shift 138
	.  error


state 112
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement END_IF  (55)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement error  (57)
	if_statement : IF '(' fun_invoc ')' . THEN error END_IF  (58)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (61)

	THEN  shift 139
	.  error


state 113
	expr : expr '+' term .  (74)
	term : term . '*' fact  (78)
	term : term . '/' fact  (79)

	'*'  shift 86
	'/'  shift 87
	error  reduce 74
	ID  reduce 74
	CTE  reduce 74
	NEQ  reduce 74
	LEQ  reduce 74
	MEQ  reduce 74
	IF  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	END  reduce 74
	END_IF  reduce 74
	OUTF  reduce 74
	TYPEDEF  reduce 74
	RET  reduce 74
	UINTEGER  reduce 74
	SINGLE  reduce 74
	REPEAT  reduce 74
	GOTO  reduce 74
	';'  reduce 74
	')'  reduce 74
	','  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	'='  reduce 74
	'+'  reduce 74
	'-'  reduce 74


state 114
	expr : expr '-' term .  (75)
	term : term . '*' fact  (78)
	term : term . '/' fact  (79)

	'*'  shift 86
	'/'  shift 87
	error  reduce 75
	ID  reduce 75
	CTE  reduce 75
	NEQ  reduce 75
	LEQ  reduce 75
	MEQ  reduce 75
	IF  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	END  reduce 75
	END_IF  reduce 75
	OUTF  reduce 75
	TYPEDEF  reduce 75
	RET  reduce 75
	UINTEGER  reduce 75
	SINGLE  reduce 75
	REPEAT  reduce 75
	GOTO  reduce 75
	';'  reduce 75
	')'  reduce 75
	','  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	'='  reduce 75
	'+'  reduce 75
	'-'  reduce 75


state 115
	cond : expr cond_op expr .  (64)
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)

	'+'  shift 80
	'-'  shift 81
	error  reduce 64
	ID  reduce 64
	IF  reduce 64
	THEN  reduce 64
	ELSE  reduce 64
	END  reduce 64
	END_IF  reduce 64
	OUTF  reduce 64
	TYPEDEF  reduce 64
	RET  reduce 64
	UINTEGER  reduce 64
	SINGLE  reduce 64
	REPEAT  reduce 64
	GOTO  reduce 64
	')'  reduce 64


state 116
	if_statement : IF cond THEN error . ELSE ctrl_block_statement END_IF  (54)

	ELSE  shift 140
	.  error


state 117
	executable_statement_list : executable_statement_list . executable_statement  (22)
	ctrl_block_statement : executable_statement_list .  (63)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	error  reduce 63
	ELSE  reduce 63
	END_IF  reduce 63

	executable_statement  goto 128
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	id_list  goto 28


state 118
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (48)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (52)

	ELSE  shift 141
	END_IF  shift 142
	.  error


state 119
	if_statement : IF fun_invoc THEN error . ELSE ctrl_block_statement END_IF  (62)

	ELSE  shift 143
	.  error


state 120
	if_statement : IF fun_invoc THEN ctrl_block_statement . END_IF  (56)
	if_statement : IF fun_invoc THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (60)

	ELSE  shift 144
	END_IF  shift 145
	.  error


state 121
	term : term '*' fact .  (78)

	.  reduce 78


state 122
	term : term '/' fact .  (79)

	.  reduce 79


state 123
	outf_statement : OUTF '(' CHARCH ')' .  (87)

	.  reduce 87


state 124
	outf_statement : OUTF '(' expr ')' .  (86)

	.  reduce 86


state 125
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID ';'  (32)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID error  (33)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' error  (36)

	'>'  shift 146
	.  error


state 126
	return_statement : RET '(' expr ')' .  (43)

	.  reduce 43


state 127
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')' ';'  (89)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')' error  (90)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')' ';'  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')' error  (93)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT BEGIN executable_statement_list END . error  (96)

	error  shift 147
	UNTIL  shift 148
	.  error


state 128
	executable_statement_list : executable_statement_list executable_statement .  (22)

	.  reduce 22


state 129
	var_list : ID . ',' ID  (37)
	var_list : ID ',' ID .  (37)
	var_list : ID . ',' var_list  (38)
	var_list : ID . ID  (39)

	ID  shift 98
	','  shift 100
	error  reduce 37
	';'  reduce 37


state 130
	var_list : ID ',' var_list .  (38)

	.  reduce 38


state 131
	declare_statement : var_type FUN error '(' . parametro ')' BEGIN fun_body END  (29)

	ID  shift 149
	UINTEGER  shift 12
	SINGLE  shift 13
	.  error

	var_type  goto 150
	parametro  goto 151


state 132
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END ';'  (27)
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END error  (28)
	declare_statement : var_type FUN ID '(' . parametro ',' ')' BEGIN fun_body END ';'  (30)
	declare_statement : var_type FUN ID '(' . error ')' BEGIN fun_body END ';'  (31)

	error  shift 152
	ID  shift 149
	UINTEGER  shift 12
	SINGLE  shift 13
	.  error

	var_type  goto 150
	parametro  goto 153


state 133
	expr_list : expr ',' . expr  (100)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 154
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 134
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	expr_list : expr expr .  (101)

	'+'  shift 80
	'-'  shift 81
	error  reduce 101
	';'  reduce 101
	','  reduce 101


state 135
	expr_list : expr_list ',' . expr  (102)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 155
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 136
	fun_invoc : ID '(' expr ')' .  (84)

	.  reduce 84


state 137
	fun_invoc : ID '(' expr ',' . expr ')'  (85)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 156
	fun_invoc  goto 69
	term  goto 40
	fact  goto 41


state 138
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (47)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (49)
	if_statement : IF '(' cond ')' THEN . error END_IF  (50)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (53)

	error  shift 157
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 158
	id_list  goto 28


state 139
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement END_IF  (55)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement error  (57)
	if_statement : IF '(' fun_invoc ')' THEN . error END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (61)

	error  shift 159
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 160
	id_list  goto 28


state 140
	if_statement : IF cond THEN error ELSE . ctrl_block_statement END_IF  (54)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 161
	id_list  goto 28


state 141
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (52)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 162
	id_list  goto 28


state 142
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (48)

	.  reduce 48


state 143
	if_statement : IF fun_invoc THEN error ELSE . ctrl_block_statement END_IF  (62)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 163
	id_list  goto 28


state 144
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (60)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 164
	id_list  goto 28


state 145
	if_statement : IF fun_invoc THEN ctrl_block_statement END_IF .  (56)

	.  reduce 56


state 146
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID ';'  (32)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID error  (33)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . error  (36)

	error  shift 165
	ID  shift 166
	.  error


state 147
	repeat_statement : REPEAT BEGIN executable_statement_list END error .  (96)

	.  reduce 96


state 148
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')' ';'  (89)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')' error  (90)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')' ';'  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')' error  (93)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . fun_invoc ';'  (94)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	'('  shift 167
	.  error

	expr  goto 37
	cond  goto 168
	fun_invoc  goto 169
	term  goto 40
	fact  goto 41


state 149
	parametro : ID .  (41)

	.  reduce 41


state 150
	parametro : var_type . ID  (40)
	parametro : var_type . error  (42)

	error  shift 170
	ID  shift 171
	.  error


state 151
	declare_statement : var_type FUN error '(' parametro . ')' BEGIN fun_body END  (29)

	')'  shift 172
	.  error


state 152
	declare_statement : var_type FUN ID '(' error . ')' BEGIN fun_body END ';'  (31)

	')'  shift 173
	.  error


state 153
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END ';'  (27)
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END error  (28)
	declare_statement : var_type FUN ID '(' parametro . ',' ')' BEGIN fun_body END ';'  (30)

	')'  shift 174
	','  shift 175
	.  error


state 154
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	expr_list : expr ',' expr .  (100)

	'+'  shift 80
	'-'  shift 81
	error  reduce 100
	';'  reduce 100
	','  reduce 100


state 155
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	expr_list : expr_list ',' expr .  (102)

	'+'  shift 80
	'-'  shift 81
	error  reduce 102
	';'  reduce 102
	','  reduce 102


state 156
	expr : expr . '+' term  (74)
	expr : expr . '-' term  (75)
	fun_invoc : ID '(' expr ',' expr . ')'  (85)

	')'  shift 176
	'+'  shift 80
	'-'  shift 81
	.  error


state 157
	if_statement : IF '(' cond ')' THEN error . END_IF  (50)

	END_IF  shift 177
	.  error


state 158
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (47)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (49)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (53)

	error  shift 178
	ELSE  shift 179
	END_IF  shift 180
	.  error


state 159
	if_statement : IF '(' fun_invoc ')' THEN error . END_IF  (58)

	END_IF  shift 181
	.  error


state 160
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . END_IF  (55)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . error  (57)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (61)

	error  shift 182
	ELSE  shift 183
	END_IF  shift 184
	.  error


state 161
	if_statement : IF cond THEN error ELSE ctrl_block_statement . END_IF  (54)

	END_IF  shift 185
	.  error


state 162
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (52)

	END_IF  shift 186
	.  error


state 163
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement . END_IF  (62)

	END_IF  shift 187
	.  error


state 164
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (60)

	END_IF  shift 188
	.  error


state 165
	declare_statement : TYPEDEF PAIR '<' var_type '>' error .  (36)

	.  reduce 36


state 166
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID . ';'  (32)
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID . error  (33)

	error  shift 189
	';'  shift 190
	.  error


state 167
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')' ';'  (89)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')' error  (90)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')' ';'  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')' error  (93)

	error  shift 33
	ID  shift 34
	CTE  shift 35
	.  error

	expr  goto 37
	cond  goto 191
	fun_invoc  goto 192
	term  goto 40
	fact  goto 41


state 168
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (91)

	.  reduce 91


state 169
	fact : fun_invoc .  (83)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc . ';'  (94)

	';'  shift 193
	error  reduce 83
	ID  reduce 83
	CTE  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 170
	parametro : var_type error .  (42)

	.  reduce 42


state 171
	parametro : var_type ID .  (40)

	.  reduce 40


state 172
	declare_statement : var_type FUN error '(' parametro ')' . BEGIN fun_body END  (29)

	BEGIN  shift 194
	.  error


state 173
	declare_statement : var_type FUN ID '(' error ')' . BEGIN fun_body END ';'  (31)

	BEGIN  shift 195
	.  error


state 174
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END ';'  (27)
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END error  (28)

	BEGIN  shift 196
	.  error


state 175
	declare_statement : var_type FUN ID '(' parametro ',' . ')' BEGIN fun_body END ';'  (30)

	')'  shift 197
	.  error


state 176
	fun_invoc : ID '(' expr ',' expr ')' .  (85)

	.  reduce 85


state 177
	if_statement : IF '(' cond ')' THEN error END_IF .  (50)

	.  reduce 50


state 178
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (49)

	.  reduce 49


state 179
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (53)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 198
	id_list  goto 28


state 180
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (47)

	.  reduce 47


state 181
	if_statement : IF '(' fun_invoc ')' THEN error END_IF .  (58)

	.  reduce 58


state 182
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement error .  (57)

	.  reduce 57


state 183
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (59)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (61)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 94
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 117
	ctrl_block_statement  goto 199
	id_list  goto 28


state 184
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF .  (55)

	.  reduce 55


state 185
	if_statement : IF cond THEN error ELSE ctrl_block_statement END_IF .  (54)

	.  reduce 54


state 186
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (52)

	.  reduce 52


state 187
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement END_IF .  (62)

	.  reduce 62


state 188
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (60)

	.  reduce 60


state 189
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID error .  (33)

	.  reduce 33


state 190
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID ';' .  (32)

	.  reduce 32


state 191
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')' ';'  (89)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')' error  (90)

	')'  shift 200
	.  error


state 192
	fact : fun_invoc .  (83)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')' ';'  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')' error  (93)

	')'  shift 201
	error  reduce 83
	ID  reduce 83
	CTE  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 193
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';' .  (94)

	.  reduce 94


state 194
	declare_statement : var_type FUN error '(' parametro ')' BEGIN . fun_body END  (29)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 202
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 203
	id_list  goto 28


state 195
	declare_statement : var_type FUN ID '(' error ')' BEGIN . fun_body END ';'  (31)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 202
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 204
	id_list  goto 28


state 196
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END ';'  (27)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END error  (28)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 202
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 205
	id_list  goto 28


state 197
	declare_statement : var_type FUN ID '(' parametro ',' ')' . BEGIN fun_body END ';'  (30)

	BEGIN  shift 206
	.  error


state 198
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (53)

	error  shift 207
	END_IF  shift 208
	.  error


state 199
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (59)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (61)

	error  shift 209
	END_IF  shift 210
	.  error


state 200
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' . ';'  (89)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' . error  (90)

	error  shift 211
	';'  shift 212
	.  error


state 201
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' . ';'  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' . error  (93)

	error  shift 213
	';'  shift 214
	.  error


state 202
	statement_list : statement_list . statement  (5)
	fun_body : statement_list .  (44)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	END  reduce 44

	statement  goto 51
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 203
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body . END  (29)

	END  shift 215
	.  error


state 204
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body . END ';'  (31)

	END  shift 216
	.  error


state 205
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END ';'  (27)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END error  (28)

	END  shift 217
	.  error


state 206
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN . fun_body END ';'  (30)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 202
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 218
	id_list  goto 28


state 207
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (53)

	.  reduce 53


state 208
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (51)

	.  reduce 51


state 209
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (61)

	.  reduce 61


state 210
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (59)

	.  reduce 59


state 211
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' error .  (90)

	.  reduce 90


state 212
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' ';' .  (89)

	.  reduce 89


state 213
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error .  (93)

	.  reduce 93


state 214
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';' .  (92)

	.  reduce 92


state 215
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body END .  (29)

	.  reduce 29


state 216
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body END . ';'  (31)

	';'  shift 219
	.  error


state 217
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END . ';'  (27)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END . error  (28)

	error  shift 220
	';'  shift 221
	.  error


state 218
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body . END ';'  (30)

	END  shift 222
	.  error


state 219
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body END ';' .  (31)

	.  reduce 31


state 220
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END error .  (28)

	.  reduce 28


state 221
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END ';' .  (27)

	.  reduce 27


state 222
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END . ';'  (30)

	';'  shift 223
	.  error


state 223
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END ';' .  (30)

	.  reduce 30


38 terminals, 27 nonterminals
105 grammar rules, 224 states
