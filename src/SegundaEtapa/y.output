   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error

   4  statement_list : statement
   5                 | statement_list statement

   6  statement : executable_statement
   7            | declare_statement
   8            | return_statement ';'
   9            | return_statement error
  10            | error

  11  executable_statement : if_statement ';'
  12                       | if_statement error
  13                       | assign_statement
  14                       | outf_statement ';'
  15                       | outf_statement error
  16                       | repeat_statement
  17                       | goto_statement ';'
  18                       | goto_statement error
  19                       | mult_assign_statement

  20  executable_statement_list : executable_statement
  21                            | executable_statement_list executable_statement

  22  declare_statement : var_type var_list ';'
  23                    | var_type var_list error
  24                    | var_type ID ';'
  25                    | var_type ID error
  26                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END ';'
  27                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END error
  28                    | var_type FUN error '(' parametro ')' BEGIN fun_body END
  29                    | var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END ';'
  30                    | var_type FUN ID '(' parametro ',' parametro ')' BEGIN fun_body END ';'
  31                    | TYPEDEF PAIR '<' var_type '>' ID ';'
  32                    | TYPEDEF PAIR '<' var_type '>' ID error
  33                    | TYPEDEF error
  34                    | TYPEDEF PAIR error
  35                    | TYPEDEF PAIR '<' var_type '>' error

  36  var_list : ID ',' ID
  37           | ID ',' var_list
  38           | ID ID

  39  parametro : var_type ID
  40            | ID
  41            | var_type error

  42  return_statement : RET '(' expr ')'

  43  fun_body : statement_list

  44  var_type : UINTEGER
  45           | SINGLE

  46  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  47               | IF cond THEN ctrl_block_statement END_IF
  48               | IF '(' cond ')' THEN ctrl_block_statement error
  49               | IF '(' cond ')' THEN error END_IF
  50               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  51               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  52               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  53               | IF cond THEN error ELSE ctrl_block_statement END_IF
  54               | IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF
  55               | IF fun_invoc THEN ctrl_block_statement END_IF
  56               | IF '(' fun_invoc ')' THEN ctrl_block_statement error
  57               | IF '(' fun_invoc ')' THEN error END_IF
  58               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  59               | IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  60               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  61               | IF fun_invoc THEN error ELSE ctrl_block_statement END_IF

  62  ctrl_block_statement : executable_statement_list

  63  cond : expr cond_op expr
  64       | expr expr

  65  cond_op : '<'
  66          | '>'
  67          | '='
  68          | NEQ
  69          | LEQ
  70          | MEQ

  71  assign_statement : ID ASSIGN expr ';'
  72                   | ID ASSIGN expr error

  73  expr : expr '+' term
  74       | expr '-' term
  75       | term
  76       | error '+' term
  77       | error '-' term
  78       | expr '+' error
  79       | expr '-' error

  80  term : term '*' fact
  81       | term '/' fact
  82       | fact
  83       | term error fact
  84       | error '*' fact
  85       | error '/' fact
  86       | term '*' error
  87       | term '/' error

  88  fact : ID
  89       | CTE
  90       | fun_invoc

  91  fun_invoc : ID '(' expr ')'
  92            | ID '(' expr ',' expr ')'

  93  outf_statement : OUTF '(' expr ')'
  94                 | OUTF '(' CHARCH ')'
  95                 | OUTF error

  96  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' ';'
  97                   | REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' error
  98                   | REPEAT BEGIN executable_statement_list END UNTIL cond
  99                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';'
 100                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error
 101                   | REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';'
 102                   | REPEAT BEGIN error
 103                   | REPEAT BEGIN executable_statement_list END error

 104  mult_assign_statement : id_list ASSIGN expr_list

 105  id_list : ID ',' ID
 106          | id_list ',' ID

 107  expr_list : expr ',' expr ';'
 108            | expr ',' expr error
 109            | expr ',' expr_list
 110            | expr expr_list

 111  goto_statement : GOTO TAG '@'
 112                 | GOTO error

state 0
	$accept : . prog $end  (0)

	error  shift 1
	ID  shift 2
	.  error

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)

	BEGIN  shift 5
	.  error


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 16
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 5
	prog : ID BEGIN . statement_list END  (1)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 29
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 6
	statement : error .  (10)

	.  reduce 10


state 7
	assign_statement : ID . ASSIGN expr ';'  (71)
	assign_statement : ID . ASSIGN expr error  (72)
	id_list : ID . ',' ID  (105)

	ASSIGN  shift 30
	','  shift 31
	.  error


state 8
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (46)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (47)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (48)
	if_statement : IF . '(' cond ')' THEN error END_IF  (49)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (52)
	if_statement : IF . cond THEN error ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF . fun_invoc THEN ctrl_block_statement END_IF  (55)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement error  (56)
	if_statement : IF . '(' fun_invoc ')' THEN error END_IF  (57)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF . fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)
	if_statement : IF . fun_invoc THEN error ELSE ctrl_block_statement END_IF  (61)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	'('  shift 35
	.  error

	expr  goto 36
	cond  goto 37
	fun_invoc  goto 38
	term  goto 39
	fact  goto 40


state 9
	outf_statement : OUTF . '(' expr ')'  (93)
	outf_statement : OUTF . '(' CHARCH ')'  (94)
	outf_statement : OUTF . error  (95)

	error  shift 41
	'('  shift 42
	.  error


state 10
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID ';'  (31)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID error  (32)
	declare_statement : TYPEDEF . error  (33)
	declare_statement : TYPEDEF . PAIR error  (34)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' error  (35)

	error  shift 43
	PAIR  shift 44
	.  error


state 11
	return_statement : RET . '(' expr ')'  (42)

	'('  shift 45
	.  error


state 12
	var_type : UINTEGER .  (44)

	.  reduce 44


state 13
	var_type : SINGLE .  (45)

	.  reduce 45


state 14
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (98)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT . BEGIN error  (102)
	repeat_statement : REPEAT . BEGIN executable_statement_list END error  (103)

	BEGIN  shift 46
	.  error


state 15
	goto_statement : GOTO . TAG '@'  (111)
	goto_statement : GOTO . error  (112)

	error  shift 47
	TAG  shift 48
	.  error


state 16
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (5)

	error  shift 6
	ID  shift 7
	IF  shift 8
	END  shift 49
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement  goto 50
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 17
	statement_list : statement .  (4)

	.  reduce 4


state 18
	statement : executable_statement .  (6)

	.  reduce 6


state 19
	statement : declare_statement .  (7)

	.  reduce 7


state 20
	statement : return_statement . ';'  (8)
	statement : return_statement . error  (9)

	error  shift 51
	';'  shift 52
	.  error


state 21
	executable_statement : if_statement . ';'  (11)
	executable_statement : if_statement . error  (12)

	error  shift 53
	';'  shift 54
	.  error


state 22
	executable_statement : assign_statement .  (13)

	.  reduce 13


state 23
	executable_statement : outf_statement . ';'  (14)
	executable_statement : outf_statement . error  (15)

	error  shift 55
	';'  shift 56
	.  error


state 24
	executable_statement : repeat_statement .  (16)

	.  reduce 16


state 25
	executable_statement : goto_statement . ';'  (17)
	executable_statement : goto_statement . error  (18)

	error  shift 57
	';'  shift 58
	.  error


state 26
	executable_statement : mult_assign_statement .  (19)

	.  reduce 19


state 27
	declare_statement : var_type . var_list ';'  (22)
	declare_statement : var_type . var_list error  (23)
	declare_statement : var_type . ID ';'  (24)
	declare_statement : var_type . ID error  (25)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END ';'  (26)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END error  (27)
	declare_statement : var_type . FUN error '(' parametro ')' BEGIN fun_body END  (28)
	declare_statement : var_type . FUN ID '(' parametro ',' ')' BEGIN fun_body END ';'  (29)
	declare_statement : var_type . FUN ID '(' parametro ',' parametro ')' BEGIN fun_body END ';'  (30)

	ID  shift 59
	FUN  shift 60
	.  error

	var_list  goto 61


state 28
	mult_assign_statement : id_list . ASSIGN expr_list  (104)
	id_list : id_list . ',' ID  (106)

	ASSIGN  shift 62
	','  shift 63
	.  error


state 29
	prog : ID BEGIN statement_list . END  (1)
	statement_list : statement_list . statement  (5)

	error  shift 6
	ID  shift 7
	IF  shift 8
	END  shift 64
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement  goto 50
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 30
	assign_statement : ID ASSIGN . expr ';'  (71)
	assign_statement : ID ASSIGN . expr error  (72)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 65
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40


state 31
	id_list : ID ',' . ID  (105)

	ID  shift 67
	.  error


state 32
	expr : error . '+' term  (76)
	expr : error . '-' term  (77)
	term : error . '*' fact  (84)
	term : error . '/' fact  (85)

	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'/'  shift 71
	.  error


state 33
	fact : ID .  (88)
	fun_invoc : ID . '(' expr ')'  (91)
	fun_invoc : ID . '(' expr ',' expr ')'  (92)

	'('  shift 72
	error  reduce 88
	ID  reduce 88
	CTE  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	MEQ  reduce 88
	IF  reduce 88
	THEN  reduce 88
	ELSE  reduce 88
	END  reduce 88
	END_IF  reduce 88
	OUTF  reduce 88
	TYPEDEF  reduce 88
	RET  reduce 88
	UINTEGER  reduce 88
	SINGLE  reduce 88
	REPEAT  reduce 88
	GOTO  reduce 88
	';'  reduce 88
	')'  reduce 88
	','  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'='  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88


state 34
	fact : CTE .  (89)

	.  reduce 89


state 35
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (46)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (48)
	if_statement : IF '(' . cond ')' THEN error END_IF  (49)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (52)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement error  (56)
	if_statement : IF '(' . fun_invoc ')' THEN error END_IF  (57)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 36
	cond  goto 73
	fun_invoc  goto 74
	term  goto 39
	fact  goto 40


state 36
	cond : expr . cond_op expr  (63)
	cond : expr . expr  (64)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	NEQ  shift 75
	LEQ  shift 76
	MEQ  shift 77
	'<'  shift 78
	'>'  shift 79
	'='  shift 80
	'+'  shift 81
	'-'  shift 82
	.  error

	expr  goto 83
	fun_invoc  goto 66
	cond_op  goto 84
	term  goto 39
	fact  goto 40


state 37
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (47)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF cond . THEN error ELSE ctrl_block_statement END_IF  (53)

	THEN  shift 85
	.  error


state 38
	if_statement : IF fun_invoc . THEN ctrl_block_statement END_IF  (55)
	if_statement : IF fun_invoc . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF fun_invoc . THEN error ELSE ctrl_block_statement END_IF  (61)
	fact : fun_invoc .  (90)

	THEN  shift 86
	error  reduce 90
	ID  reduce 90
	CTE  reduce 90
	NEQ  reduce 90
	LEQ  reduce 90
	MEQ  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	'='  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'*'  reduce 90
	'/'  reduce 90


39: shift/reduce conflict (shift 87, reduce 75) on error
state 39
	expr : term .  (75)
	term : term . '*' fact  (80)
	term : term . '/' fact  (81)
	term : term . error fact  (83)
	term : term . '*' error  (86)
	term : term . '/' error  (87)

	error  shift 87
	'*'  shift 88
	'/'  shift 89
	ID  reduce 75
	CTE  reduce 75
	NEQ  reduce 75
	LEQ  reduce 75
	MEQ  reduce 75
	IF  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	END  reduce 75
	END_IF  reduce 75
	OUTF  reduce 75
	TYPEDEF  reduce 75
	RET  reduce 75
	UINTEGER  reduce 75
	SINGLE  reduce 75
	REPEAT  reduce 75
	GOTO  reduce 75
	';'  reduce 75
	')'  reduce 75
	','  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	'='  reduce 75
	'+'  reduce 75
	'-'  reduce 75


state 40
	term : fact .  (82)

	.  reduce 82


state 41
	outf_statement : OUTF error .  (95)

	.  reduce 95


state 42
	outf_statement : OUTF '(' . expr ')'  (93)
	outf_statement : OUTF '(' . CHARCH ')'  (94)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	CHARCH  shift 90
	.  error

	expr  goto 91
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40


state 43
	declare_statement : TYPEDEF error .  (33)

	.  reduce 33


state 44
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID ';'  (31)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID error  (32)
	declare_statement : TYPEDEF PAIR . error  (34)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' error  (35)

	error  shift 92
	'<'  shift 93
	.  error


state 45
	return_statement : RET '(' . expr ')'  (42)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 94
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40


state 46
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (98)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT BEGIN . error  (102)
	repeat_statement : REPEAT BEGIN . executable_statement_list END error  (103)

	error  shift 95
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 97
	id_list  goto 28


state 47
	goto_statement : GOTO error .  (112)

	.  reduce 112


state 48
	goto_statement : GOTO TAG . '@'  (111)

	'@'  shift 98
	.  error


state 49
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 50
	statement_list : statement_list statement .  (5)

	.  reduce 5


state 51
	statement : return_statement error .  (9)

	.  reduce 9


state 52
	statement : return_statement ';' .  (8)

	.  reduce 8


state 53
	executable_statement : if_statement error .  (12)

	.  reduce 12


state 54
	executable_statement : if_statement ';' .  (11)

	.  reduce 11


state 55
	executable_statement : outf_statement error .  (15)

	.  reduce 15


state 56
	executable_statement : outf_statement ';' .  (14)

	.  reduce 14


state 57
	executable_statement : goto_statement error .  (18)

	.  reduce 18


state 58
	executable_statement : goto_statement ';' .  (17)

	.  reduce 17


state 59
	declare_statement : var_type ID . ';'  (24)
	declare_statement : var_type ID . error  (25)
	var_list : ID . ',' ID  (36)
	var_list : ID . ',' var_list  (37)
	var_list : ID . ID  (38)

	error  shift 99
	ID  shift 100
	';'  shift 101
	','  shift 102
	.  error


state 60
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END ';'  (26)
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END error  (27)
	declare_statement : var_type FUN . error '(' parametro ')' BEGIN fun_body END  (28)
	declare_statement : var_type FUN . ID '(' parametro ',' ')' BEGIN fun_body END ';'  (29)
	declare_statement : var_type FUN . ID '(' parametro ',' parametro ')' BEGIN fun_body END ';'  (30)

	error  shift 103
	ID  shift 104
	.  error


state 61
	declare_statement : var_type var_list . ';'  (22)
	declare_statement : var_type var_list . error  (23)

	error  shift 105
	';'  shift 106
	.  error


state 62
	mult_assign_statement : id_list ASSIGN . expr_list  (104)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 107
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40
	expr_list  goto 108


state 63
	id_list : id_list ',' . ID  (106)

	ID  shift 109
	.  error


state 64
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 65
	assign_statement : ID ASSIGN expr . ';'  (71)
	assign_statement : ID ASSIGN expr . error  (72)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)

	error  shift 110
	';'  shift 111
	'+'  shift 81
	'-'  shift 82
	.  error


state 66
	fact : fun_invoc .  (90)

	.  reduce 90


state 67
	id_list : ID ',' ID .  (105)

	.  reduce 105


state 68
	expr : error '+' . term  (76)

	error  shift 112
	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	term  goto 113
	fact  goto 40


state 69
	expr : error '-' . term  (77)

	error  shift 112
	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	term  goto 114
	fact  goto 40


state 70
	term : error '*' . fact  (84)

	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	fact  goto 115


state 71
	term : error '/' . fact  (85)

	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	fact  goto 116


state 72
	fun_invoc : ID '(' . expr ')'  (91)
	fun_invoc : ID '(' . expr ',' expr ')'  (92)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 117
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40


state 73
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (46)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (48)
	if_statement : IF '(' cond . ')' THEN error END_IF  (49)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (52)

	')'  shift 118
	.  error


state 74
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement error  (56)
	if_statement : IF '(' fun_invoc . ')' THEN error END_IF  (57)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)
	fact : fun_invoc .  (90)

	')'  shift 119
	error  reduce 90
	ID  reduce 90
	CTE  reduce 90
	NEQ  reduce 90
	LEQ  reduce 90
	MEQ  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	'='  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'*'  reduce 90
	'/'  reduce 90


state 75
	cond_op : NEQ .  (68)

	.  reduce 68


state 76
	cond_op : LEQ .  (69)

	.  reduce 69


state 77
	cond_op : MEQ .  (70)

	.  reduce 70


state 78
	cond_op : '<' .  (65)

	.  reduce 65


state 79
	cond_op : '>' .  (66)

	.  reduce 66


state 80
	cond_op : '=' .  (67)

	.  reduce 67


state 81
	expr : expr '+' . term  (73)
	expr : expr '+' . error  (78)

	error  shift 120
	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	term  goto 121
	fact  goto 40


state 82
	expr : expr '-' . term  (74)
	expr : expr '-' . error  (79)

	error  shift 122
	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	term  goto 123
	fact  goto 40


state 83
	cond : expr expr .  (64)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)

	'+'  shift 81
	'-'  shift 82
	error  reduce 64
	ID  reduce 64
	IF  reduce 64
	THEN  reduce 64
	ELSE  reduce 64
	END  reduce 64
	END_IF  reduce 64
	OUTF  reduce 64
	TYPEDEF  reduce 64
	RET  reduce 64
	UINTEGER  reduce 64
	SINGLE  reduce 64
	REPEAT  reduce 64
	GOTO  reduce 64
	')'  reduce 64


state 84
	cond : expr cond_op . expr  (63)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 124
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40


state 85
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (47)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (51)
	if_statement : IF cond THEN . error ELSE ctrl_block_statement END_IF  (53)

	error  shift 125
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 127
	id_list  goto 28


state 86
	if_statement : IF fun_invoc THEN . ctrl_block_statement END_IF  (55)
	if_statement : IF fun_invoc THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF fun_invoc THEN . error ELSE ctrl_block_statement END_IF  (61)

	error  shift 128
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 129
	id_list  goto 28


state 87
	term : term error . fact  (83)

	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	fact  goto 130


state 88
	term : term '*' . fact  (80)
	term : term '*' . error  (86)

	error  shift 131
	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	fact  goto 132


state 89
	term : term '/' . fact  (81)
	term : term '/' . error  (87)

	error  shift 133
	ID  shift 33
	CTE  shift 34
	.  error

	fun_invoc  goto 66
	fact  goto 134


state 90
	outf_statement : OUTF '(' CHARCH . ')'  (94)

	')'  shift 135
	.  error


state 91
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)
	outf_statement : OUTF '(' expr . ')'  (93)

	')'  shift 136
	'+'  shift 81
	'-'  shift 82
	.  error


state 92
	declare_statement : TYPEDEF PAIR error .  (34)

	.  reduce 34


state 93
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID ';'  (31)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID error  (32)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' error  (35)

	UINTEGER  shift 12
	SINGLE  shift 13
	.  error

	var_type  goto 137


state 94
	return_statement : RET '(' expr . ')'  (42)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)

	')'  shift 138
	'+'  shift 81
	'-'  shift 82
	.  error


state 95
	repeat_statement : REPEAT BEGIN error .  (102)

	.  reduce 102


state 96
	executable_statement_list : executable_statement .  (20)

	.  reduce 20


state 97
	executable_statement_list : executable_statement_list . executable_statement  (21)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (98)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list . END error  (103)

	ID  shift 7
	IF  shift 8
	END  shift 139
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 140
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	id_list  goto 28


state 98
	goto_statement : GOTO TAG '@' .  (111)

	.  reduce 111


state 99
	declare_statement : var_type ID error .  (25)

	.  reduce 25


state 100
	var_list : ID ID .  (38)

	.  reduce 38


state 101
	declare_statement : var_type ID ';' .  (24)

	.  reduce 24


state 102
	var_list : ID ',' . ID  (36)
	var_list : ID ',' . var_list  (37)

	ID  shift 141
	.  error

	var_list  goto 142


state 103
	declare_statement : var_type FUN error . '(' parametro ')' BEGIN fun_body END  (28)

	'('  shift 143
	.  error


state 104
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END ';'  (26)
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END error  (27)
	declare_statement : var_type FUN ID . '(' parametro ',' ')' BEGIN fun_body END ';'  (29)
	declare_statement : var_type FUN ID . '(' parametro ',' parametro ')' BEGIN fun_body END ';'  (30)

	'('  shift 144
	.  error


state 105
	declare_statement : var_type var_list error .  (23)

	.  reduce 23


state 106
	declare_statement : var_type var_list ';' .  (22)

	.  reduce 22


state 107
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)
	expr_list : expr . ',' expr ';'  (107)
	expr_list : expr . ',' expr error  (108)
	expr_list : expr . ',' expr_list  (109)
	expr_list : expr . expr_list  (110)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	','  shift 145
	'+'  shift 81
	'-'  shift 82
	.  error

	expr  goto 107
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40
	expr_list  goto 146


state 108
	mult_assign_statement : id_list ASSIGN expr_list .  (104)

	.  reduce 104


state 109
	id_list : id_list ',' ID .  (106)

	.  reduce 106


state 110
	assign_statement : ID ASSIGN expr error .  (72)

	.  reduce 72


state 111
	assign_statement : ID ASSIGN expr ';' .  (71)

	.  reduce 71


state 112
	term : error . '*' fact  (84)
	term : error . '/' fact  (85)

	'*'  shift 70
	'/'  shift 71
	.  error


113: shift/reduce conflict (shift 87, reduce 76) on error
state 113
	expr : error '+' term .  (76)
	term : term . '*' fact  (80)
	term : term . '/' fact  (81)
	term : term . error fact  (83)
	term : term . '*' error  (86)
	term : term . '/' error  (87)

	error  shift 87
	'*'  shift 88
	'/'  shift 89
	ID  reduce 76
	CTE  reduce 76
	NEQ  reduce 76
	LEQ  reduce 76
	MEQ  reduce 76
	IF  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	END  reduce 76
	END_IF  reduce 76
	OUTF  reduce 76
	TYPEDEF  reduce 76
	RET  reduce 76
	UINTEGER  reduce 76
	SINGLE  reduce 76
	REPEAT  reduce 76
	GOTO  reduce 76
	';'  reduce 76
	')'  reduce 76
	','  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	'='  reduce 76
	'+'  reduce 76
	'-'  reduce 76


114: shift/reduce conflict (shift 87, reduce 77) on error
state 114
	expr : error '-' term .  (77)
	term : term . '*' fact  (80)
	term : term . '/' fact  (81)
	term : term . error fact  (83)
	term : term . '*' error  (86)
	term : term . '/' error  (87)

	error  shift 87
	'*'  shift 88
	'/'  shift 89
	ID  reduce 77
	CTE  reduce 77
	NEQ  reduce 77
	LEQ  reduce 77
	MEQ  reduce 77
	IF  reduce 77
	THEN  reduce 77
	ELSE  reduce 77
	END  reduce 77
	END_IF  reduce 77
	OUTF  reduce 77
	TYPEDEF  reduce 77
	RET  reduce 77
	UINTEGER  reduce 77
	SINGLE  reduce 77
	REPEAT  reduce 77
	GOTO  reduce 77
	';'  reduce 77
	')'  reduce 77
	','  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	'='  reduce 77
	'+'  reduce 77
	'-'  reduce 77


state 115
	term : error '*' fact .  (84)

	.  reduce 84


state 116
	term : error '/' fact .  (85)

	.  reduce 85


state 117
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)
	fun_invoc : ID '(' expr . ')'  (91)
	fun_invoc : ID '(' expr . ',' expr ')'  (92)

	')'  shift 147
	','  shift 148
	'+'  shift 81
	'-'  shift 82
	.  error


state 118
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (46)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (48)
	if_statement : IF '(' cond ')' . THEN error END_IF  (49)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (52)

	THEN  shift 149
	.  error


state 119
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement error  (56)
	if_statement : IF '(' fun_invoc ')' . THEN error END_IF  (57)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)

	THEN  shift 150
	.  error


state 120
	expr : expr '+' error .  (78)
	term : error . '*' fact  (84)
	term : error . '/' fact  (85)

	'*'  shift 70
	'/'  shift 71
	error  reduce 78
	ID  reduce 78
	CTE  reduce 78
	NEQ  reduce 78
	LEQ  reduce 78
	MEQ  reduce 78
	IF  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	END  reduce 78
	END_IF  reduce 78
	OUTF  reduce 78
	TYPEDEF  reduce 78
	RET  reduce 78
	UINTEGER  reduce 78
	SINGLE  reduce 78
	REPEAT  reduce 78
	GOTO  reduce 78
	';'  reduce 78
	')'  reduce 78
	','  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	'='  reduce 78
	'+'  reduce 78
	'-'  reduce 78


121: shift/reduce conflict (shift 87, reduce 73) on error
state 121
	expr : expr '+' term .  (73)
	term : term . '*' fact  (80)
	term : term . '/' fact  (81)
	term : term . error fact  (83)
	term : term . '*' error  (86)
	term : term . '/' error  (87)

	error  shift 87
	'*'  shift 88
	'/'  shift 89
	ID  reduce 73
	CTE  reduce 73
	NEQ  reduce 73
	LEQ  reduce 73
	MEQ  reduce 73
	IF  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	END  reduce 73
	END_IF  reduce 73
	OUTF  reduce 73
	TYPEDEF  reduce 73
	RET  reduce 73
	UINTEGER  reduce 73
	SINGLE  reduce 73
	REPEAT  reduce 73
	GOTO  reduce 73
	';'  reduce 73
	')'  reduce 73
	','  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	'='  reduce 73
	'+'  reduce 73
	'-'  reduce 73


state 122
	expr : expr '-' error .  (79)
	term : error . '*' fact  (84)
	term : error . '/' fact  (85)

	'*'  shift 70
	'/'  shift 71
	error  reduce 79
	ID  reduce 79
	CTE  reduce 79
	NEQ  reduce 79
	LEQ  reduce 79
	MEQ  reduce 79
	IF  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	GOTO  reduce 79
	';'  reduce 79
	')'  reduce 79
	','  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	'='  reduce 79
	'+'  reduce 79
	'-'  reduce 79


123: shift/reduce conflict (shift 87, reduce 74) on error
state 123
	expr : expr '-' term .  (74)
	term : term . '*' fact  (80)
	term : term . '/' fact  (81)
	term : term . error fact  (83)
	term : term . '*' error  (86)
	term : term . '/' error  (87)

	error  shift 87
	'*'  shift 88
	'/'  shift 89
	ID  reduce 74
	CTE  reduce 74
	NEQ  reduce 74
	LEQ  reduce 74
	MEQ  reduce 74
	IF  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	END  reduce 74
	END_IF  reduce 74
	OUTF  reduce 74
	TYPEDEF  reduce 74
	RET  reduce 74
	UINTEGER  reduce 74
	SINGLE  reduce 74
	REPEAT  reduce 74
	GOTO  reduce 74
	';'  reduce 74
	')'  reduce 74
	','  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	'='  reduce 74
	'+'  reduce 74
	'-'  reduce 74


state 124
	cond : expr cond_op expr .  (63)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)

	'+'  shift 81
	'-'  shift 82
	error  reduce 63
	ID  reduce 63
	IF  reduce 63
	THEN  reduce 63
	ELSE  reduce 63
	END  reduce 63
	END_IF  reduce 63
	OUTF  reduce 63
	TYPEDEF  reduce 63
	RET  reduce 63
	UINTEGER  reduce 63
	SINGLE  reduce 63
	REPEAT  reduce 63
	GOTO  reduce 63
	')'  reduce 63


state 125
	if_statement : IF cond THEN error . ELSE ctrl_block_statement END_IF  (53)

	ELSE  shift 151
	.  error


state 126
	executable_statement_list : executable_statement_list . executable_statement  (21)
	ctrl_block_statement : executable_statement_list .  (62)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	error  reduce 62
	ELSE  reduce 62
	END_IF  reduce 62

	executable_statement  goto 140
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	id_list  goto 28


state 127
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (47)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (51)

	ELSE  shift 152
	END_IF  shift 153
	.  error


state 128
	if_statement : IF fun_invoc THEN error . ELSE ctrl_block_statement END_IF  (61)

	ELSE  shift 154
	.  error


state 129
	if_statement : IF fun_invoc THEN ctrl_block_statement . END_IF  (55)
	if_statement : IF fun_invoc THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (59)

	ELSE  shift 155
	END_IF  shift 156
	.  error


state 130
	term : term error fact .  (83)

	.  reduce 83


state 131
	term : term '*' error .  (86)

	.  reduce 86


state 132
	term : term '*' fact .  (80)

	.  reduce 80


state 133
	term : term '/' error .  (87)

	.  reduce 87


state 134
	term : term '/' fact .  (81)

	.  reduce 81


state 135
	outf_statement : OUTF '(' CHARCH ')' .  (94)

	.  reduce 94


state 136
	outf_statement : OUTF '(' expr ')' .  (93)

	.  reduce 93


state 137
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID ';'  (31)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID error  (32)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' error  (35)

	'>'  shift 157
	.  error


state 138
	return_statement : RET '(' expr ')' .  (42)

	.  reduce 42


state 139
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (98)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END . error  (103)

	error  shift 158
	UNTIL  shift 159
	.  error


state 140
	executable_statement_list : executable_statement_list executable_statement .  (21)

	.  reduce 21


state 141
	var_list : ID . ',' ID  (36)
	var_list : ID ',' ID .  (36)
	var_list : ID . ',' var_list  (37)
	var_list : ID . ID  (38)

	ID  shift 100
	','  shift 102
	error  reduce 36
	';'  reduce 36


state 142
	var_list : ID ',' var_list .  (37)

	.  reduce 37


state 143
	declare_statement : var_type FUN error '(' . parametro ')' BEGIN fun_body END  (28)

	ID  shift 160
	UINTEGER  shift 12
	SINGLE  shift 13
	.  error

	var_type  goto 161
	parametro  goto 162


state 144
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END ';'  (26)
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END error  (27)
	declare_statement : var_type FUN ID '(' . parametro ',' ')' BEGIN fun_body END ';'  (29)
	declare_statement : var_type FUN ID '(' . parametro ',' parametro ')' BEGIN fun_body END ';'  (30)

	ID  shift 160
	UINTEGER  shift 12
	SINGLE  shift 13
	.  error

	var_type  goto 161
	parametro  goto 163


state 145
	expr_list : expr ',' . expr ';'  (107)
	expr_list : expr ',' . expr error  (108)
	expr_list : expr ',' . expr_list  (109)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 164
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40
	expr_list  goto 165


state 146
	expr_list : expr expr_list .  (110)

	.  reduce 110


state 147
	fun_invoc : ID '(' expr ')' .  (91)

	.  reduce 91


state 148
	fun_invoc : ID '(' expr ',' . expr ')'  (92)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 166
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40


state 149
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (46)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (48)
	if_statement : IF '(' cond ')' THEN . error END_IF  (49)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (52)

	error  shift 167
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 168
	id_list  goto 28


state 150
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement END_IF  (54)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement error  (56)
	if_statement : IF '(' fun_invoc ')' THEN . error END_IF  (57)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (60)

	error  shift 169
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 170
	id_list  goto 28


state 151
	if_statement : IF cond THEN error ELSE . ctrl_block_statement END_IF  (53)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 171
	id_list  goto 28


state 152
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (51)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 172
	id_list  goto 28


state 153
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (47)

	.  reduce 47


state 154
	if_statement : IF fun_invoc THEN error ELSE . ctrl_block_statement END_IF  (61)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 173
	id_list  goto 28


state 155
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (59)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 174
	id_list  goto 28


state 156
	if_statement : IF fun_invoc THEN ctrl_block_statement END_IF .  (55)

	.  reduce 55


state 157
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID ';'  (31)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID error  (32)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . error  (35)

	error  shift 175
	ID  shift 176
	.  error


state 158
	repeat_statement : REPEAT BEGIN executable_statement_list END error .  (103)

	.  reduce 103


state 159
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (98)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . fun_invoc ';'  (101)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	'('  shift 177
	.  error

	expr  goto 36
	cond  goto 178
	fun_invoc  goto 179
	term  goto 39
	fact  goto 40


state 160
	parametro : ID .  (40)

	.  reduce 40


state 161
	parametro : var_type . ID  (39)
	parametro : var_type . error  (41)

	error  shift 180
	ID  shift 181
	.  error


state 162
	declare_statement : var_type FUN error '(' parametro . ')' BEGIN fun_body END  (28)

	')'  shift 182
	.  error


state 163
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END ';'  (26)
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END error  (27)
	declare_statement : var_type FUN ID '(' parametro . ',' ')' BEGIN fun_body END ';'  (29)
	declare_statement : var_type FUN ID '(' parametro . ',' parametro ')' BEGIN fun_body END ';'  (30)

	')'  shift 183
	','  shift 184
	.  error


state 164
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)
	expr_list : expr . ',' expr ';'  (107)
	expr_list : expr ',' expr . ';'  (107)
	expr_list : expr . ',' expr error  (108)
	expr_list : expr ',' expr . error  (108)
	expr_list : expr . ',' expr_list  (109)
	expr_list : expr . expr_list  (110)

	error  shift 185
	ID  shift 33
	CTE  shift 34
	';'  shift 186
	','  shift 145
	'+'  shift 81
	'-'  shift 82
	.  error

	expr  goto 107
	fun_invoc  goto 66
	term  goto 39
	fact  goto 40
	expr_list  goto 146


state 165
	expr_list : expr ',' expr_list .  (109)

	.  reduce 109


state 166
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr : expr . '+' error  (78)
	expr : expr . '-' error  (79)
	fun_invoc : ID '(' expr ',' expr . ')'  (92)

	')'  shift 187
	'+'  shift 81
	'-'  shift 82
	.  error


state 167
	if_statement : IF '(' cond ')' THEN error . END_IF  (49)

	END_IF  shift 188
	.  error


state 168
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (46)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (48)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (52)

	error  shift 189
	ELSE  shift 190
	END_IF  shift 191
	.  error


state 169
	if_statement : IF '(' fun_invoc ')' THEN error . END_IF  (57)

	END_IF  shift 192
	.  error


state 170
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . END_IF  (54)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . error  (56)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (60)

	error  shift 193
	ELSE  shift 194
	END_IF  shift 195
	.  error


state 171
	if_statement : IF cond THEN error ELSE ctrl_block_statement . END_IF  (53)

	END_IF  shift 196
	.  error


state 172
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (51)

	END_IF  shift 197
	.  error


state 173
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement . END_IF  (61)

	END_IF  shift 198
	.  error


state 174
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (59)

	END_IF  shift 199
	.  error


state 175
	declare_statement : TYPEDEF PAIR '<' var_type '>' error .  (35)

	.  reduce 35


state 176
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID . ';'  (31)
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID . error  (32)

	error  shift 200
	';'  shift 201
	.  error


state 177
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')' error  (100)

	error  shift 32
	ID  shift 33
	CTE  shift 34
	.  error

	expr  goto 36
	cond  goto 202
	fun_invoc  goto 203
	term  goto 39
	fact  goto 40


state 178
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (98)

	.  reduce 98


state 179
	fact : fun_invoc .  (90)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc . ';'  (101)

	';'  shift 204
	error  reduce 90
	ID  reduce 90
	CTE  reduce 90
	NEQ  reduce 90
	LEQ  reduce 90
	MEQ  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	'='  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'*'  reduce 90
	'/'  reduce 90


state 180
	parametro : var_type error .  (41)

	.  reduce 41


state 181
	parametro : var_type ID .  (39)

	.  reduce 39


state 182
	declare_statement : var_type FUN error '(' parametro ')' . BEGIN fun_body END  (28)

	BEGIN  shift 205
	.  error


state 183
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END ';'  (26)
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END error  (27)

	BEGIN  shift 206
	.  error


state 184
	declare_statement : var_type FUN ID '(' parametro ',' . ')' BEGIN fun_body END ';'  (29)
	declare_statement : var_type FUN ID '(' parametro ',' . parametro ')' BEGIN fun_body END ';'  (30)

	ID  shift 160
	UINTEGER  shift 12
	SINGLE  shift 13
	')'  shift 207
	.  error

	var_type  goto 161
	parametro  goto 208


state 185
	expr : error . '+' term  (76)
	expr : error . '-' term  (77)
	term : error . '*' fact  (84)
	term : error . '/' fact  (85)
	expr_list : expr ',' expr error .  (108)

	'+'  shift 68
	'-'  shift 69
	'*'  shift 70
	'/'  shift 71
	error  reduce 108
	ID  reduce 108
	IF  reduce 108
	ELSE  reduce 108
	END  reduce 108
	END_IF  reduce 108
	OUTF  reduce 108
	TYPEDEF  reduce 108
	RET  reduce 108
	UINTEGER  reduce 108
	SINGLE  reduce 108
	REPEAT  reduce 108
	GOTO  reduce 108


state 186
	expr_list : expr ',' expr ';' .  (107)

	.  reduce 107


state 187
	fun_invoc : ID '(' expr ',' expr ')' .  (92)

	.  reduce 92


state 188
	if_statement : IF '(' cond ')' THEN error END_IF .  (49)

	.  reduce 49


state 189
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (48)

	.  reduce 48


state 190
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (52)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 209
	id_list  goto 28


state 191
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (46)

	.  reduce 46


state 192
	if_statement : IF '(' fun_invoc ')' THEN error END_IF .  (57)

	.  reduce 57


state 193
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement error .  (56)

	.  reduce 56


state 194
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (60)

	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	executable_statement  goto 96
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	executable_statement_list  goto 126
	ctrl_block_statement  goto 210
	id_list  goto 28


state 195
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF .  (54)

	.  reduce 54


state 196
	if_statement : IF cond THEN error ELSE ctrl_block_statement END_IF .  (53)

	.  reduce 53


state 197
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (51)

	.  reduce 51


state 198
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement END_IF .  (61)

	.  reduce 61


state 199
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (59)

	.  reduce 59


state 200
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID error .  (32)

	.  reduce 32


state 201
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID ';' .  (31)

	.  reduce 31


state 202
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')' error  (97)

	')'  shift 211
	.  error


state 203
	fact : fun_invoc .  (90)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')' error  (100)

	')'  shift 212
	error  reduce 90
	ID  reduce 90
	CTE  reduce 90
	NEQ  reduce 90
	LEQ  reduce 90
	MEQ  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	'='  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'*'  reduce 90
	'/'  reduce 90


state 204
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';' .  (101)

	.  reduce 101


state 205
	declare_statement : var_type FUN error '(' parametro ')' BEGIN . fun_body END  (28)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 213
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 214
	id_list  goto 28


state 206
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END ';'  (26)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END error  (27)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 213
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 215
	id_list  goto 28


state 207
	declare_statement : var_type FUN ID '(' parametro ',' ')' . BEGIN fun_body END ';'  (29)

	BEGIN  shift 216
	.  error


state 208
	declare_statement : var_type FUN ID '(' parametro ',' parametro . ')' BEGIN fun_body END ';'  (30)

	')'  shift 217
	.  error


state 209
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (50)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (52)

	error  shift 218
	END_IF  shift 219
	.  error


state 210
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (60)

	error  shift 220
	END_IF  shift 221
	.  error


state 211
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' . ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' . error  (97)

	error  shift 222
	';'  shift 223
	.  error


state 212
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' . ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' . error  (100)

	error  shift 224
	';'  shift 225
	.  error


state 213
	statement_list : statement_list . statement  (5)
	fun_body : statement_list .  (43)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	END  reduce 43

	statement  goto 50
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	id_list  goto 28


state 214
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body . END  (28)

	END  shift 226
	.  error


state 215
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END ';'  (26)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END error  (27)

	END  shift 227
	.  error


state 216
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN . fun_body END ';'  (29)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 213
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 228
	id_list  goto 28


state 217
	declare_statement : var_type FUN ID '(' parametro ',' parametro ')' . BEGIN fun_body END ';'  (30)

	BEGIN  shift 229
	.  error


state 218
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (52)

	.  reduce 52


state 219
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (50)

	.  reduce 50


state 220
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (60)

	.  reduce 60


state 221
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (58)

	.  reduce 58


state 222
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' error .  (97)

	.  reduce 97


state 223
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' ';' .  (96)

	.  reduce 96


state 224
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error .  (100)

	.  reduce 100


state 225
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';' .  (99)

	.  reduce 99


state 226
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body END .  (28)

	.  reduce 28


state 227
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END . ';'  (26)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END . error  (27)

	error  shift 230
	';'  shift 231
	.  error


state 228
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body . END ';'  (29)

	END  shift 232
	.  error


state 229
	declare_statement : var_type FUN ID '(' parametro ',' parametro ')' BEGIN . fun_body END ';'  (30)

	error  shift 6
	ID  shift 7
	IF  shift 8
	OUTF  shift 9
	TYPEDEF  shift 10
	RET  shift 11
	UINTEGER  shift 12
	SINGLE  shift 13
	REPEAT  shift 14
	GOTO  shift 15
	.  error

	statement_list  goto 213
	statement  goto 17
	executable_statement  goto 18
	declare_statement  goto 19
	return_statement  goto 20
	if_statement  goto 21
	assign_statement  goto 22
	outf_statement  goto 23
	repeat_statement  goto 24
	goto_statement  goto 25
	mult_assign_statement  goto 26
	var_type  goto 27
	fun_body  goto 233
	id_list  goto 28


state 230
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END error .  (27)

	.  reduce 27


state 231
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END ';' .  (26)

	.  reduce 26


state 232
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END . ';'  (29)

	';'  shift 234
	.  error


state 233
	declare_statement : var_type FUN ID '(' parametro ',' parametro ')' BEGIN fun_body . END ';'  (30)

	END  shift 235
	.  error


state 234
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END ';' .  (29)

	.  reduce 29


state 235
	declare_statement : var_type FUN ID '(' parametro ',' parametro ')' BEGIN fun_body END . ';'  (30)

	';'  shift 236
	.  error


state 236
	declare_statement : var_type FUN ID '(' parametro ',' parametro ')' BEGIN fun_body END ';' .  (30)

	.  reduce 30


State 39 contains 1 shift/reduce conflict.
State 113 contains 1 shift/reduce conflict.
State 114 contains 1 shift/reduce conflict.
State 121 contains 1 shift/reduce conflict.
State 123 contains 1 shift/reduce conflict.


38 terminals, 27 nonterminals
113 grammar rules, 237 states
