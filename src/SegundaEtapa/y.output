   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error
   4       | ID statement_list END
   5       | ID BEGIN statement_list error
   6       | ID statement_list
   7       |

   8  statement_list : statement
   9                 | error ';'
  10                 | statement_list statement

  11  statement : executable_statement
  12            | declare_pair optional_semicolon
  13            | declare_var
  14            | declare_fun

  15  optional_semicolon : ';'
  16                     |

  17  optional_not_semicolon : ';'
  18                         |

  19  executable_statement : if_statement optional_semicolon
  20                       | assign_statement optional_semicolon
  21                       | outf_statement optional_semicolon
  22                       | repeat_statement optional_semicolon
  23                       | goto_statement optional_semicolon
  24                       | mult_assign_statement optional_semicolon
  25                       | return_statement optional_semicolon
  26                       | TAG optional_not_semicolon

  27  executable_statement_list : executable_statement
  28                            | executable_statement_list executable_statement

  29  declare_var : var_type var_list ';'
  30              | var_type ID ';'
  31              | var_type ID error

  32  declare_fun : var_type FUN ID '(' parametro ')' BEGIN fun_body END
  33              | var_type FUN error '(' parametro ')' BEGIN fun_body END
  34              | var_type FUN ID '(' error ')' BEGIN fun_body END

  35  declare_pair : TYPEDEF PAIR '<' var_type '>' ID
  36               | TYPEDEF error
  37               | TYPEDEF PAIR error
  38               | TYPEDEF PAIR '<' var_type '>' error

  39  var_list : ID ',' ID
  40           | var_list ',' ID

  41  parametro : var_type ID
  42            | ID
  43            | var_type error

  44  return_statement : RET '(' expr ')'
  45                   | RET expr

  46  fun_body : statement_list

  47  var_type : UINTEGER
  48           | SINGLE
  49           | ID

  50  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  51               | IF cond THEN ctrl_block_statement END_IF
  52               | IF '(' cond THEN ctrl_block_statement END_IF
  53               | IF cond ')' THEN ctrl_block_statement END_IF
  54               | IF '(' cond ')' THEN ctrl_block_statement error
  55               | IF '(' cond ')' THEN END_IF
  56               | IF '(' cond ')' THEN error END_IF
  57               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  58               | IF '(' cond ')' THEN ELSE END_IF
  59               | IF '(' cond ')' THEN ELSE ctrl_block_statement END_IF
  60               | IF '(' cond ')' THEN ctrl_block_statement ELSE END_IF
  61               | IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF
  62               | IF '(' cond ')' THEN error ELSE ctrl_block_statement END_IF
  63               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  64               | IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  65               | IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  66               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  67               | IF ';'

  68  ctrl_block_statement : executable_statement_list

  69  cond : expr cond_op expr
  70       | expr error expr

  71  cond_op : '<'
  72          | '>'
  73          | '='
  74          | NEQ
  75          | LEQ
  76          | MEQ

  77  assign_statement : ID ASSIGN expr
  78                   | expr_pair ASSIGN expr
  79                   | var_type ID ASSIGN expr

  80  expr : expr '+' term
  81       | expr '-' term
  82       | term

  83  term : term '*' fact
  84       | term '/' fact
  85       | fact

  86  fact : ID
  87       | CTE
  88       | '-' CTE
  89       | '-' ID
  90       | fun_invoc
  91       | expr_pair
  92       | CHARCH

  93  expr_pair : ID '{' CTE '}'

  94  fun_invoc : ID '(' expr ')'
  95            | ID '(' expr error ')'

  96  outf_statement : OUTF '(' expr ')'
  97                 | OUTF '(' ')'
  98                 | OUTF error

  99  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')'
 100                   | REPEAT BEGIN executable_statement_list END UNTIL cond
 101                   | REPEAT BEGIN executable_statement_list END UNTIL '(' cond
 102                   | REPEAT BEGIN executable_statement_list END UNTIL cond ')'
 103                   | REPEAT BEGIN END UNTIL '(' cond ')'
 104                   | REPEAT BEGIN END UNTIL cond
 105                   | REPEAT BEGIN END UNTIL '(' cond
 106                   | REPEAT BEGIN END UNTIL cond ')'
 107                   | REPEAT BEGIN executable_statement_list END error
 108                   | REPEAT BEGIN executable_statement_list END UNTIL error

 109  mult_assign_statement : id_list ASSIGN expr_list
 110                        | id_list ASSIGN error

 111  id_list : elem_list ',' elem_list
 112          | id_list ',' elem_list

 113  elem_list : ID
 114            | expr_pair

 115  expr_list : expr ',' expr
 116            | expr_list ',' expr

 117  goto_statement : GOTO TAG
 118                 | GOTO error

state 0
	$accept : . prog $end  (0)
	prog : .  (7)

	error  shift 1
	ID  shift 2
	$end  reduce 7

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)
	prog : ID . statement_list END  (4)
	prog : ID . BEGIN statement_list error  (5)
	prog : ID . statement_list  (6)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	BEGIN  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 17
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 34
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 5
	statement_list : error . ';'  (9)

	';'  shift 35
	.  error


state 6
	var_type : ID .  (49)
	assign_statement : ID . ASSIGN expr  (77)
	expr_pair : ID . '{' CTE '}'  (93)
	elem_list : ID .  (113)

	ASSIGN  shift 36
	'{'  shift 37
	ID  reduce 49
	FUN  reduce 49
	','  reduce 113


state 7
	executable_statement : TAG . optional_not_semicolon  (26)
	optional_not_semicolon : .  (18)

	';'  shift 38
	$end  reduce 18
	error  reduce 18
	ID  reduce 18
	TAG  reduce 18
	IF  reduce 18
	ELSE  reduce 18
	END  reduce 18
	END_IF  reduce 18
	OUTF  reduce 18
	TYPEDEF  reduce 18
	RET  reduce 18
	UINTEGER  reduce 18
	SINGLE  reduce 18
	REPEAT  reduce 18
	GOTO  reduce 18

	optional_not_semicolon  goto 39


state 8
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (50)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (51)
	if_statement : IF . '(' cond THEN ctrl_block_statement END_IF  (52)
	if_statement : IF . cond ')' THEN ctrl_block_statement END_IF  (53)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (54)
	if_statement : IF . '(' cond ')' THEN END_IF  (55)
	if_statement : IF . '(' cond ')' THEN error END_IF  (56)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (57)
	if_statement : IF . '(' cond ')' THEN ELSE END_IF  (58)
	if_statement : IF . '(' cond ')' THEN ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE END_IF  (60)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE error END_IF  (61)
	if_statement : IF . '(' cond ')' THEN error ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF . '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (66)
	if_statement : IF . ';'  (67)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	';'  shift 43
	'('  shift 44
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 47
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 9
	prog : ID BEGIN . statement_list END  (1)
	prog : ID BEGIN . statement_list error  (5)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 52
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 10
	outf_statement : OUTF . '(' expr ')'  (96)
	outf_statement : OUTF . '(' ')'  (97)
	outf_statement : OUTF . error  (98)

	error  shift 53
	'('  shift 54
	.  error


state 11
	declare_pair : TYPEDEF . PAIR '<' var_type '>' ID  (35)
	declare_pair : TYPEDEF . error  (36)
	declare_pair : TYPEDEF . PAIR error  (37)
	declare_pair : TYPEDEF . PAIR '<' var_type '>' error  (38)

	error  shift 55
	PAIR  shift 56
	.  error


state 12
	return_statement : RET . '(' expr ')'  (44)
	return_statement : RET . expr  (45)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'('  shift 57
	'-'  shift 45
	.  error

	expr  goto 58
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 13
	var_type : UINTEGER .  (47)

	.  reduce 47


state 14
	var_type : SINGLE .  (48)

	.  reduce 48


state 15
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')'  (99)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (100)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond  (101)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond ')'  (102)
	repeat_statement : REPEAT . BEGIN END UNTIL '(' cond ')'  (103)
	repeat_statement : REPEAT . BEGIN END UNTIL cond  (104)
	repeat_statement : REPEAT . BEGIN END UNTIL '(' cond  (105)
	repeat_statement : REPEAT . BEGIN END UNTIL cond ')'  (106)
	repeat_statement : REPEAT . BEGIN executable_statement_list END error  (107)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL error  (108)

	BEGIN  shift 59
	.  error


state 16
	goto_statement : GOTO . TAG  (117)
	goto_statement : GOTO . error  (118)

	error  shift 60
	TAG  shift 61
	.  error


state 17
	prog : ID statement_list . END  (4)
	prog : ID statement_list .  (6)
	statement_list : statement_list . statement  (10)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 62
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	$end  reduce 6

	statement  goto 63
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 18
	statement_list : statement .  (8)

	.  reduce 8


state 19
	statement : executable_statement .  (11)

	.  reduce 11


state 20
	statement : declare_pair . optional_semicolon  (12)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	END  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 65


state 21
	statement : declare_var .  (13)

	.  reduce 13


state 22
	statement : declare_fun .  (14)

	.  reduce 14


state 23
	executable_statement : if_statement . optional_semicolon  (19)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 66


state 24
	executable_statement : assign_statement . optional_semicolon  (20)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 67


state 25
	executable_statement : outf_statement . optional_semicolon  (21)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 68


state 26
	executable_statement : repeat_statement . optional_semicolon  (22)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 69


state 27
	executable_statement : goto_statement . optional_semicolon  (23)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 70


state 28
	executable_statement : mult_assign_statement . optional_semicolon  (24)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 71


state 29
	executable_statement : return_statement . optional_semicolon  (25)
	optional_semicolon : .  (16)

	';'  shift 64
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 72


state 30
	declare_var : var_type . var_list ';'  (29)
	declare_var : var_type . ID ';'  (30)
	declare_var : var_type . ID error  (31)
	declare_fun : var_type . FUN ID '(' parametro ')' BEGIN fun_body END  (32)
	declare_fun : var_type . FUN error '(' parametro ')' BEGIN fun_body END  (33)
	declare_fun : var_type . FUN ID '(' error ')' BEGIN fun_body END  (34)
	assign_statement : var_type . ID ASSIGN expr  (79)

	ID  shift 73
	FUN  shift 74
	.  error

	var_list  goto 75


state 31
	assign_statement : expr_pair . ASSIGN expr  (78)
	elem_list : expr_pair .  (114)

	ASSIGN  shift 76
	','  reduce 114


state 32
	mult_assign_statement : id_list . ASSIGN expr_list  (109)
	mult_assign_statement : id_list . ASSIGN error  (110)
	id_list : id_list . ',' elem_list  (112)

	ASSIGN  shift 77
	','  shift 78
	.  error


state 33
	id_list : elem_list . ',' elem_list  (111)

	','  shift 79
	.  error


state 34
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (10)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 80
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 63
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 35
	statement_list : error ';' .  (9)

	.  reduce 9


state 36
	assign_statement : ID ASSIGN . expr  (77)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 81
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 37
	expr_pair : ID '{' . CTE '}'  (93)

	CTE  shift 82
	.  error


state 38
	optional_not_semicolon : ';' .  (17)

	.  reduce 17


state 39
	executable_statement : TAG optional_not_semicolon .  (26)

	.  reduce 26


state 40
	fact : ID .  (86)
	expr_pair : ID . '{' CTE '}'  (93)
	fun_invoc : ID . '(' expr ')'  (94)
	fun_invoc : ID . '(' expr error ')'  (95)

	'('  shift 83
	'{'  shift 37
	$end  reduce 86
	error  reduce 86
	ID  reduce 86
	NEQ  reduce 86
	LEQ  reduce 86
	MEQ  reduce 86
	TAG  reduce 86
	IF  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	END  reduce 86
	END_IF  reduce 86
	OUTF  reduce 86
	TYPEDEF  reduce 86
	RET  reduce 86
	UINTEGER  reduce 86
	SINGLE  reduce 86
	REPEAT  reduce 86
	GOTO  reduce 86
	';'  reduce 86
	')'  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	','  reduce 86
	'='  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	'*'  reduce 86
	'/'  reduce 86


state 41
	fact : CTE .  (87)

	.  reduce 87


state 42
	fact : CHARCH .  (92)

	.  reduce 92


state 43
	if_statement : IF ';' .  (67)

	.  reduce 67


state 44
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (50)
	if_statement : IF '(' . cond THEN ctrl_block_statement END_IF  (52)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (54)
	if_statement : IF '(' . cond ')' THEN END_IF  (55)
	if_statement : IF '(' . cond ')' THEN error END_IF  (56)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (57)
	if_statement : IF '(' . cond ')' THEN ELSE END_IF  (58)
	if_statement : IF '(' . cond ')' THEN ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE END_IF  (60)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE error END_IF  (61)
	if_statement : IF '(' . cond ')' THEN error ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF '(' . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (66)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 84
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 45
	fact : '-' . CTE  (88)
	fact : '-' . ID  (89)

	ID  shift 85
	CTE  shift 86
	.  error


state 46
	cond : expr . cond_op expr  (69)
	cond : expr . error expr  (70)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	error  shift 87
	NEQ  shift 88
	LEQ  shift 89
	MEQ  shift 90
	'<'  shift 91
	'>'  shift 92
	'='  shift 93
	'+'  shift 94
	'-'  shift 95
	.  error

	cond_op  goto 96


state 47
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (51)
	if_statement : IF cond . ')' THEN ctrl_block_statement END_IF  (53)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)

	THEN  shift 97
	')'  shift 98
	.  error


state 48
	fact : expr_pair .  (91)

	.  reduce 91


state 49
	expr : term .  (82)
	term : term . '*' fact  (83)
	term : term . '/' fact  (84)

	'*'  shift 99
	'/'  shift 100
	$end  reduce 82
	error  reduce 82
	ID  reduce 82
	NEQ  reduce 82
	LEQ  reduce 82
	MEQ  reduce 82
	TAG  reduce 82
	IF  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	END  reduce 82
	END_IF  reduce 82
	OUTF  reduce 82
	TYPEDEF  reduce 82
	RET  reduce 82
	UINTEGER  reduce 82
	SINGLE  reduce 82
	REPEAT  reduce 82
	GOTO  reduce 82
	';'  reduce 82
	')'  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	','  reduce 82
	'='  reduce 82
	'+'  reduce 82
	'-'  reduce 82


state 50
	term : fact .  (85)

	.  reduce 85


state 51
	fact : fun_invoc .  (90)

	.  reduce 90


state 52
	prog : ID BEGIN statement_list . END  (1)
	prog : ID BEGIN statement_list . error  (5)
	statement_list : statement_list . statement  (10)

	error  shift 101
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 102
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 63
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 53
	outf_statement : OUTF error .  (98)

	.  reduce 98


state 54
	outf_statement : OUTF '(' . expr ')'  (96)
	outf_statement : OUTF '(' . ')'  (97)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	')'  shift 103
	'-'  shift 45
	.  error

	expr  goto 104
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 55
	declare_pair : TYPEDEF error .  (36)

	.  reduce 36


state 56
	declare_pair : TYPEDEF PAIR . '<' var_type '>' ID  (35)
	declare_pair : TYPEDEF PAIR . error  (37)
	declare_pair : TYPEDEF PAIR . '<' var_type '>' error  (38)

	error  shift 105
	'<'  shift 106
	.  error


state 57
	return_statement : RET '(' . expr ')'  (44)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 107
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 58
	return_statement : RET expr .  (45)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 45
	error  reduce 45
	ID  reduce 45
	TAG  reduce 45
	IF  reduce 45
	ELSE  reduce 45
	END  reduce 45
	END_IF  reduce 45
	OUTF  reduce 45
	TYPEDEF  reduce 45
	RET  reduce 45
	UINTEGER  reduce 45
	SINGLE  reduce 45
	REPEAT  reduce 45
	GOTO  reduce 45
	';'  reduce 45


state 59
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')'  (99)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (100)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond  (101)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond ')'  (102)
	repeat_statement : REPEAT BEGIN . END UNTIL '(' cond ')'  (103)
	repeat_statement : REPEAT BEGIN . END UNTIL cond  (104)
	repeat_statement : REPEAT BEGIN . END UNTIL '(' cond  (105)
	repeat_statement : REPEAT BEGIN . END UNTIL cond ')'  (106)
	repeat_statement : REPEAT BEGIN . executable_statement_list END error  (107)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL error  (108)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 108
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 110
	var_type  goto 111
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 60
	goto_statement : GOTO error .  (118)

	.  reduce 118


state 61
	goto_statement : GOTO TAG .  (117)

	.  reduce 117


state 62
	prog : ID statement_list END .  (4)

	.  reduce 4


state 63
	statement_list : statement_list statement .  (10)

	.  reduce 10


state 64
	optional_semicolon : ';' .  (15)

	.  reduce 15


state 65
	statement : declare_pair optional_semicolon .  (12)

	.  reduce 12


state 66
	executable_statement : if_statement optional_semicolon .  (19)

	.  reduce 19


state 67
	executable_statement : assign_statement optional_semicolon .  (20)

	.  reduce 20


state 68
	executable_statement : outf_statement optional_semicolon .  (21)

	.  reduce 21


state 69
	executable_statement : repeat_statement optional_semicolon .  (22)

	.  reduce 22


state 70
	executable_statement : goto_statement optional_semicolon .  (23)

	.  reduce 23


state 71
	executable_statement : mult_assign_statement optional_semicolon .  (24)

	.  reduce 24


state 72
	executable_statement : return_statement optional_semicolon .  (25)

	.  reduce 25


state 73
	declare_var : var_type ID . ';'  (30)
	declare_var : var_type ID . error  (31)
	var_list : ID . ',' ID  (39)
	assign_statement : var_type ID . ASSIGN expr  (79)

	error  shift 112
	ASSIGN  shift 113
	';'  shift 114
	','  shift 115
	.  error


state 74
	declare_fun : var_type FUN . ID '(' parametro ')' BEGIN fun_body END  (32)
	declare_fun : var_type FUN . error '(' parametro ')' BEGIN fun_body END  (33)
	declare_fun : var_type FUN . ID '(' error ')' BEGIN fun_body END  (34)

	error  shift 116
	ID  shift 117
	.  error


state 75
	declare_var : var_type var_list . ';'  (29)
	var_list : var_list . ',' ID  (40)

	';'  shift 118
	','  shift 119
	.  error


state 76
	assign_statement : expr_pair ASSIGN . expr  (78)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 120
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 77
	mult_assign_statement : id_list ASSIGN . expr_list  (109)
	mult_assign_statement : id_list ASSIGN . error  (110)

	error  shift 121
	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 122
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51
	expr_list  goto 123


state 78
	id_list : id_list ',' . elem_list  (112)

	ID  shift 124
	.  error

	expr_pair  goto 125
	elem_list  goto 126


state 79
	id_list : elem_list ',' . elem_list  (111)

	ID  shift 124
	.  error

	expr_pair  goto 125
	elem_list  goto 127


state 80
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 81
	assign_statement : ID ASSIGN expr .  (77)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 77
	error  reduce 77
	ID  reduce 77
	TAG  reduce 77
	IF  reduce 77
	ELSE  reduce 77
	END  reduce 77
	END_IF  reduce 77
	OUTF  reduce 77
	TYPEDEF  reduce 77
	RET  reduce 77
	UINTEGER  reduce 77
	SINGLE  reduce 77
	REPEAT  reduce 77
	GOTO  reduce 77
	';'  reduce 77


state 82
	expr_pair : ID '{' CTE . '}'  (93)

	'}'  shift 128
	.  error


state 83
	fun_invoc : ID '(' . expr ')'  (94)
	fun_invoc : ID '(' . expr error ')'  (95)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 129
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 84
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond . THEN ctrl_block_statement END_IF  (52)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (54)
	if_statement : IF '(' cond . ')' THEN END_IF  (55)
	if_statement : IF '(' cond . ')' THEN error END_IF  (56)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (57)
	if_statement : IF '(' cond . ')' THEN ELSE END_IF  (58)
	if_statement : IF '(' cond . ')' THEN ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE END_IF  (60)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE error END_IF  (61)
	if_statement : IF '(' cond . ')' THEN error ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF '(' cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (66)

	THEN  shift 130
	')'  shift 131
	.  error


state 85
	fact : '-' ID .  (89)

	.  reduce 89


state 86
	fact : '-' CTE .  (88)

	.  reduce 88


state 87
	cond : expr error . expr  (70)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 132
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 88
	cond_op : NEQ .  (74)

	.  reduce 74


state 89
	cond_op : LEQ .  (75)

	.  reduce 75


state 90
	cond_op : MEQ .  (76)

	.  reduce 76


state 91
	cond_op : '<' .  (71)

	.  reduce 71


state 92
	cond_op : '>' .  (72)

	.  reduce 72


state 93
	cond_op : '=' .  (73)

	.  reduce 73


state 94
	expr : expr '+' . term  (80)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr_pair  goto 48
	term  goto 133
	fact  goto 50
	fun_invoc  goto 51


state 95
	expr : expr '-' . term  (81)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr_pair  goto 48
	term  goto 134
	fact  goto 50
	fun_invoc  goto 51


state 96
	cond : expr cond_op . expr  (69)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 135
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 97
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (51)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (63)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 137
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 98
	if_statement : IF cond ')' . THEN ctrl_block_statement END_IF  (53)
	if_statement : IF cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)

	THEN  shift 138
	.  error


state 99
	term : term '*' . fact  (83)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr_pair  goto 48
	fact  goto 139
	fun_invoc  goto 51


state 100
	term : term '/' . fact  (84)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr_pair  goto 48
	fact  goto 140
	fun_invoc  goto 51


state 101
	prog : ID BEGIN statement_list error .  (5)

	.  reduce 5


state 102
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 103
	outf_statement : OUTF '(' ')' .  (97)

	.  reduce 97


state 104
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	outf_statement : OUTF '(' expr . ')'  (96)

	')'  shift 141
	'+'  shift 94
	'-'  shift 95
	.  error


state 105
	declare_pair : TYPEDEF PAIR error .  (37)

	.  reduce 37


state 106
	declare_pair : TYPEDEF PAIR '<' . var_type '>' ID  (35)
	declare_pair : TYPEDEF PAIR '<' . var_type '>' error  (38)

	ID  shift 142
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 143


state 107
	return_statement : RET '(' expr . ')'  (44)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	')'  shift 144
	'+'  shift 94
	'-'  shift 95
	.  error


state 108
	repeat_statement : REPEAT BEGIN END . UNTIL '(' cond ')'  (103)
	repeat_statement : REPEAT BEGIN END . UNTIL cond  (104)
	repeat_statement : REPEAT BEGIN END . UNTIL '(' cond  (105)
	repeat_statement : REPEAT BEGIN END . UNTIL cond ')'  (106)

	UNTIL  shift 145
	.  error


state 109
	executable_statement_list : executable_statement .  (27)

	.  reduce 27


state 110
	executable_statement_list : executable_statement_list . executable_statement  (28)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list . END error  (107)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL error  (108)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 146
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 147
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 111
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 111
	assign_statement : var_type . ID ASSIGN expr  (79)

	ID  shift 148
	.  error


state 112
	declare_var : var_type ID error .  (31)

	.  reduce 31


state 113
	assign_statement : var_type ID ASSIGN . expr  (79)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 149
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 114
	declare_var : var_type ID ';' .  (30)

	.  reduce 30


state 115
	var_list : ID ',' . ID  (39)

	ID  shift 150
	.  error


state 116
	declare_fun : var_type FUN error . '(' parametro ')' BEGIN fun_body END  (33)

	'('  shift 151
	.  error


state 117
	declare_fun : var_type FUN ID . '(' parametro ')' BEGIN fun_body END  (32)
	declare_fun : var_type FUN ID . '(' error ')' BEGIN fun_body END  (34)

	'('  shift 152
	.  error


state 118
	declare_var : var_type var_list ';' .  (29)

	.  reduce 29


state 119
	var_list : var_list ',' . ID  (40)

	ID  shift 153
	.  error


state 120
	assign_statement : expr_pair ASSIGN expr .  (78)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 78
	error  reduce 78
	ID  reduce 78
	TAG  reduce 78
	IF  reduce 78
	ELSE  reduce 78
	END  reduce 78
	END_IF  reduce 78
	OUTF  reduce 78
	TYPEDEF  reduce 78
	RET  reduce 78
	UINTEGER  reduce 78
	SINGLE  reduce 78
	REPEAT  reduce 78
	GOTO  reduce 78
	';'  reduce 78


state 121
	mult_assign_statement : id_list ASSIGN error .  (110)

	.  reduce 110


state 122
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	expr_list : expr . ',' expr  (115)

	','  shift 154
	'+'  shift 94
	'-'  shift 95
	.  error


state 123
	mult_assign_statement : id_list ASSIGN expr_list .  (109)
	expr_list : expr_list . ',' expr  (116)

	','  shift 155
	$end  reduce 109
	error  reduce 109
	ID  reduce 109
	TAG  reduce 109
	IF  reduce 109
	ELSE  reduce 109
	END  reduce 109
	END_IF  reduce 109
	OUTF  reduce 109
	TYPEDEF  reduce 109
	RET  reduce 109
	UINTEGER  reduce 109
	SINGLE  reduce 109
	REPEAT  reduce 109
	GOTO  reduce 109
	';'  reduce 109


state 124
	expr_pair : ID . '{' CTE '}'  (93)
	elem_list : ID .  (113)

	'{'  shift 37
	ASSIGN  reduce 113
	','  reduce 113


state 125
	elem_list : expr_pair .  (114)

	.  reduce 114


state 126
	id_list : id_list ',' elem_list .  (112)

	.  reduce 112


state 127
	id_list : elem_list ',' elem_list .  (111)

	.  reduce 111


state 128
	expr_pair : ID '{' CTE '}' .  (93)

	.  reduce 93


state 129
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	fun_invoc : ID '(' expr . ')'  (94)
	fun_invoc : ID '(' expr . error ')'  (95)

	error  shift 156
	')'  shift 157
	'+'  shift 94
	'-'  shift 95
	.  error


state 130
	if_statement : IF '(' cond THEN . ctrl_block_statement END_IF  (52)
	if_statement : IF '(' cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 158
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 131
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (54)
	if_statement : IF '(' cond ')' . THEN END_IF  (55)
	if_statement : IF '(' cond ')' . THEN error END_IF  (56)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (57)
	if_statement : IF '(' cond ')' . THEN ELSE END_IF  (58)
	if_statement : IF '(' cond ')' . THEN ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE END_IF  (60)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE error END_IF  (61)
	if_statement : IF '(' cond ')' . THEN error ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (66)

	THEN  shift 159
	.  error


state 132
	cond : expr error expr .  (70)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 70
	error  reduce 70
	ID  reduce 70
	TAG  reduce 70
	IF  reduce 70
	THEN  reduce 70
	ELSE  reduce 70
	END  reduce 70
	END_IF  reduce 70
	OUTF  reduce 70
	TYPEDEF  reduce 70
	RET  reduce 70
	UINTEGER  reduce 70
	SINGLE  reduce 70
	REPEAT  reduce 70
	GOTO  reduce 70
	';'  reduce 70
	')'  reduce 70


state 133
	expr : expr '+' term .  (80)
	term : term . '*' fact  (83)
	term : term . '/' fact  (84)

	'*'  shift 99
	'/'  shift 100
	$end  reduce 80
	error  reduce 80
	ID  reduce 80
	NEQ  reduce 80
	LEQ  reduce 80
	MEQ  reduce 80
	TAG  reduce 80
	IF  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	END  reduce 80
	END_IF  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	UINTEGER  reduce 80
	SINGLE  reduce 80
	REPEAT  reduce 80
	GOTO  reduce 80
	';'  reduce 80
	')'  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	','  reduce 80
	'='  reduce 80
	'+'  reduce 80
	'-'  reduce 80


state 134
	expr : expr '-' term .  (81)
	term : term . '*' fact  (83)
	term : term . '/' fact  (84)

	'*'  shift 99
	'/'  shift 100
	$end  reduce 81
	error  reduce 81
	ID  reduce 81
	NEQ  reduce 81
	LEQ  reduce 81
	MEQ  reduce 81
	TAG  reduce 81
	IF  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	END  reduce 81
	END_IF  reduce 81
	OUTF  reduce 81
	TYPEDEF  reduce 81
	RET  reduce 81
	UINTEGER  reduce 81
	SINGLE  reduce 81
	REPEAT  reduce 81
	GOTO  reduce 81
	';'  reduce 81
	')'  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	','  reduce 81
	'='  reduce 81
	'+'  reduce 81
	'-'  reduce 81


state 135
	cond : expr cond_op expr .  (69)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 69
	error  reduce 69
	ID  reduce 69
	TAG  reduce 69
	IF  reduce 69
	THEN  reduce 69
	ELSE  reduce 69
	END  reduce 69
	END_IF  reduce 69
	OUTF  reduce 69
	TYPEDEF  reduce 69
	RET  reduce 69
	UINTEGER  reduce 69
	SINGLE  reduce 69
	REPEAT  reduce 69
	GOTO  reduce 69
	';'  reduce 69
	')'  reduce 69


state 136
	executable_statement_list : executable_statement_list . executable_statement  (28)
	ctrl_block_statement : executable_statement_list .  (68)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	error  reduce 68
	ELSE  reduce 68
	END_IF  reduce 68

	executable_statement  goto 147
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 111
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 137
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (51)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (63)

	ELSE  shift 160
	END_IF  shift 161
	.  error


state 138
	if_statement : IF cond ')' THEN . ctrl_block_statement END_IF  (53)
	if_statement : IF cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 162
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 139
	term : term '*' fact .  (83)

	.  reduce 83


state 140
	term : term '/' fact .  (84)

	.  reduce 84


state 141
	outf_statement : OUTF '(' expr ')' .  (96)

	.  reduce 96


state 142
	var_type : ID .  (49)

	.  reduce 49


state 143
	declare_pair : TYPEDEF PAIR '<' var_type . '>' ID  (35)
	declare_pair : TYPEDEF PAIR '<' var_type . '>' error  (38)

	'>'  shift 163
	.  error


state 144
	return_statement : RET '(' expr ')' .  (44)

	.  reduce 44


state 145
	repeat_statement : REPEAT BEGIN END UNTIL . '(' cond ')'  (103)
	repeat_statement : REPEAT BEGIN END UNTIL . cond  (104)
	repeat_statement : REPEAT BEGIN END UNTIL . '(' cond  (105)
	repeat_statement : REPEAT BEGIN END UNTIL . cond ')'  (106)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'('  shift 164
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 165
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 146
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END . error  (107)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL error  (108)

	error  shift 166
	UNTIL  shift 167
	.  error


state 147
	executable_statement_list : executable_statement_list executable_statement .  (28)

	.  reduce 28


state 148
	assign_statement : var_type ID . ASSIGN expr  (79)

	ASSIGN  shift 113
	.  error


state 149
	assign_statement : var_type ID ASSIGN expr .  (79)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 79
	error  reduce 79
	ID  reduce 79
	TAG  reduce 79
	IF  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	GOTO  reduce 79
	';'  reduce 79


state 150
	var_list : ID ',' ID .  (39)

	.  reduce 39


state 151
	declare_fun : var_type FUN error '(' . parametro ')' BEGIN fun_body END  (33)

	ID  shift 168
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 169
	parametro  goto 170


state 152
	declare_fun : var_type FUN ID '(' . parametro ')' BEGIN fun_body END  (32)
	declare_fun : var_type FUN ID '(' . error ')' BEGIN fun_body END  (34)

	error  shift 171
	ID  shift 168
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 169
	parametro  goto 172


state 153
	var_list : var_list ',' ID .  (40)

	.  reduce 40


state 154
	expr_list : expr ',' . expr  (115)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 173
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 155
	expr_list : expr_list ',' . expr  (116)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 174
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 156
	fun_invoc : ID '(' expr error . ')'  (95)

	')'  shift 175
	.  error


state 157
	fun_invoc : ID '(' expr ')' .  (94)

	.  reduce 94


state 158
	if_statement : IF '(' cond THEN ctrl_block_statement . END_IF  (52)
	if_statement : IF '(' cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (64)

	ELSE  shift 176
	END_IF  shift 177
	.  error


state 159
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (50)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (54)
	if_statement : IF '(' cond ')' THEN . END_IF  (55)
	if_statement : IF '(' cond ')' THEN . error END_IF  (56)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (57)
	if_statement : IF '(' cond ')' THEN . ELSE END_IF  (58)
	if_statement : IF '(' cond ')' THEN . ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE END_IF  (60)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE error END_IF  (61)
	if_statement : IF '(' cond ')' THEN . error ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (66)

	error  shift 178
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	ELSE  shift 179
	END_IF  shift 180
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 181
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 160
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (63)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 182
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 161
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (51)

	.  reduce 51


state 162
	if_statement : IF cond ')' THEN ctrl_block_statement . END_IF  (53)
	if_statement : IF cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (65)

	ELSE  shift 183
	END_IF  shift 184
	.  error


state 163
	declare_pair : TYPEDEF PAIR '<' var_type '>' . ID  (35)
	declare_pair : TYPEDEF PAIR '<' var_type '>' . error  (38)

	error  shift 185
	ID  shift 186
	.  error


state 164
	repeat_statement : REPEAT BEGIN END UNTIL '(' . cond ')'  (103)
	repeat_statement : REPEAT BEGIN END UNTIL '(' . cond  (105)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 187
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 165
	repeat_statement : REPEAT BEGIN END UNTIL cond .  (104)
	repeat_statement : REPEAT BEGIN END UNTIL cond . ')'  (106)

	')'  shift 188
	$end  reduce 104
	error  reduce 104
	ID  reduce 104
	TAG  reduce 104
	IF  reduce 104
	ELSE  reduce 104
	END  reduce 104
	END_IF  reduce 104
	OUTF  reduce 104
	TYPEDEF  reduce 104
	RET  reduce 104
	UINTEGER  reduce 104
	SINGLE  reduce 104
	REPEAT  reduce 104
	GOTO  reduce 104
	';'  reduce 104


state 166
	repeat_statement : REPEAT BEGIN executable_statement_list END error .  (107)

	.  reduce 107


state 167
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . error  (108)

	error  shift 189
	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'('  shift 190
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 191
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 168
	parametro : ID .  (42)
	var_type : ID .  (49)

	error  reduce 49
	ID  reduce 49
	')'  reduce 42


state 169
	parametro : var_type . ID  (41)
	parametro : var_type . error  (43)

	error  shift 192
	ID  shift 193
	.  error


state 170
	declare_fun : var_type FUN error '(' parametro . ')' BEGIN fun_body END  (33)

	')'  shift 194
	.  error


state 171
	declare_fun : var_type FUN ID '(' error . ')' BEGIN fun_body END  (34)

	')'  shift 195
	.  error


state 172
	declare_fun : var_type FUN ID '(' parametro . ')' BEGIN fun_body END  (32)

	')'  shift 196
	.  error


state 173
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	expr_list : expr ',' expr .  (115)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 115
	error  reduce 115
	ID  reduce 115
	TAG  reduce 115
	IF  reduce 115
	ELSE  reduce 115
	END  reduce 115
	END_IF  reduce 115
	OUTF  reduce 115
	TYPEDEF  reduce 115
	RET  reduce 115
	UINTEGER  reduce 115
	SINGLE  reduce 115
	REPEAT  reduce 115
	GOTO  reduce 115
	';'  reduce 115
	','  reduce 115


state 174
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	expr_list : expr_list ',' expr .  (116)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 116
	error  reduce 116
	ID  reduce 116
	TAG  reduce 116
	IF  reduce 116
	ELSE  reduce 116
	END  reduce 116
	END_IF  reduce 116
	OUTF  reduce 116
	TYPEDEF  reduce 116
	RET  reduce 116
	UINTEGER  reduce 116
	SINGLE  reduce 116
	REPEAT  reduce 116
	GOTO  reduce 116
	';'  reduce 116
	','  reduce 116


state 175
	fun_invoc : ID '(' expr error ')' .  (95)

	.  reduce 95


state 176
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (64)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 197
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 177
	if_statement : IF '(' cond THEN ctrl_block_statement END_IF .  (52)

	.  reduce 52


state 178
	if_statement : IF '(' cond ')' THEN error . END_IF  (56)
	if_statement : IF '(' cond ')' THEN error . ELSE ctrl_block_statement END_IF  (62)

	ELSE  shift 198
	END_IF  shift 199
	.  error


state 179
	if_statement : IF '(' cond ')' THEN ELSE . END_IF  (58)
	if_statement : IF '(' cond ')' THEN ELSE . ctrl_block_statement END_IF  (59)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 200
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 201
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 180
	if_statement : IF '(' cond ')' THEN END_IF .  (55)

	.  reduce 55


state 181
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (50)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (54)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (57)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE END_IF  (60)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE error END_IF  (61)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (66)

	error  shift 202
	ELSE  shift 203
	END_IF  shift 204
	.  error


state 182
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (63)

	END_IF  shift 205
	.  error


state 183
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (65)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 206
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 184
	if_statement : IF cond ')' THEN ctrl_block_statement END_IF .  (53)

	.  reduce 53


state 185
	declare_pair : TYPEDEF PAIR '<' var_type '>' error .  (38)

	.  reduce 38


state 186
	declare_pair : TYPEDEF PAIR '<' var_type '>' ID .  (35)

	.  reduce 35


state 187
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond . ')'  (103)
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond .  (105)

	')'  shift 207
	$end  reduce 105
	error  reduce 105
	ID  reduce 105
	TAG  reduce 105
	IF  reduce 105
	ELSE  reduce 105
	END  reduce 105
	END_IF  reduce 105
	OUTF  reduce 105
	TYPEDEF  reduce 105
	RET  reduce 105
	UINTEGER  reduce 105
	SINGLE  reduce 105
	REPEAT  reduce 105
	GOTO  reduce 105
	';'  reduce 105


state 188
	repeat_statement : REPEAT BEGIN END UNTIL cond ')' .  (106)

	.  reduce 106


state 189
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL error .  (108)

	.  reduce 108


state 190
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond  (101)

	ID  shift 40
	CTE  shift 41
	CHARCH  shift 42
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 208
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 191
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond . ')'  (102)

	')'  shift 209
	$end  reduce 100
	error  reduce 100
	ID  reduce 100
	TAG  reduce 100
	IF  reduce 100
	ELSE  reduce 100
	END  reduce 100
	END_IF  reduce 100
	OUTF  reduce 100
	TYPEDEF  reduce 100
	RET  reduce 100
	UINTEGER  reduce 100
	SINGLE  reduce 100
	REPEAT  reduce 100
	GOTO  reduce 100
	';'  reduce 100


state 192
	parametro : var_type error .  (43)

	.  reduce 43


state 193
	parametro : var_type ID .  (41)

	.  reduce 41


state 194
	declare_fun : var_type FUN error '(' parametro ')' . BEGIN fun_body END  (33)

	BEGIN  shift 210
	.  error


state 195
	declare_fun : var_type FUN ID '(' error ')' . BEGIN fun_body END  (34)

	BEGIN  shift 211
	.  error


state 196
	declare_fun : var_type FUN ID '(' parametro ')' . BEGIN fun_body END  (32)

	BEGIN  shift 212
	.  error


state 197
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (64)

	END_IF  shift 213
	.  error


state 198
	if_statement : IF '(' cond ')' THEN error ELSE . ctrl_block_statement END_IF  (62)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 214
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 199
	if_statement : IF '(' cond ')' THEN error END_IF .  (56)

	.  reduce 56


state 200
	if_statement : IF '(' cond ')' THEN ELSE END_IF .  (58)

	.  reduce 58


state 201
	if_statement : IF '(' cond ')' THEN ELSE ctrl_block_statement . END_IF  (59)

	END_IF  shift 215
	.  error


state 202
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (54)

	.  reduce 54


state 203
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (57)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . END_IF  (60)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . error END_IF  (61)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (66)

	error  shift 216
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 217
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 109
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 136
	var_type  goto 111
	ctrl_block_statement  goto 218
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 204
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (50)

	.  reduce 50


state 205
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (63)

	.  reduce 63


state 206
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (65)

	END_IF  shift 219
	.  error


state 207
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond ')' .  (103)

	.  reduce 103


state 208
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond .  (101)

	')'  shift 220
	$end  reduce 101
	error  reduce 101
	ID  reduce 101
	TAG  reduce 101
	IF  reduce 101
	ELSE  reduce 101
	END  reduce 101
	END_IF  reduce 101
	OUTF  reduce 101
	TYPEDEF  reduce 101
	RET  reduce 101
	UINTEGER  reduce 101
	SINGLE  reduce 101
	REPEAT  reduce 101
	GOTO  reduce 101
	';'  reduce 101


state 209
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond ')' .  (102)

	.  reduce 102


state 210
	declare_fun : var_type FUN error '(' parametro ')' BEGIN . fun_body END  (33)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 221
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	fun_body  goto 222
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 211
	declare_fun : var_type FUN ID '(' error ')' BEGIN . fun_body END  (34)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 221
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	fun_body  goto 223
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 212
	declare_fun : var_type FUN ID '(' parametro ')' BEGIN . fun_body END  (32)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 221
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	fun_body  goto 224
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 213
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (64)

	.  reduce 64


state 214
	if_statement : IF '(' cond ')' THEN error ELSE ctrl_block_statement . END_IF  (62)

	END_IF  shift 225
	.  error


state 215
	if_statement : IF '(' cond ')' THEN ELSE ctrl_block_statement END_IF .  (59)

	.  reduce 59


state 216
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error . END_IF  (61)

	END_IF  shift 226
	.  error


state 217
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE END_IF .  (60)

	.  reduce 60


state 218
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (57)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (66)

	error  shift 227
	END_IF  shift 228
	.  error


state 219
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (65)

	.  reduce 65


state 220
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' .  (99)

	.  reduce 99


state 221
	statement_list : statement_list . statement  (10)
	fun_body : statement_list .  (46)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	END  reduce 46

	statement  goto 63
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 222
	declare_fun : var_type FUN error '(' parametro ')' BEGIN fun_body . END  (33)

	END  shift 229
	.  error


state 223
	declare_fun : var_type FUN ID '(' error ')' BEGIN fun_body . END  (34)

	END  shift 230
	.  error


state 224
	declare_fun : var_type FUN ID '(' parametro ')' BEGIN fun_body . END  (32)

	END  shift 231
	.  error


state 225
	if_statement : IF '(' cond ')' THEN error ELSE ctrl_block_statement END_IF .  (62)

	.  reduce 62


state 226
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF .  (61)

	.  reduce 61


state 227
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (66)

	.  reduce 66


state 228
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (57)

	.  reduce 57


state 229
	declare_fun : var_type FUN error '(' parametro ')' BEGIN fun_body END .  (33)

	.  reduce 33


state 230
	declare_fun : var_type FUN ID '(' error ')' BEGIN fun_body END .  (34)

	.  reduce 34


state 231
	declare_fun : var_type FUN ID '(' parametro ')' BEGIN fun_body END .  (32)

	.  reduce 32


39 terminals, 33 nonterminals
119 grammar rules, 232 states
