   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error
   4       | ID statement_list END
   5       | ID BEGIN statement_list error
   6       | ID statement_list
   7       |

   8  statement_list : statement
   9                 | statement_list statement

  10  statement : executable_statement
  11            | declare_pair optional_semicolon
  12            | declare_var
  13            | declare_fun
  14            | error ';'

  15  optional_semicolon : ';'
  16                     |

  17  optional_not_semicolon : ';'
  18                         |

  19  executable_statement : if_statement optional_semicolon
  20                       | assign_statement optional_semicolon
  21                       | outf_statement optional_semicolon
  22                       | repeat_statement optional_semicolon
  23                       | goto_statement optional_semicolon
  24                       | mult_assign_statement optional_semicolon
  25                       | return_statement optional_semicolon
  26                       | TAG optional_not_semicolon

  27  executable_statement_list : executable_statement
  28                            | executable_statement_list executable_statement

  29  declare_var : var_type var_list ';'
  30              | var_type var_list error
  31              | var_type ID ';'
  32              | var_type ID error

  33  declare_fun : var_type FUN ID '(' parametro ')' BEGIN fun_body END
  34              | var_type FUN error '(' parametro ')' BEGIN fun_body END
  35              | var_type FUN ID '(' error ')' BEGIN fun_body END

  36  declare_pair : TYPEDEF PAIR '<' var_type '>' ID
  37               | TYPEDEF '<' var_type '>' ID
  38               | TYPEDEF PAIR var_type ID
  39               | TYPEDEF PAIR '<' var_type '>' error

  40  var_list : ID ',' ID
  41           | var_list ',' ID

  42  parametro : var_type ID
  43            | ID
  44            | var_type error

  45  return_statement : RET '(' expr ')'
  46                   | RET expr

  47  fun_body : statement_list

  48  var_type : UINTEGER
  49           | SINGLE
  50           | ID

  51  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  52               | IF cond THEN ctrl_block_statement END_IF
  53               | IF '(' cond THEN ctrl_block_statement END_IF
  54               | IF cond ')' THEN ctrl_block_statement END_IF
  55               | IF '(' cond ')' THEN ctrl_block_statement error
  56               | IF '(' cond ')' THEN END_IF
  57               | IF '(' cond ')' THEN error END_IF
  58               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  59               | IF '(' cond ')' THEN ELSE END_IF
  60               | IF '(' cond ')' THEN ELSE ctrl_block_statement END_IF
  61               | IF '(' cond ')' THEN ctrl_block_statement ELSE END_IF
  62               | IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF
  63               | IF '(' cond ')' THEN error ELSE ctrl_block_statement END_IF
  64               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  65               | IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  66               | IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  67               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error

  68  ctrl_block_statement : executable_statement_list

  69  cond : expr cond_op expr
  70       | error

  71  cond_op : '<'
  72          | '>'
  73          | '='
  74          | NEQ
  75          | LEQ
  76          | MEQ

  77  assign_statement : ID ASSIGN expr
  78                   | expr_pair ASSIGN expr
  79                   | var_type ID ASSIGN expr

  80  expr : expr '+' term
  81       | expr '-' term
  82       | term
  83       | error

  84  term : term '*' fact
  85       | term '/' fact
  86       | fact

  87  fact : ID
  88       | CTE
  89       | '-' CTE
  90       | '-' ID
  91       | fun_invoc
  92       | expr_pair
  93       | CHARCH

  94  expr_pair : ID '{' CTE '}'

  95  fun_invoc : ID '(' expr ')'
  96            | ID '(' expr error ')'

  97  outf_statement : OUTF '(' expr ')'
  98                 | OUTF '(' ')'
  99                 | OUTF error

 100  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')'
 101                   | REPEAT BEGIN executable_statement_list END UNTIL cond
 102                   | REPEAT BEGIN executable_statement_list END UNTIL '(' cond
 103                   | REPEAT BEGIN executable_statement_list END UNTIL cond ')'
 104                   | REPEAT BEGIN END UNTIL '(' cond ')'
 105                   | REPEAT BEGIN END UNTIL cond
 106                   | REPEAT BEGIN END UNTIL '(' cond
 107                   | REPEAT BEGIN END UNTIL cond ')'
 108                   | REPEAT BEGIN executable_statement_list END '(' cond ')'
 109                   | REPEAT BEGIN executable_statement_list END UNTIL '(' ')'

 110  mult_assign_statement : id_list ASSIGN expr_list
 111                        | id_list ASSIGN error

 112  id_list : elem_list ',' elem_list
 113          | id_list ',' elem_list

 114  elem_list : ID
 115            | expr_pair

 116  expr_list : expr ',' expr
 117            | expr_list ',' expr

 118  goto_statement : GOTO TAG
 119                 | GOTO error

state 0
	$accept : . prog $end  (0)
	prog : .  (7)

	error  shift 1
	ID  shift 2
	$end  reduce 7

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)
	prog : ID . statement_list END  (4)
	prog : ID . BEGIN statement_list error  (5)
	prog : ID . statement_list  (6)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	BEGIN  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 17
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 34
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 5
	statement : error . ';'  (14)

	';'  shift 35
	.  error


state 6
	var_type : ID .  (50)
	assign_statement : ID . ASSIGN expr  (77)
	expr_pair : ID . '{' CTE '}'  (94)
	elem_list : ID .  (114)

	ASSIGN  shift 36
	'{'  shift 37
	ID  reduce 50
	FUN  reduce 50
	','  reduce 114


state 7
	executable_statement : TAG . optional_not_semicolon  (26)
	optional_not_semicolon : .  (18)

	';'  shift 38
	$end  reduce 18
	error  reduce 18
	ID  reduce 18
	TAG  reduce 18
	IF  reduce 18
	ELSE  reduce 18
	END  reduce 18
	END_IF  reduce 18
	OUTF  reduce 18
	TYPEDEF  reduce 18
	RET  reduce 18
	UINTEGER  reduce 18
	SINGLE  reduce 18
	REPEAT  reduce 18
	GOTO  reduce 18

	optional_not_semicolon  goto 39


state 8
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (51)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (52)
	if_statement : IF . '(' cond THEN ctrl_block_statement END_IF  (53)
	if_statement : IF . cond ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (55)
	if_statement : IF . '(' cond ')' THEN END_IF  (56)
	if_statement : IF . '(' cond ')' THEN error END_IF  (57)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF . '(' cond ')' THEN ELSE END_IF  (59)
	if_statement : IF . '(' cond ')' THEN ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE END_IF  (61)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE error END_IF  (62)
	if_statement : IF . '(' cond ')' THEN error ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF . '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)
	if_statement : IF . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (67)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'('  shift 44
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 47
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 9
	prog : ID BEGIN . statement_list END  (1)
	prog : ID BEGIN . statement_list error  (5)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 52
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 10
	outf_statement : OUTF . '(' expr ')'  (97)
	outf_statement : OUTF . '(' ')'  (98)
	outf_statement : OUTF . error  (99)

	error  shift 53
	'('  shift 54
	.  error


state 11
	declare_pair : TYPEDEF . PAIR '<' var_type '>' ID  (36)
	declare_pair : TYPEDEF . '<' var_type '>' ID  (37)
	declare_pair : TYPEDEF . PAIR var_type ID  (38)
	declare_pair : TYPEDEF . PAIR '<' var_type '>' error  (39)

	PAIR  shift 55
	'<'  shift 56
	.  error


state 12
	return_statement : RET . '(' expr ')'  (45)
	return_statement : RET . expr  (46)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'('  shift 58
	'-'  shift 45
	.  error

	expr  goto 59
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 13
	var_type : UINTEGER .  (48)

	.  reduce 48


state 14
	var_type : SINGLE .  (49)

	.  reduce 49


state 15
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')'  (100)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (101)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond  (102)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond ')'  (103)
	repeat_statement : REPEAT . BEGIN END UNTIL '(' cond ')'  (104)
	repeat_statement : REPEAT . BEGIN END UNTIL cond  (105)
	repeat_statement : REPEAT . BEGIN END UNTIL '(' cond  (106)
	repeat_statement : REPEAT . BEGIN END UNTIL cond ')'  (107)
	repeat_statement : REPEAT . BEGIN executable_statement_list END '(' cond ')'  (108)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' ')'  (109)

	BEGIN  shift 60
	.  error


state 16
	goto_statement : GOTO . TAG  (118)
	goto_statement : GOTO . error  (119)

	error  shift 61
	TAG  shift 62
	.  error


state 17
	prog : ID statement_list . END  (4)
	prog : ID statement_list .  (6)
	statement_list : statement_list . statement  (9)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 63
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	$end  reduce 6

	statement  goto 64
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 18
	statement_list : statement .  (8)

	.  reduce 8


state 19
	statement : executable_statement .  (10)

	.  reduce 10


state 20
	statement : declare_pair . optional_semicolon  (11)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	END  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 66


state 21
	statement : declare_var .  (12)

	.  reduce 12


state 22
	statement : declare_fun .  (13)

	.  reduce 13


state 23
	executable_statement : if_statement . optional_semicolon  (19)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 67


state 24
	executable_statement : assign_statement . optional_semicolon  (20)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 68


state 25
	executable_statement : outf_statement . optional_semicolon  (21)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 69


state 26
	executable_statement : repeat_statement . optional_semicolon  (22)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 70


state 27
	executable_statement : goto_statement . optional_semicolon  (23)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 71


state 28
	executable_statement : mult_assign_statement . optional_semicolon  (24)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 72


state 29
	executable_statement : return_statement . optional_semicolon  (25)
	optional_semicolon : .  (16)

	';'  shift 65
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 73


state 30
	declare_var : var_type . var_list ';'  (29)
	declare_var : var_type . var_list error  (30)
	declare_var : var_type . ID ';'  (31)
	declare_var : var_type . ID error  (32)
	declare_fun : var_type . FUN ID '(' parametro ')' BEGIN fun_body END  (33)
	declare_fun : var_type . FUN error '(' parametro ')' BEGIN fun_body END  (34)
	declare_fun : var_type . FUN ID '(' error ')' BEGIN fun_body END  (35)
	assign_statement : var_type . ID ASSIGN expr  (79)

	ID  shift 74
	FUN  shift 75
	.  error

	var_list  goto 76


state 31
	assign_statement : expr_pair . ASSIGN expr  (78)
	elem_list : expr_pair .  (115)

	ASSIGN  shift 77
	','  reduce 115


state 32
	mult_assign_statement : id_list . ASSIGN expr_list  (110)
	mult_assign_statement : id_list . ASSIGN error  (111)
	id_list : id_list . ',' elem_list  (113)

	ASSIGN  shift 78
	','  shift 79
	.  error


state 33
	id_list : elem_list . ',' elem_list  (112)

	','  shift 80
	.  error


state 34
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (9)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 81
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 64
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 35
	statement : error ';' .  (14)

	.  reduce 14


state 36
	assign_statement : ID ASSIGN . expr  (77)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 82
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 37
	expr_pair : ID '{' . CTE '}'  (94)

	CTE  shift 83
	.  error


state 38
	optional_not_semicolon : ';' .  (17)

	.  reduce 17


state 39
	executable_statement : TAG optional_not_semicolon .  (26)

	.  reduce 26


state 40
	cond : error .  (70)
	expr : error .  (83)

	$end  reduce 70
	error  reduce 70
	ID  reduce 70
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	TAG  reduce 70
	IF  reduce 70
	THEN  reduce 70
	ELSE  reduce 70
	END  reduce 70
	END_IF  reduce 70
	OUTF  reduce 70
	TYPEDEF  reduce 70
	RET  reduce 70
	UINTEGER  reduce 70
	SINGLE  reduce 70
	REPEAT  reduce 70
	GOTO  reduce 70
	';'  reduce 70
	')'  reduce 70
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83


state 41
	fact : ID .  (87)
	expr_pair : ID . '{' CTE '}'  (94)
	fun_invoc : ID . '(' expr ')'  (95)
	fun_invoc : ID . '(' expr error ')'  (96)

	'('  shift 84
	'{'  shift 37
	$end  reduce 87
	error  reduce 87
	ID  reduce 87
	NEQ  reduce 87
	LEQ  reduce 87
	MEQ  reduce 87
	TAG  reduce 87
	IF  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	END  reduce 87
	END_IF  reduce 87
	OUTF  reduce 87
	TYPEDEF  reduce 87
	RET  reduce 87
	UINTEGER  reduce 87
	SINGLE  reduce 87
	REPEAT  reduce 87
	GOTO  reduce 87
	';'  reduce 87
	')'  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	','  reduce 87
	'='  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	'*'  reduce 87
	'/'  reduce 87


state 42
	fact : CTE .  (88)

	.  reduce 88


state 43
	fact : CHARCH .  (93)

	.  reduce 93


state 44
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (51)
	if_statement : IF '(' . cond THEN ctrl_block_statement END_IF  (53)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (55)
	if_statement : IF '(' . cond ')' THEN END_IF  (56)
	if_statement : IF '(' . cond ')' THEN error END_IF  (57)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' . cond ')' THEN ELSE END_IF  (59)
	if_statement : IF '(' . cond ')' THEN ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE END_IF  (61)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE error END_IF  (62)
	if_statement : IF '(' . cond ')' THEN error ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF '(' . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (67)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 85
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 45
	fact : '-' . CTE  (89)
	fact : '-' . ID  (90)

	ID  shift 86
	CTE  shift 87
	.  error


state 46
	cond : expr . cond_op expr  (69)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	NEQ  shift 88
	LEQ  shift 89
	MEQ  shift 90
	'<'  shift 91
	'>'  shift 92
	'='  shift 93
	'+'  shift 94
	'-'  shift 95
	.  error

	cond_op  goto 96


state 47
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (52)
	if_statement : IF cond . ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)

	THEN  shift 97
	')'  shift 98
	.  error


state 48
	fact : expr_pair .  (92)

	.  reduce 92


state 49
	expr : term .  (82)
	term : term . '*' fact  (84)
	term : term . '/' fact  (85)

	'*'  shift 99
	'/'  shift 100
	$end  reduce 82
	error  reduce 82
	ID  reduce 82
	NEQ  reduce 82
	LEQ  reduce 82
	MEQ  reduce 82
	TAG  reduce 82
	IF  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	END  reduce 82
	END_IF  reduce 82
	OUTF  reduce 82
	TYPEDEF  reduce 82
	RET  reduce 82
	UINTEGER  reduce 82
	SINGLE  reduce 82
	REPEAT  reduce 82
	GOTO  reduce 82
	';'  reduce 82
	')'  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	','  reduce 82
	'='  reduce 82
	'+'  reduce 82
	'-'  reduce 82


state 50
	term : fact .  (86)

	.  reduce 86


state 51
	fact : fun_invoc .  (91)

	.  reduce 91


state 52
	prog : ID BEGIN statement_list . END  (1)
	prog : ID BEGIN statement_list . error  (5)
	statement_list : statement_list . statement  (9)

	error  shift 101
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 102
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 64
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 53
	outf_statement : OUTF error .  (99)

	.  reduce 99


state 54
	outf_statement : OUTF '(' . expr ')'  (97)
	outf_statement : OUTF '(' . ')'  (98)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	')'  shift 103
	'-'  shift 45
	.  error

	expr  goto 104
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 55
	declare_pair : TYPEDEF PAIR . '<' var_type '>' ID  (36)
	declare_pair : TYPEDEF PAIR . var_type ID  (38)
	declare_pair : TYPEDEF PAIR . '<' var_type '>' error  (39)

	ID  shift 105
	UINTEGER  shift 13
	SINGLE  shift 14
	'<'  shift 106
	.  error

	var_type  goto 107


state 56
	declare_pair : TYPEDEF '<' . var_type '>' ID  (37)

	ID  shift 105
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 108


state 57
	expr : error .  (83)

	.  reduce 83


state 58
	return_statement : RET '(' . expr ')'  (45)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 109
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 59
	return_statement : RET expr .  (46)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 46
	error  reduce 46
	ID  reduce 46
	TAG  reduce 46
	IF  reduce 46
	ELSE  reduce 46
	END  reduce 46
	END_IF  reduce 46
	OUTF  reduce 46
	TYPEDEF  reduce 46
	RET  reduce 46
	UINTEGER  reduce 46
	SINGLE  reduce 46
	REPEAT  reduce 46
	GOTO  reduce 46
	';'  reduce 46


state 60
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')'  (100)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (101)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond  (102)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond ')'  (103)
	repeat_statement : REPEAT BEGIN . END UNTIL '(' cond ')'  (104)
	repeat_statement : REPEAT BEGIN . END UNTIL cond  (105)
	repeat_statement : REPEAT BEGIN . END UNTIL '(' cond  (106)
	repeat_statement : REPEAT BEGIN . END UNTIL cond ')'  (107)
	repeat_statement : REPEAT BEGIN . executable_statement_list END '(' cond ')'  (108)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' ')'  (109)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 110
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 112
	var_type  goto 113
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 61
	goto_statement : GOTO error .  (119)

	.  reduce 119


state 62
	goto_statement : GOTO TAG .  (118)

	.  reduce 118


state 63
	prog : ID statement_list END .  (4)

	.  reduce 4


state 64
	statement_list : statement_list statement .  (9)

	.  reduce 9


state 65
	optional_semicolon : ';' .  (15)

	.  reduce 15


state 66
	statement : declare_pair optional_semicolon .  (11)

	.  reduce 11


state 67
	executable_statement : if_statement optional_semicolon .  (19)

	.  reduce 19


state 68
	executable_statement : assign_statement optional_semicolon .  (20)

	.  reduce 20


state 69
	executable_statement : outf_statement optional_semicolon .  (21)

	.  reduce 21


state 70
	executable_statement : repeat_statement optional_semicolon .  (22)

	.  reduce 22


state 71
	executable_statement : goto_statement optional_semicolon .  (23)

	.  reduce 23


state 72
	executable_statement : mult_assign_statement optional_semicolon .  (24)

	.  reduce 24


state 73
	executable_statement : return_statement optional_semicolon .  (25)

	.  reduce 25


state 74
	declare_var : var_type ID . ';'  (31)
	declare_var : var_type ID . error  (32)
	var_list : ID . ',' ID  (40)
	assign_statement : var_type ID . ASSIGN expr  (79)

	error  shift 114
	ASSIGN  shift 115
	';'  shift 116
	','  shift 117
	.  error


state 75
	declare_fun : var_type FUN . ID '(' parametro ')' BEGIN fun_body END  (33)
	declare_fun : var_type FUN . error '(' parametro ')' BEGIN fun_body END  (34)
	declare_fun : var_type FUN . ID '(' error ')' BEGIN fun_body END  (35)

	error  shift 118
	ID  shift 119
	.  error


state 76
	declare_var : var_type var_list . ';'  (29)
	declare_var : var_type var_list . error  (30)
	var_list : var_list . ',' ID  (41)

	error  shift 120
	';'  shift 121
	','  shift 122
	.  error


state 77
	assign_statement : expr_pair ASSIGN . expr  (78)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 123
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 78
	mult_assign_statement : id_list ASSIGN . expr_list  (110)
	mult_assign_statement : id_list ASSIGN . error  (111)

	error  shift 124
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 125
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51
	expr_list  goto 126


state 79
	id_list : id_list ',' . elem_list  (113)

	ID  shift 127
	.  error

	expr_pair  goto 128
	elem_list  goto 129


state 80
	id_list : elem_list ',' . elem_list  (112)

	ID  shift 127
	.  error

	expr_pair  goto 128
	elem_list  goto 130


state 81
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 82
	assign_statement : ID ASSIGN expr .  (77)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 77
	error  reduce 77
	ID  reduce 77
	TAG  reduce 77
	IF  reduce 77
	ELSE  reduce 77
	END  reduce 77
	END_IF  reduce 77
	OUTF  reduce 77
	TYPEDEF  reduce 77
	RET  reduce 77
	UINTEGER  reduce 77
	SINGLE  reduce 77
	REPEAT  reduce 77
	GOTO  reduce 77
	';'  reduce 77


state 83
	expr_pair : ID '{' CTE . '}'  (94)

	'}'  shift 131
	.  error


state 84
	fun_invoc : ID '(' . expr ')'  (95)
	fun_invoc : ID '(' . expr error ')'  (96)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 132
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 85
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond . THEN ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (55)
	if_statement : IF '(' cond . ')' THEN END_IF  (56)
	if_statement : IF '(' cond . ')' THEN error END_IF  (57)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' cond . ')' THEN ELSE END_IF  (59)
	if_statement : IF '(' cond . ')' THEN ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE END_IF  (61)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE error END_IF  (62)
	if_statement : IF '(' cond . ')' THEN error ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF '(' cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (67)

	THEN  shift 133
	')'  shift 134
	.  error


state 86
	fact : '-' ID .  (90)

	.  reduce 90


state 87
	fact : '-' CTE .  (89)

	.  reduce 89


state 88
	cond_op : NEQ .  (74)

	.  reduce 74


state 89
	cond_op : LEQ .  (75)

	.  reduce 75


state 90
	cond_op : MEQ .  (76)

	.  reduce 76


state 91
	cond_op : '<' .  (71)

	.  reduce 71


state 92
	cond_op : '>' .  (72)

	.  reduce 72


state 93
	cond_op : '=' .  (73)

	.  reduce 73


state 94
	expr : expr '+' . term  (80)

	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr_pair  goto 48
	term  goto 135
	fact  goto 50
	fun_invoc  goto 51


state 95
	expr : expr '-' . term  (81)

	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr_pair  goto 48
	term  goto 136
	fact  goto 50
	fun_invoc  goto 51


state 96
	cond : expr cond_op . expr  (69)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 137
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 97
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (52)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (64)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 139
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 98
	if_statement : IF cond ')' . THEN ctrl_block_statement END_IF  (54)
	if_statement : IF cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)

	THEN  shift 140
	.  error


state 99
	term : term '*' . fact  (84)

	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr_pair  goto 48
	fact  goto 141
	fun_invoc  goto 51


state 100
	term : term '/' . fact  (85)

	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr_pair  goto 48
	fact  goto 142
	fun_invoc  goto 51


state 101
	prog : ID BEGIN statement_list error .  (5)
	statement : error . ';'  (14)

	';'  shift 35
	$end  reduce 5


state 102
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 103
	outf_statement : OUTF '(' ')' .  (98)

	.  reduce 98


state 104
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	outf_statement : OUTF '(' expr . ')'  (97)

	')'  shift 143
	'+'  shift 94
	'-'  shift 95
	.  error


state 105
	var_type : ID .  (50)

	.  reduce 50


state 106
	declare_pair : TYPEDEF PAIR '<' . var_type '>' ID  (36)
	declare_pair : TYPEDEF PAIR '<' . var_type '>' error  (39)

	ID  shift 105
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 144


state 107
	declare_pair : TYPEDEF PAIR var_type . ID  (38)

	ID  shift 145
	.  error


state 108
	declare_pair : TYPEDEF '<' var_type . '>' ID  (37)

	'>'  shift 146
	.  error


state 109
	return_statement : RET '(' expr . ')'  (45)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	')'  shift 147
	'+'  shift 94
	'-'  shift 95
	.  error


state 110
	repeat_statement : REPEAT BEGIN END . UNTIL '(' cond ')'  (104)
	repeat_statement : REPEAT BEGIN END . UNTIL cond  (105)
	repeat_statement : REPEAT BEGIN END . UNTIL '(' cond  (106)
	repeat_statement : REPEAT BEGIN END . UNTIL cond ')'  (107)

	UNTIL  shift 148
	.  error


state 111
	executable_statement_list : executable_statement .  (27)

	.  reduce 27


state 112
	executable_statement_list : executable_statement_list . executable_statement  (28)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')'  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond ')'  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list . END '(' cond ')'  (108)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' ')'  (109)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 149
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 150
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 113
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 113
	assign_statement : var_type . ID ASSIGN expr  (79)

	ID  shift 151
	.  error


state 114
	declare_var : var_type ID error .  (32)

	.  reduce 32


state 115
	assign_statement : var_type ID ASSIGN . expr  (79)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 152
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 116
	declare_var : var_type ID ';' .  (31)

	.  reduce 31


state 117
	var_list : ID ',' . ID  (40)

	ID  shift 153
	.  error


state 118
	declare_fun : var_type FUN error . '(' parametro ')' BEGIN fun_body END  (34)

	'('  shift 154
	.  error


state 119
	declare_fun : var_type FUN ID . '(' parametro ')' BEGIN fun_body END  (33)
	declare_fun : var_type FUN ID . '(' error ')' BEGIN fun_body END  (35)

	'('  shift 155
	.  error


state 120
	declare_var : var_type var_list error .  (30)

	.  reduce 30


state 121
	declare_var : var_type var_list ';' .  (29)

	.  reduce 29


state 122
	var_list : var_list ',' . ID  (41)

	ID  shift 156
	.  error


state 123
	assign_statement : expr_pair ASSIGN expr .  (78)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 78
	error  reduce 78
	ID  reduce 78
	TAG  reduce 78
	IF  reduce 78
	ELSE  reduce 78
	END  reduce 78
	END_IF  reduce 78
	OUTF  reduce 78
	TYPEDEF  reduce 78
	RET  reduce 78
	UINTEGER  reduce 78
	SINGLE  reduce 78
	REPEAT  reduce 78
	GOTO  reduce 78
	';'  reduce 78


state 124
	expr : error .  (83)
	mult_assign_statement : id_list ASSIGN error .  (111)

	$end  reduce 111
	error  reduce 111
	ID  reduce 111
	TAG  reduce 111
	IF  reduce 111
	ELSE  reduce 111
	END  reduce 111
	END_IF  reduce 111
	OUTF  reduce 111
	TYPEDEF  reduce 111
	RET  reduce 111
	UINTEGER  reduce 111
	SINGLE  reduce 111
	REPEAT  reduce 111
	GOTO  reduce 111
	';'  reduce 111
	','  reduce 83
	'+'  reduce 83
	'-'  reduce 83


state 125
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	expr_list : expr . ',' expr  (116)

	','  shift 157
	'+'  shift 94
	'-'  shift 95
	.  error


state 126
	mult_assign_statement : id_list ASSIGN expr_list .  (110)
	expr_list : expr_list . ',' expr  (117)

	','  shift 158
	$end  reduce 110
	error  reduce 110
	ID  reduce 110
	TAG  reduce 110
	IF  reduce 110
	ELSE  reduce 110
	END  reduce 110
	END_IF  reduce 110
	OUTF  reduce 110
	TYPEDEF  reduce 110
	RET  reduce 110
	UINTEGER  reduce 110
	SINGLE  reduce 110
	REPEAT  reduce 110
	GOTO  reduce 110
	';'  reduce 110


state 127
	expr_pair : ID . '{' CTE '}'  (94)
	elem_list : ID .  (114)

	'{'  shift 37
	ASSIGN  reduce 114
	','  reduce 114


state 128
	elem_list : expr_pair .  (115)

	.  reduce 115


state 129
	id_list : id_list ',' elem_list .  (113)

	.  reduce 113


state 130
	id_list : elem_list ',' elem_list .  (112)

	.  reduce 112


state 131
	expr_pair : ID '{' CTE '}' .  (94)

	.  reduce 94


state 132
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	fun_invoc : ID '(' expr . ')'  (95)
	fun_invoc : ID '(' expr . error ')'  (96)

	error  shift 159
	')'  shift 160
	'+'  shift 94
	'-'  shift 95
	.  error


state 133
	if_statement : IF '(' cond THEN . ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 161
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 134
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (55)
	if_statement : IF '(' cond ')' . THEN END_IF  (56)
	if_statement : IF '(' cond ')' . THEN error END_IF  (57)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' cond ')' . THEN ELSE END_IF  (59)
	if_statement : IF '(' cond ')' . THEN ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE END_IF  (61)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE error END_IF  (62)
	if_statement : IF '(' cond ')' . THEN error ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (67)

	THEN  shift 162
	.  error


state 135
	expr : expr '+' term .  (80)
	term : term . '*' fact  (84)
	term : term . '/' fact  (85)

	'*'  shift 99
	'/'  shift 100
	$end  reduce 80
	error  reduce 80
	ID  reduce 80
	NEQ  reduce 80
	LEQ  reduce 80
	MEQ  reduce 80
	TAG  reduce 80
	IF  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	END  reduce 80
	END_IF  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	UINTEGER  reduce 80
	SINGLE  reduce 80
	REPEAT  reduce 80
	GOTO  reduce 80
	';'  reduce 80
	')'  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	','  reduce 80
	'='  reduce 80
	'+'  reduce 80
	'-'  reduce 80


state 136
	expr : expr '-' term .  (81)
	term : term . '*' fact  (84)
	term : term . '/' fact  (85)

	'*'  shift 99
	'/'  shift 100
	$end  reduce 81
	error  reduce 81
	ID  reduce 81
	NEQ  reduce 81
	LEQ  reduce 81
	MEQ  reduce 81
	TAG  reduce 81
	IF  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	END  reduce 81
	END_IF  reduce 81
	OUTF  reduce 81
	TYPEDEF  reduce 81
	RET  reduce 81
	UINTEGER  reduce 81
	SINGLE  reduce 81
	REPEAT  reduce 81
	GOTO  reduce 81
	';'  reduce 81
	')'  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	','  reduce 81
	'='  reduce 81
	'+'  reduce 81
	'-'  reduce 81


state 137
	cond : expr cond_op expr .  (69)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 69
	error  reduce 69
	ID  reduce 69
	TAG  reduce 69
	IF  reduce 69
	THEN  reduce 69
	ELSE  reduce 69
	END  reduce 69
	END_IF  reduce 69
	OUTF  reduce 69
	TYPEDEF  reduce 69
	RET  reduce 69
	UINTEGER  reduce 69
	SINGLE  reduce 69
	REPEAT  reduce 69
	GOTO  reduce 69
	';'  reduce 69
	')'  reduce 69


state 138
	executable_statement_list : executable_statement_list . executable_statement  (28)
	ctrl_block_statement : executable_statement_list .  (68)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	error  reduce 68
	ELSE  reduce 68
	END_IF  reduce 68

	executable_statement  goto 150
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 113
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 139
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (52)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (64)

	ELSE  shift 163
	END_IF  shift 164
	.  error


state 140
	if_statement : IF cond ')' THEN . ctrl_block_statement END_IF  (54)
	if_statement : IF cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 165
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 141
	term : term '*' fact .  (84)

	.  reduce 84


state 142
	term : term '/' fact .  (85)

	.  reduce 85


state 143
	outf_statement : OUTF '(' expr ')' .  (97)

	.  reduce 97


state 144
	declare_pair : TYPEDEF PAIR '<' var_type . '>' ID  (36)
	declare_pair : TYPEDEF PAIR '<' var_type . '>' error  (39)

	'>'  shift 166
	.  error


state 145
	declare_pair : TYPEDEF PAIR var_type ID .  (38)

	.  reduce 38


state 146
	declare_pair : TYPEDEF '<' var_type '>' . ID  (37)

	ID  shift 167
	.  error


state 147
	return_statement : RET '(' expr ')' .  (45)

	.  reduce 45


state 148
	repeat_statement : REPEAT BEGIN END UNTIL . '(' cond ')'  (104)
	repeat_statement : REPEAT BEGIN END UNTIL . cond  (105)
	repeat_statement : REPEAT BEGIN END UNTIL . '(' cond  (106)
	repeat_statement : REPEAT BEGIN END UNTIL . cond ')'  (107)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'('  shift 168
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 169
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 149
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')'  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond ')'  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list END . '(' cond ')'  (108)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' ')'  (109)

	UNTIL  shift 170
	'('  shift 171
	.  error


state 150
	executable_statement_list : executable_statement_list executable_statement .  (28)

	.  reduce 28


state 151
	assign_statement : var_type ID . ASSIGN expr  (79)

	ASSIGN  shift 115
	.  error


state 152
	assign_statement : var_type ID ASSIGN expr .  (79)
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 79
	error  reduce 79
	ID  reduce 79
	TAG  reduce 79
	IF  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	GOTO  reduce 79
	';'  reduce 79


state 153
	var_list : ID ',' ID .  (40)

	.  reduce 40


state 154
	declare_fun : var_type FUN error '(' . parametro ')' BEGIN fun_body END  (34)

	ID  shift 172
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 173
	parametro  goto 174


state 155
	declare_fun : var_type FUN ID '(' . parametro ')' BEGIN fun_body END  (33)
	declare_fun : var_type FUN ID '(' . error ')' BEGIN fun_body END  (35)

	error  shift 175
	ID  shift 172
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 173
	parametro  goto 176


state 156
	var_list : var_list ',' ID .  (41)

	.  reduce 41


state 157
	expr_list : expr ',' . expr  (116)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 177
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 158
	expr_list : expr_list ',' . expr  (117)

	error  shift 57
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 178
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 159
	fun_invoc : ID '(' expr error . ')'  (96)

	')'  shift 179
	.  error


state 160
	fun_invoc : ID '(' expr ')' .  (95)

	.  reduce 95


state 161
	if_statement : IF '(' cond THEN ctrl_block_statement . END_IF  (53)
	if_statement : IF '(' cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (65)

	ELSE  shift 180
	END_IF  shift 181
	.  error


state 162
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (51)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (55)
	if_statement : IF '(' cond ')' THEN . END_IF  (56)
	if_statement : IF '(' cond ')' THEN . error END_IF  (57)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' cond ')' THEN . ELSE END_IF  (59)
	if_statement : IF '(' cond ')' THEN . ELSE ctrl_block_statement END_IF  (60)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE END_IF  (61)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE error END_IF  (62)
	if_statement : IF '(' cond ')' THEN . error ELSE ctrl_block_statement END_IF  (63)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (67)

	error  shift 182
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	ELSE  shift 183
	END_IF  shift 184
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 185
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 163
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (64)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 186
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 164
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (52)

	.  reduce 52


state 165
	if_statement : IF cond ')' THEN ctrl_block_statement . END_IF  (54)
	if_statement : IF cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (66)

	ELSE  shift 187
	END_IF  shift 188
	.  error


state 166
	declare_pair : TYPEDEF PAIR '<' var_type '>' . ID  (36)
	declare_pair : TYPEDEF PAIR '<' var_type '>' . error  (39)

	error  shift 189
	ID  shift 190
	.  error


state 167
	declare_pair : TYPEDEF '<' var_type '>' ID .  (37)

	.  reduce 37


state 168
	repeat_statement : REPEAT BEGIN END UNTIL '(' . cond ')'  (104)
	repeat_statement : REPEAT BEGIN END UNTIL '(' . cond  (106)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 191
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 169
	repeat_statement : REPEAT BEGIN END UNTIL cond .  (105)
	repeat_statement : REPEAT BEGIN END UNTIL cond . ')'  (107)

	')'  shift 192
	$end  reduce 105
	error  reduce 105
	ID  reduce 105
	TAG  reduce 105
	IF  reduce 105
	ELSE  reduce 105
	END  reduce 105
	END_IF  reduce 105
	OUTF  reduce 105
	TYPEDEF  reduce 105
	RET  reduce 105
	UINTEGER  reduce 105
	SINGLE  reduce 105
	REPEAT  reduce 105
	GOTO  reduce 105
	';'  reduce 105


state 170
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')'  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond ')'  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' ')'  (109)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'('  shift 193
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 194
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 171
	repeat_statement : REPEAT BEGIN executable_statement_list END '(' . cond ')'  (108)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 195
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 172
	parametro : ID .  (43)
	var_type : ID .  (50)

	error  reduce 50
	ID  reduce 50
	')'  reduce 43


state 173
	parametro : var_type . ID  (42)
	parametro : var_type . error  (44)

	error  shift 196
	ID  shift 197
	.  error


state 174
	declare_fun : var_type FUN error '(' parametro . ')' BEGIN fun_body END  (34)

	')'  shift 198
	.  error


state 175
	declare_fun : var_type FUN ID '(' error . ')' BEGIN fun_body END  (35)

	')'  shift 199
	.  error


state 176
	declare_fun : var_type FUN ID '(' parametro . ')' BEGIN fun_body END  (33)

	')'  shift 200
	.  error


state 177
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	expr_list : expr ',' expr .  (116)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 116
	error  reduce 116
	ID  reduce 116
	TAG  reduce 116
	IF  reduce 116
	ELSE  reduce 116
	END  reduce 116
	END_IF  reduce 116
	OUTF  reduce 116
	TYPEDEF  reduce 116
	RET  reduce 116
	UINTEGER  reduce 116
	SINGLE  reduce 116
	REPEAT  reduce 116
	GOTO  reduce 116
	';'  reduce 116
	','  reduce 116


state 178
	expr : expr . '+' term  (80)
	expr : expr . '-' term  (81)
	expr_list : expr_list ',' expr .  (117)

	'+'  shift 94
	'-'  shift 95
	$end  reduce 117
	error  reduce 117
	ID  reduce 117
	TAG  reduce 117
	IF  reduce 117
	ELSE  reduce 117
	END  reduce 117
	END_IF  reduce 117
	OUTF  reduce 117
	TYPEDEF  reduce 117
	RET  reduce 117
	UINTEGER  reduce 117
	SINGLE  reduce 117
	REPEAT  reduce 117
	GOTO  reduce 117
	';'  reduce 117
	','  reduce 117


state 179
	fun_invoc : ID '(' expr error ')' .  (96)

	.  reduce 96


state 180
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (65)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 201
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 181
	if_statement : IF '(' cond THEN ctrl_block_statement END_IF .  (53)

	.  reduce 53


state 182
	if_statement : IF '(' cond ')' THEN error . END_IF  (57)
	if_statement : IF '(' cond ')' THEN error . ELSE ctrl_block_statement END_IF  (63)

	ELSE  shift 202
	END_IF  shift 203
	.  error


state 183
	if_statement : IF '(' cond ')' THEN ELSE . END_IF  (59)
	if_statement : IF '(' cond ')' THEN ELSE . ctrl_block_statement END_IF  (60)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 204
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 205
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 184
	if_statement : IF '(' cond ')' THEN END_IF .  (56)

	.  reduce 56


state 185
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (55)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE END_IF  (61)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE error END_IF  (62)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (67)

	error  shift 206
	ELSE  shift 207
	END_IF  shift 208
	.  error


state 186
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (64)

	END_IF  shift 209
	.  error


state 187
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (66)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 210
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 188
	if_statement : IF cond ')' THEN ctrl_block_statement END_IF .  (54)

	.  reduce 54


state 189
	declare_pair : TYPEDEF PAIR '<' var_type '>' error .  (39)

	.  reduce 39


state 190
	declare_pair : TYPEDEF PAIR '<' var_type '>' ID .  (36)

	.  reduce 36


state 191
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond . ')'  (104)
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond .  (106)

	')'  shift 211
	$end  reduce 106
	error  reduce 106
	ID  reduce 106
	TAG  reduce 106
	IF  reduce 106
	ELSE  reduce 106
	END  reduce 106
	END_IF  reduce 106
	OUTF  reduce 106
	TYPEDEF  reduce 106
	RET  reduce 106
	UINTEGER  reduce 106
	SINGLE  reduce 106
	REPEAT  reduce 106
	GOTO  reduce 106
	';'  reduce 106


state 192
	repeat_statement : REPEAT BEGIN END UNTIL cond ')' .  (107)

	.  reduce 107


state 193
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')'  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . ')'  (109)

	error  shift 40
	ID  shift 41
	CTE  shift 42
	CHARCH  shift 43
	')'  shift 212
	'-'  shift 45
	.  error

	expr  goto 46
	cond  goto 213
	expr_pair  goto 48
	term  goto 49
	fact  goto 50
	fun_invoc  goto 51


state 194
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond . ')'  (103)

	')'  shift 214
	$end  reduce 101
	error  reduce 101
	ID  reduce 101
	TAG  reduce 101
	IF  reduce 101
	ELSE  reduce 101
	END  reduce 101
	END_IF  reduce 101
	OUTF  reduce 101
	TYPEDEF  reduce 101
	RET  reduce 101
	UINTEGER  reduce 101
	SINGLE  reduce 101
	REPEAT  reduce 101
	GOTO  reduce 101
	';'  reduce 101


state 195
	repeat_statement : REPEAT BEGIN executable_statement_list END '(' cond . ')'  (108)

	')'  shift 215
	.  error


state 196
	parametro : var_type error .  (44)

	.  reduce 44


state 197
	parametro : var_type ID .  (42)

	.  reduce 42


state 198
	declare_fun : var_type FUN error '(' parametro ')' . BEGIN fun_body END  (34)

	BEGIN  shift 216
	.  error


state 199
	declare_fun : var_type FUN ID '(' error ')' . BEGIN fun_body END  (35)

	BEGIN  shift 217
	.  error


state 200
	declare_fun : var_type FUN ID '(' parametro ')' . BEGIN fun_body END  (33)

	BEGIN  shift 218
	.  error


state 201
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (65)

	END_IF  shift 219
	.  error


state 202
	if_statement : IF '(' cond ')' THEN error ELSE . ctrl_block_statement END_IF  (63)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 220
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 203
	if_statement : IF '(' cond ')' THEN error END_IF .  (57)

	.  reduce 57


state 204
	if_statement : IF '(' cond ')' THEN ELSE END_IF .  (59)

	.  reduce 59


state 205
	if_statement : IF '(' cond ')' THEN ELSE ctrl_block_statement . END_IF  (60)

	END_IF  shift 221
	.  error


state 206
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (55)

	.  reduce 55


state 207
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (58)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . END_IF  (61)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . error END_IF  (62)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (67)

	error  shift 222
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 223
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 111
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 138
	var_type  goto 113
	ctrl_block_statement  goto 224
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 208
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (51)

	.  reduce 51


state 209
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (64)

	.  reduce 64


state 210
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (66)

	END_IF  shift 225
	.  error


state 211
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond ')' .  (104)

	.  reduce 104


state 212
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' ')' .  (109)

	.  reduce 109


state 213
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')'  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond .  (102)

	')'  shift 226
	$end  reduce 102
	error  reduce 102
	ID  reduce 102
	TAG  reduce 102
	IF  reduce 102
	ELSE  reduce 102
	END  reduce 102
	END_IF  reduce 102
	OUTF  reduce 102
	TYPEDEF  reduce 102
	RET  reduce 102
	UINTEGER  reduce 102
	SINGLE  reduce 102
	REPEAT  reduce 102
	GOTO  reduce 102
	';'  reduce 102


state 214
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond ')' .  (103)

	.  reduce 103


state 215
	repeat_statement : REPEAT BEGIN executable_statement_list END '(' cond ')' .  (108)

	.  reduce 108


state 216
	declare_fun : var_type FUN error '(' parametro ')' BEGIN . fun_body END  (34)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 227
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	fun_body  goto 228
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 217
	declare_fun : var_type FUN ID '(' error ')' BEGIN . fun_body END  (35)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 227
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	fun_body  goto 229
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 218
	declare_fun : var_type FUN ID '(' parametro ')' BEGIN . fun_body END  (33)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 227
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	fun_body  goto 230
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 219
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (65)

	.  reduce 65


state 220
	if_statement : IF '(' cond ')' THEN error ELSE ctrl_block_statement . END_IF  (63)

	END_IF  shift 231
	.  error


state 221
	if_statement : IF '(' cond ')' THEN ELSE ctrl_block_statement END_IF .  (60)

	.  reduce 60


state 222
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error . END_IF  (62)

	END_IF  shift 232
	.  error


state 223
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE END_IF .  (61)

	.  reduce 61


state 224
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (58)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (67)

	error  shift 233
	END_IF  shift 234
	.  error


state 225
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (66)

	.  reduce 66


state 226
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' .  (100)

	.  reduce 100


state 227
	statement_list : statement_list . statement  (9)
	fun_body : statement_list .  (47)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	END  reduce 47

	statement  goto 64
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	expr_pair  goto 31
	id_list  goto 32
	elem_list  goto 33


state 228
	declare_fun : var_type FUN error '(' parametro ')' BEGIN fun_body . END  (34)

	END  shift 235
	.  error


state 229
	declare_fun : var_type FUN ID '(' error ')' BEGIN fun_body . END  (35)

	END  shift 236
	.  error


state 230
	declare_fun : var_type FUN ID '(' parametro ')' BEGIN fun_body . END  (33)

	END  shift 237
	.  error


state 231
	if_statement : IF '(' cond ')' THEN error ELSE ctrl_block_statement END_IF .  (63)

	.  reduce 63


state 232
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF .  (62)

	.  reduce 62


state 233
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (67)

	.  reduce 67


state 234
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (58)

	.  reduce 58


state 235
	declare_fun : var_type FUN error '(' parametro ')' BEGIN fun_body END .  (34)

	.  reduce 34


state 236
	declare_fun : var_type FUN ID '(' error ')' BEGIN fun_body END .  (35)

	.  reduce 35


state 237
	declare_fun : var_type FUN ID '(' parametro ')' BEGIN fun_body END .  (33)

	.  reduce 33


39 terminals, 33 nonterminals
120 grammar rules, 238 states
