   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error
   4       | ID statement_list END
   5       | ID BEGIN statement_list error
   6       | ID statement_list
   7       |

   8  statement_list : statement
   9                 | statement_list statement

  10  statement : executable_statement
  11            | declare_pair optional_semicolon
  12            | declare_var
  13            | declare_fun
  14            | error ';'

  15  optional_semicolon : ';'
  16                     |

  17  optional_not_semicolon : ';'
  18                         |

  19  executable_statement : if_statement optional_semicolon
  20                       | assign_statement optional_semicolon
  21                       | outf_statement optional_semicolon
  22                       | repeat_statement optional_semicolon
  23                       | goto_statement optional_semicolon
  24                       | mult_assign_statement optional_semicolon
  25                       | return_statement optional_semicolon
  26                       | TAG optional_not_semicolon

  27  executable_statement_list : executable_statement
  28                            | executable_statement_list executable_statement

  29  declare_var : var_type var_list ';'
  30              | var_type var_list error
  31              | var_type ID ';'
  32              | var_type ID error

  33  declare_fun : declare_fun_header fun_body END

  34  declare_fun_header : var_type FUN ID '(' parametro ')' BEGIN
  35                     | var_type FUN error '(' parametro ')' BEGIN
  36                     | var_type FUN ID '(' error ')' BEGIN

  37  declare_pair : TYPEDEF PAIR '<' var_type '>' ID
  38               | TYPEDEF '<' var_type '>' ID
  39               | TYPEDEF PAIR var_type ID
  40               | TYPEDEF PAIR '<' var_type '>' error

  41  var_list : ID ',' ID
  42           | var_list ',' ID

  43  parametro : var_type ID
  44            | ID
  45            | var_type error

  46  return_statement : RET '(' expr ')'
  47                   | RET expr

  48  fun_body : statement_list

  49  var_type : UINTEGER
  50           | SINGLE
  51           | ID

  52  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  53               | IF cond THEN ctrl_block_statement END_IF
  54               | IF '(' cond THEN ctrl_block_statement END_IF
  55               | IF cond ')' THEN ctrl_block_statement END_IF
  56               | IF '(' cond ')' THEN ctrl_block_statement error
  57               | IF '(' cond ')' THEN END_IF
  58               | IF '(' cond ')' THEN error END_IF
  59               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  60               | IF '(' cond ')' THEN ELSE END_IF
  61               | IF '(' cond ')' THEN ELSE ctrl_block_statement END_IF
  62               | IF '(' cond ')' THEN ctrl_block_statement ELSE END_IF
  63               | IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF
  64               | IF '(' cond ')' THEN error ELSE ctrl_block_statement END_IF
  65               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  66               | IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  67               | IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  68               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error

  69  if_cond : IF '(' cond ')'

  70  ctrl_block_statement : executable_statement_list

  71  cond : expr cond_op expr
  72       | error

  73  cond_op : '<'
  74          | '>'
  75          | '='
  76          | NEQ
  77          | LEQ
  78          | MEQ

  79  assign_statement : ID ASSIGN expr
  80                   | expr_pair ASSIGN expr
  81                   | var_type ID ASSIGN expr

  82  expr : expr '+' term
  83       | expr '-' term
  84       | term
  85       | error

  86  term : term '*' fact
  87       | term '/' fact
  88       | fact

  89  fact : ID
  90       | CTE
  91       | '-' CTE
  92       | '-' ID
  93       | fun_invoc
  94       | expr_pair
  95       | CHARCH

  96  expr_pair : ID '{' CTE '}'

  97  fun_invoc : ID '(' expr ')'
  98            | ID '(' expr error ')'

  99  outf_statement : OUTF '(' expr ')'
 100                 | OUTF '(' ')'
 101                 | OUTF error

 102  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')'
 103                   | REPEAT BEGIN executable_statement_list END UNTIL cond
 104                   | REPEAT BEGIN executable_statement_list END UNTIL '(' cond
 105                   | REPEAT BEGIN executable_statement_list END UNTIL cond ')'
 106                   | REPEAT BEGIN END UNTIL '(' cond ')'
 107                   | REPEAT BEGIN END UNTIL cond
 108                   | REPEAT BEGIN END UNTIL '(' cond
 109                   | REPEAT BEGIN END UNTIL cond ')'
 110                   | REPEAT BEGIN executable_statement_list END '(' cond ')'
 111                   | REPEAT BEGIN executable_statement_list END UNTIL '(' ')'

 112  mult_assign_statement : id_list ASSIGN expr_list
 113                        | id_list ASSIGN error

 114  id_list : elem_list ',' elem_list
 115          | id_list ',' elem_list

 116  elem_list : ID
 117            | expr_pair

 118  expr_list : expr ',' expr
 119            | expr_list ',' expr

 120  goto_statement : GOTO TAG
 121                 | GOTO error

state 0
	$accept : . prog $end  (0)
	prog : .  (7)

	error  shift 1
	ID  shift 2
	$end  reduce 7

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)
	prog : ID . statement_list END  (4)
	prog : ID . BEGIN statement_list error  (5)
	prog : ID . statement_list  (6)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	BEGIN  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 17
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 35
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 5
	statement : error . ';'  (14)

	';'  shift 36
	.  error


state 6
	var_type : ID .  (51)
	assign_statement : ID . ASSIGN expr  (79)
	expr_pair : ID . '{' CTE '}'  (96)
	elem_list : ID .  (116)

	ASSIGN  shift 37
	'{'  shift 38
	ID  reduce 51
	FUN  reduce 51
	','  reduce 116


state 7
	executable_statement : TAG . optional_not_semicolon  (26)
	optional_not_semicolon : .  (18)

	';'  shift 39
	$end  reduce 18
	error  reduce 18
	ID  reduce 18
	TAG  reduce 18
	IF  reduce 18
	ELSE  reduce 18
	END  reduce 18
	END_IF  reduce 18
	OUTF  reduce 18
	TYPEDEF  reduce 18
	RET  reduce 18
	UINTEGER  reduce 18
	SINGLE  reduce 18
	REPEAT  reduce 18
	GOTO  reduce 18

	optional_not_semicolon  goto 40


state 8
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (52)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (53)
	if_statement : IF . '(' cond THEN ctrl_block_statement END_IF  (54)
	if_statement : IF . cond ')' THEN ctrl_block_statement END_IF  (55)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (56)
	if_statement : IF . '(' cond ')' THEN END_IF  (57)
	if_statement : IF . '(' cond ')' THEN error END_IF  (58)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF . '(' cond ')' THEN ELSE END_IF  (60)
	if_statement : IF . '(' cond ')' THEN ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE END_IF  (62)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE error END_IF  (63)
	if_statement : IF . '(' cond ')' THEN error ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)
	if_statement : IF . '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)
	if_statement : IF . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (67)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (68)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'('  shift 45
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 48
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 9
	prog : ID BEGIN . statement_list END  (1)
	prog : ID BEGIN . statement_list error  (5)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 53
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 10
	outf_statement : OUTF . '(' expr ')'  (99)
	outf_statement : OUTF . '(' ')'  (100)
	outf_statement : OUTF . error  (101)

	error  shift 54
	'('  shift 55
	.  error


state 11
	declare_pair : TYPEDEF . PAIR '<' var_type '>' ID  (37)
	declare_pair : TYPEDEF . '<' var_type '>' ID  (38)
	declare_pair : TYPEDEF . PAIR var_type ID  (39)
	declare_pair : TYPEDEF . PAIR '<' var_type '>' error  (40)

	PAIR  shift 56
	'<'  shift 57
	.  error


state 12
	return_statement : RET . '(' expr ')'  (46)
	return_statement : RET . expr  (47)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'('  shift 59
	'-'  shift 46
	.  error

	expr  goto 60
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 13
	var_type : UINTEGER .  (49)

	.  reduce 49


state 14
	var_type : SINGLE .  (50)

	.  reduce 50


state 15
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')'  (102)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (103)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond  (104)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond ')'  (105)
	repeat_statement : REPEAT . BEGIN END UNTIL '(' cond ')'  (106)
	repeat_statement : REPEAT . BEGIN END UNTIL cond  (107)
	repeat_statement : REPEAT . BEGIN END UNTIL '(' cond  (108)
	repeat_statement : REPEAT . BEGIN END UNTIL cond ')'  (109)
	repeat_statement : REPEAT . BEGIN executable_statement_list END '(' cond ')'  (110)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' ')'  (111)

	BEGIN  shift 61
	.  error


state 16
	goto_statement : GOTO . TAG  (120)
	goto_statement : GOTO . error  (121)

	error  shift 62
	TAG  shift 63
	.  error


state 17
	prog : ID statement_list . END  (4)
	prog : ID statement_list .  (6)
	statement_list : statement_list . statement  (9)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 64
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	$end  reduce 6

	statement  goto 65
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 18
	statement_list : statement .  (8)

	.  reduce 8


state 19
	statement : executable_statement .  (10)

	.  reduce 10


state 20
	statement : declare_pair . optional_semicolon  (11)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	END  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 67


state 21
	statement : declare_var .  (12)

	.  reduce 12


state 22
	statement : declare_fun .  (13)

	.  reduce 13


state 23
	executable_statement : if_statement . optional_semicolon  (19)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 68


state 24
	executable_statement : assign_statement . optional_semicolon  (20)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 69


state 25
	executable_statement : outf_statement . optional_semicolon  (21)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 70


state 26
	executable_statement : repeat_statement . optional_semicolon  (22)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 71


state 27
	executable_statement : goto_statement . optional_semicolon  (23)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 72


state 28
	executable_statement : mult_assign_statement . optional_semicolon  (24)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 73


state 29
	executable_statement : return_statement . optional_semicolon  (25)
	optional_semicolon : .  (16)

	';'  shift 66
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 74


state 30
	declare_var : var_type . var_list ';'  (29)
	declare_var : var_type . var_list error  (30)
	declare_var : var_type . ID ';'  (31)
	declare_var : var_type . ID error  (32)
	declare_fun_header : var_type . FUN ID '(' parametro ')' BEGIN  (34)
	declare_fun_header : var_type . FUN error '(' parametro ')' BEGIN  (35)
	declare_fun_header : var_type . FUN ID '(' error ')' BEGIN  (36)
	assign_statement : var_type . ID ASSIGN expr  (81)

	ID  shift 75
	FUN  shift 76
	.  error

	var_list  goto 77


state 31
	declare_fun : declare_fun_header . fun_body END  (33)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 78
	statement  goto 18
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	fun_body  goto 79
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 32
	assign_statement : expr_pair . ASSIGN expr  (80)
	elem_list : expr_pair .  (117)

	ASSIGN  shift 80
	','  reduce 117


state 33
	mult_assign_statement : id_list . ASSIGN expr_list  (112)
	mult_assign_statement : id_list . ASSIGN error  (113)
	id_list : id_list . ',' elem_list  (115)

	ASSIGN  shift 81
	','  shift 82
	.  error


state 34
	id_list : elem_list . ',' elem_list  (114)

	','  shift 83
	.  error


state 35
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (9)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 84
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 65
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 36
	statement : error ';' .  (14)

	.  reduce 14


state 37
	assign_statement : ID ASSIGN . expr  (79)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 85
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 38
	expr_pair : ID '{' . CTE '}'  (96)

	CTE  shift 86
	.  error


state 39
	optional_not_semicolon : ';' .  (17)

	.  reduce 17


state 40
	executable_statement : TAG optional_not_semicolon .  (26)

	.  reduce 26


state 41
	cond : error .  (72)
	expr : error .  (85)

	$end  reduce 72
	error  reduce 72
	ID  reduce 72
	NEQ  reduce 85
	LEQ  reduce 85
	MEQ  reduce 85
	TAG  reduce 72
	IF  reduce 72
	THEN  reduce 72
	ELSE  reduce 72
	END  reduce 72
	END_IF  reduce 72
	OUTF  reduce 72
	TYPEDEF  reduce 72
	RET  reduce 72
	UINTEGER  reduce 72
	SINGLE  reduce 72
	REPEAT  reduce 72
	GOTO  reduce 72
	';'  reduce 72
	')'  reduce 72
	'<'  reduce 85
	'>'  reduce 85
	'='  reduce 85
	'+'  reduce 85
	'-'  reduce 85


state 42
	fact : ID .  (89)
	expr_pair : ID . '{' CTE '}'  (96)
	fun_invoc : ID . '(' expr ')'  (97)
	fun_invoc : ID . '(' expr error ')'  (98)

	'('  shift 87
	'{'  shift 38
	$end  reduce 89
	error  reduce 89
	ID  reduce 89
	NEQ  reduce 89
	LEQ  reduce 89
	MEQ  reduce 89
	TAG  reduce 89
	IF  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	END  reduce 89
	END_IF  reduce 89
	OUTF  reduce 89
	TYPEDEF  reduce 89
	RET  reduce 89
	UINTEGER  reduce 89
	SINGLE  reduce 89
	REPEAT  reduce 89
	GOTO  reduce 89
	';'  reduce 89
	')'  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	','  reduce 89
	'='  reduce 89
	'+'  reduce 89
	'-'  reduce 89
	'*'  reduce 89
	'/'  reduce 89


state 43
	fact : CTE .  (90)

	.  reduce 90


state 44
	fact : CHARCH .  (95)

	.  reduce 95


state 45
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (52)
	if_statement : IF '(' . cond THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (56)
	if_statement : IF '(' . cond ')' THEN END_IF  (57)
	if_statement : IF '(' . cond ')' THEN error END_IF  (58)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' . cond ')' THEN ELSE END_IF  (60)
	if_statement : IF '(' . cond ')' THEN ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE END_IF  (62)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE error END_IF  (63)
	if_statement : IF '(' . cond ')' THEN error ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF '(' . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (68)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 88
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 46
	fact : '-' . CTE  (91)
	fact : '-' . ID  (92)

	ID  shift 89
	CTE  shift 90
	.  error


state 47
	cond : expr . cond_op expr  (71)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	NEQ  shift 91
	LEQ  shift 92
	MEQ  shift 93
	'<'  shift 94
	'>'  shift 95
	'='  shift 96
	'+'  shift 97
	'-'  shift 98
	.  error

	cond_op  goto 99


state 48
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (53)
	if_statement : IF cond . ')' THEN ctrl_block_statement END_IF  (55)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)
	if_statement : IF cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (67)

	THEN  shift 100
	')'  shift 101
	.  error


state 49
	fact : expr_pair .  (94)

	.  reduce 94


state 50
	expr : term .  (84)
	term : term . '*' fact  (86)
	term : term . '/' fact  (87)

	'*'  shift 102
	'/'  shift 103
	$end  reduce 84
	error  reduce 84
	ID  reduce 84
	NEQ  reduce 84
	LEQ  reduce 84
	MEQ  reduce 84
	TAG  reduce 84
	IF  reduce 84
	THEN  reduce 84
	ELSE  reduce 84
	END  reduce 84
	END_IF  reduce 84
	OUTF  reduce 84
	TYPEDEF  reduce 84
	RET  reduce 84
	UINTEGER  reduce 84
	SINGLE  reduce 84
	REPEAT  reduce 84
	GOTO  reduce 84
	';'  reduce 84
	')'  reduce 84
	'<'  reduce 84
	'>'  reduce 84
	','  reduce 84
	'='  reduce 84
	'+'  reduce 84
	'-'  reduce 84


state 51
	term : fact .  (88)

	.  reduce 88


state 52
	fact : fun_invoc .  (93)

	.  reduce 93


state 53
	prog : ID BEGIN statement_list . END  (1)
	prog : ID BEGIN statement_list . error  (5)
	statement_list : statement_list . statement  (9)

	error  shift 104
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 105
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 65
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 54
	outf_statement : OUTF error .  (101)

	.  reduce 101


state 55
	outf_statement : OUTF '(' . expr ')'  (99)
	outf_statement : OUTF '(' . ')'  (100)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	')'  shift 106
	'-'  shift 46
	.  error

	expr  goto 107
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 56
	declare_pair : TYPEDEF PAIR . '<' var_type '>' ID  (37)
	declare_pair : TYPEDEF PAIR . var_type ID  (39)
	declare_pair : TYPEDEF PAIR . '<' var_type '>' error  (40)

	ID  shift 108
	UINTEGER  shift 13
	SINGLE  shift 14
	'<'  shift 109
	.  error

	var_type  goto 110


state 57
	declare_pair : TYPEDEF '<' . var_type '>' ID  (38)

	ID  shift 108
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 111


state 58
	expr : error .  (85)

	.  reduce 85


state 59
	return_statement : RET '(' . expr ')'  (46)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 112
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 60
	return_statement : RET expr .  (47)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 47
	error  reduce 47
	ID  reduce 47
	TAG  reduce 47
	IF  reduce 47
	ELSE  reduce 47
	END  reduce 47
	END_IF  reduce 47
	OUTF  reduce 47
	TYPEDEF  reduce 47
	RET  reduce 47
	UINTEGER  reduce 47
	SINGLE  reduce 47
	REPEAT  reduce 47
	GOTO  reduce 47
	';'  reduce 47


state 61
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')'  (102)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (103)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond  (104)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond ')'  (105)
	repeat_statement : REPEAT BEGIN . END UNTIL '(' cond ')'  (106)
	repeat_statement : REPEAT BEGIN . END UNTIL cond  (107)
	repeat_statement : REPEAT BEGIN . END UNTIL '(' cond  (108)
	repeat_statement : REPEAT BEGIN . END UNTIL cond ')'  (109)
	repeat_statement : REPEAT BEGIN . executable_statement_list END '(' cond ')'  (110)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' ')'  (111)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 113
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 115
	var_type  goto 116
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 62
	goto_statement : GOTO error .  (121)

	.  reduce 121


state 63
	goto_statement : GOTO TAG .  (120)

	.  reduce 120


state 64
	prog : ID statement_list END .  (4)

	.  reduce 4


state 65
	statement_list : statement_list statement .  (9)

	.  reduce 9


state 66
	optional_semicolon : ';' .  (15)

	.  reduce 15


state 67
	statement : declare_pair optional_semicolon .  (11)

	.  reduce 11


state 68
	executable_statement : if_statement optional_semicolon .  (19)

	.  reduce 19


state 69
	executable_statement : assign_statement optional_semicolon .  (20)

	.  reduce 20


state 70
	executable_statement : outf_statement optional_semicolon .  (21)

	.  reduce 21


state 71
	executable_statement : repeat_statement optional_semicolon .  (22)

	.  reduce 22


state 72
	executable_statement : goto_statement optional_semicolon .  (23)

	.  reduce 23


state 73
	executable_statement : mult_assign_statement optional_semicolon .  (24)

	.  reduce 24


state 74
	executable_statement : return_statement optional_semicolon .  (25)

	.  reduce 25


state 75
	declare_var : var_type ID . ';'  (31)
	declare_var : var_type ID . error  (32)
	var_list : ID . ',' ID  (41)
	assign_statement : var_type ID . ASSIGN expr  (81)

	error  shift 117
	ASSIGN  shift 118
	';'  shift 119
	','  shift 120
	.  error


state 76
	declare_fun_header : var_type FUN . ID '(' parametro ')' BEGIN  (34)
	declare_fun_header : var_type FUN . error '(' parametro ')' BEGIN  (35)
	declare_fun_header : var_type FUN . ID '(' error ')' BEGIN  (36)

	error  shift 121
	ID  shift 122
	.  error


state 77
	declare_var : var_type var_list . ';'  (29)
	declare_var : var_type var_list . error  (30)
	var_list : var_list . ',' ID  (42)

	error  shift 123
	';'  shift 124
	','  shift 125
	.  error


state 78
	statement_list : statement_list . statement  (9)
	fun_body : statement_list .  (48)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	END  reduce 48

	statement  goto 65
	executable_statement  goto 19
	declare_pair  goto 20
	declare_var  goto 21
	declare_fun  goto 22
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 30
	declare_fun_header  goto 31
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 79
	declare_fun : declare_fun_header fun_body . END  (33)

	END  shift 126
	.  error


state 80
	assign_statement : expr_pair ASSIGN . expr  (80)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 127
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 81
	mult_assign_statement : id_list ASSIGN . expr_list  (112)
	mult_assign_statement : id_list ASSIGN . error  (113)

	error  shift 128
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 129
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52
	expr_list  goto 130


state 82
	id_list : id_list ',' . elem_list  (115)

	ID  shift 131
	.  error

	expr_pair  goto 132
	elem_list  goto 133


state 83
	id_list : elem_list ',' . elem_list  (114)

	ID  shift 131
	.  error

	expr_pair  goto 132
	elem_list  goto 134


state 84
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 85
	assign_statement : ID ASSIGN expr .  (79)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 79
	error  reduce 79
	ID  reduce 79
	TAG  reduce 79
	IF  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	GOTO  reduce 79
	';'  reduce 79


state 86
	expr_pair : ID '{' CTE . '}'  (96)

	'}'  shift 135
	.  error


state 87
	fun_invoc : ID '(' . expr ')'  (97)
	fun_invoc : ID '(' . expr error ')'  (98)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 136
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 88
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (52)
	if_statement : IF '(' cond . THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (56)
	if_statement : IF '(' cond . ')' THEN END_IF  (57)
	if_statement : IF '(' cond . ')' THEN error END_IF  (58)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond . ')' THEN ELSE END_IF  (60)
	if_statement : IF '(' cond . ')' THEN ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE END_IF  (62)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE error END_IF  (63)
	if_statement : IF '(' cond . ')' THEN error ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF '(' cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (68)

	THEN  shift 137
	')'  shift 138
	.  error


state 89
	fact : '-' ID .  (92)

	.  reduce 92


state 90
	fact : '-' CTE .  (91)

	.  reduce 91


state 91
	cond_op : NEQ .  (76)

	.  reduce 76


state 92
	cond_op : LEQ .  (77)

	.  reduce 77


state 93
	cond_op : MEQ .  (78)

	.  reduce 78


state 94
	cond_op : '<' .  (73)

	.  reduce 73


state 95
	cond_op : '>' .  (74)

	.  reduce 74


state 96
	cond_op : '=' .  (75)

	.  reduce 75


state 97
	expr : expr '+' . term  (82)

	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr_pair  goto 49
	term  goto 139
	fact  goto 51
	fun_invoc  goto 52


state 98
	expr : expr '-' . term  (83)

	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr_pair  goto 49
	term  goto 140
	fact  goto 51
	fun_invoc  goto 52


state 99
	cond : expr cond_op . expr  (71)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 141
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 100
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (53)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (65)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 143
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 101
	if_statement : IF cond ')' . THEN ctrl_block_statement END_IF  (55)
	if_statement : IF cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (67)

	THEN  shift 144
	.  error


state 102
	term : term '*' . fact  (86)

	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr_pair  goto 49
	fact  goto 145
	fun_invoc  goto 52


state 103
	term : term '/' . fact  (87)

	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr_pair  goto 49
	fact  goto 146
	fun_invoc  goto 52


state 104
	prog : ID BEGIN statement_list error .  (5)
	statement : error . ';'  (14)

	';'  shift 36
	$end  reduce 5


state 105
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 106
	outf_statement : OUTF '(' ')' .  (100)

	.  reduce 100


state 107
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)
	outf_statement : OUTF '(' expr . ')'  (99)

	')'  shift 147
	'+'  shift 97
	'-'  shift 98
	.  error


state 108
	var_type : ID .  (51)

	.  reduce 51


state 109
	declare_pair : TYPEDEF PAIR '<' . var_type '>' ID  (37)
	declare_pair : TYPEDEF PAIR '<' . var_type '>' error  (40)

	ID  shift 108
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 148


state 110
	declare_pair : TYPEDEF PAIR var_type . ID  (39)

	ID  shift 149
	.  error


state 111
	declare_pair : TYPEDEF '<' var_type . '>' ID  (38)

	'>'  shift 150
	.  error


state 112
	return_statement : RET '(' expr . ')'  (46)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	')'  shift 151
	'+'  shift 97
	'-'  shift 98
	.  error


state 113
	repeat_statement : REPEAT BEGIN END . UNTIL '(' cond ')'  (106)
	repeat_statement : REPEAT BEGIN END . UNTIL cond  (107)
	repeat_statement : REPEAT BEGIN END . UNTIL '(' cond  (108)
	repeat_statement : REPEAT BEGIN END . UNTIL cond ')'  (109)

	UNTIL  shift 152
	.  error


state 114
	executable_statement_list : executable_statement .  (27)

	.  reduce 27


state 115
	executable_statement_list : executable_statement_list . executable_statement  (28)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond  (104)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond ')'  (105)
	repeat_statement : REPEAT BEGIN executable_statement_list . END '(' cond ')'  (110)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' ')'  (111)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 153
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 154
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 116
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 116
	assign_statement : var_type . ID ASSIGN expr  (81)

	ID  shift 155
	.  error


state 117
	declare_var : var_type ID error .  (32)

	.  reduce 32


state 118
	assign_statement : var_type ID ASSIGN . expr  (81)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 156
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 119
	declare_var : var_type ID ';' .  (31)

	.  reduce 31


state 120
	var_list : ID ',' . ID  (41)

	ID  shift 157
	.  error


state 121
	declare_fun_header : var_type FUN error . '(' parametro ')' BEGIN  (35)

	'('  shift 158
	.  error


state 122
	declare_fun_header : var_type FUN ID . '(' parametro ')' BEGIN  (34)
	declare_fun_header : var_type FUN ID . '(' error ')' BEGIN  (36)

	'('  shift 159
	.  error


state 123
	declare_var : var_type var_list error .  (30)

	.  reduce 30


state 124
	declare_var : var_type var_list ';' .  (29)

	.  reduce 29


state 125
	var_list : var_list ',' . ID  (42)

	ID  shift 160
	.  error


state 126
	declare_fun : declare_fun_header fun_body END .  (33)

	.  reduce 33


state 127
	assign_statement : expr_pair ASSIGN expr .  (80)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 80
	error  reduce 80
	ID  reduce 80
	TAG  reduce 80
	IF  reduce 80
	ELSE  reduce 80
	END  reduce 80
	END_IF  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	UINTEGER  reduce 80
	SINGLE  reduce 80
	REPEAT  reduce 80
	GOTO  reduce 80
	';'  reduce 80


state 128
	expr : error .  (85)
	mult_assign_statement : id_list ASSIGN error .  (113)

	$end  reduce 113
	error  reduce 113
	ID  reduce 113
	TAG  reduce 113
	IF  reduce 113
	ELSE  reduce 113
	END  reduce 113
	END_IF  reduce 113
	OUTF  reduce 113
	TYPEDEF  reduce 113
	RET  reduce 113
	UINTEGER  reduce 113
	SINGLE  reduce 113
	REPEAT  reduce 113
	GOTO  reduce 113
	';'  reduce 113
	','  reduce 85
	'+'  reduce 85
	'-'  reduce 85


state 129
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)
	expr_list : expr . ',' expr  (118)

	','  shift 161
	'+'  shift 97
	'-'  shift 98
	.  error


state 130
	mult_assign_statement : id_list ASSIGN expr_list .  (112)
	expr_list : expr_list . ',' expr  (119)

	','  shift 162
	$end  reduce 112
	error  reduce 112
	ID  reduce 112
	TAG  reduce 112
	IF  reduce 112
	ELSE  reduce 112
	END  reduce 112
	END_IF  reduce 112
	OUTF  reduce 112
	TYPEDEF  reduce 112
	RET  reduce 112
	UINTEGER  reduce 112
	SINGLE  reduce 112
	REPEAT  reduce 112
	GOTO  reduce 112
	';'  reduce 112


state 131
	expr_pair : ID . '{' CTE '}'  (96)
	elem_list : ID .  (116)

	'{'  shift 38
	ASSIGN  reduce 116
	','  reduce 116


state 132
	elem_list : expr_pair .  (117)

	.  reduce 117


state 133
	id_list : id_list ',' elem_list .  (115)

	.  reduce 115


state 134
	id_list : elem_list ',' elem_list .  (114)

	.  reduce 114


state 135
	expr_pair : ID '{' CTE '}' .  (96)

	.  reduce 96


state 136
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)
	fun_invoc : ID '(' expr . ')'  (97)
	fun_invoc : ID '(' expr . error ')'  (98)

	error  shift 163
	')'  shift 164
	'+'  shift 97
	'-'  shift 98
	.  error


state 137
	if_statement : IF '(' cond THEN . ctrl_block_statement END_IF  (54)
	if_statement : IF '(' cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (66)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 165
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 138
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (52)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (56)
	if_statement : IF '(' cond ')' . THEN END_IF  (57)
	if_statement : IF '(' cond ')' . THEN error END_IF  (58)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond ')' . THEN ELSE END_IF  (60)
	if_statement : IF '(' cond ')' . THEN ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE END_IF  (62)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE error END_IF  (63)
	if_statement : IF '(' cond ')' . THEN error ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (68)

	THEN  shift 166
	.  error


state 139
	expr : expr '+' term .  (82)
	term : term . '*' fact  (86)
	term : term . '/' fact  (87)

	'*'  shift 102
	'/'  shift 103
	$end  reduce 82
	error  reduce 82
	ID  reduce 82
	NEQ  reduce 82
	LEQ  reduce 82
	MEQ  reduce 82
	TAG  reduce 82
	IF  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	END  reduce 82
	END_IF  reduce 82
	OUTF  reduce 82
	TYPEDEF  reduce 82
	RET  reduce 82
	UINTEGER  reduce 82
	SINGLE  reduce 82
	REPEAT  reduce 82
	GOTO  reduce 82
	';'  reduce 82
	')'  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	','  reduce 82
	'='  reduce 82
	'+'  reduce 82
	'-'  reduce 82


state 140
	expr : expr '-' term .  (83)
	term : term . '*' fact  (86)
	term : term . '/' fact  (87)

	'*'  shift 102
	'/'  shift 103
	$end  reduce 83
	error  reduce 83
	ID  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	TAG  reduce 83
	IF  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	END  reduce 83
	END_IF  reduce 83
	OUTF  reduce 83
	TYPEDEF  reduce 83
	RET  reduce 83
	UINTEGER  reduce 83
	SINGLE  reduce 83
	REPEAT  reduce 83
	GOTO  reduce 83
	';'  reduce 83
	')'  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	','  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83


state 141
	cond : expr cond_op expr .  (71)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 71
	error  reduce 71
	ID  reduce 71
	TAG  reduce 71
	IF  reduce 71
	THEN  reduce 71
	ELSE  reduce 71
	END  reduce 71
	END_IF  reduce 71
	OUTF  reduce 71
	TYPEDEF  reduce 71
	RET  reduce 71
	UINTEGER  reduce 71
	SINGLE  reduce 71
	REPEAT  reduce 71
	GOTO  reduce 71
	';'  reduce 71
	')'  reduce 71


state 142
	executable_statement_list : executable_statement_list . executable_statement  (28)
	ctrl_block_statement : executable_statement_list .  (70)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	error  reduce 70
	ELSE  reduce 70
	END_IF  reduce 70

	executable_statement  goto 154
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	var_type  goto 116
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 143
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (53)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (65)

	ELSE  shift 167
	END_IF  shift 168
	.  error


state 144
	if_statement : IF cond ')' THEN . ctrl_block_statement END_IF  (55)
	if_statement : IF cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (67)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 169
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 145
	term : term '*' fact .  (86)

	.  reduce 86


state 146
	term : term '/' fact .  (87)

	.  reduce 87


state 147
	outf_statement : OUTF '(' expr ')' .  (99)

	.  reduce 99


state 148
	declare_pair : TYPEDEF PAIR '<' var_type . '>' ID  (37)
	declare_pair : TYPEDEF PAIR '<' var_type . '>' error  (40)

	'>'  shift 170
	.  error


state 149
	declare_pair : TYPEDEF PAIR var_type ID .  (39)

	.  reduce 39


state 150
	declare_pair : TYPEDEF '<' var_type '>' . ID  (38)

	ID  shift 171
	.  error


state 151
	return_statement : RET '(' expr ')' .  (46)

	.  reduce 46


state 152
	repeat_statement : REPEAT BEGIN END UNTIL . '(' cond ')'  (106)
	repeat_statement : REPEAT BEGIN END UNTIL . cond  (107)
	repeat_statement : REPEAT BEGIN END UNTIL . '(' cond  (108)
	repeat_statement : REPEAT BEGIN END UNTIL . cond ')'  (109)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'('  shift 172
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 173
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 153
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond  (104)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond ')'  (105)
	repeat_statement : REPEAT BEGIN executable_statement_list END . '(' cond ')'  (110)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' ')'  (111)

	UNTIL  shift 174
	'('  shift 175
	.  error


state 154
	executable_statement_list : executable_statement_list executable_statement .  (28)

	.  reduce 28


state 155
	assign_statement : var_type ID . ASSIGN expr  (81)

	ASSIGN  shift 118
	.  error


state 156
	assign_statement : var_type ID ASSIGN expr .  (81)
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 81
	error  reduce 81
	ID  reduce 81
	TAG  reduce 81
	IF  reduce 81
	ELSE  reduce 81
	END  reduce 81
	END_IF  reduce 81
	OUTF  reduce 81
	TYPEDEF  reduce 81
	RET  reduce 81
	UINTEGER  reduce 81
	SINGLE  reduce 81
	REPEAT  reduce 81
	GOTO  reduce 81
	';'  reduce 81


state 157
	var_list : ID ',' ID .  (41)

	.  reduce 41


state 158
	declare_fun_header : var_type FUN error '(' . parametro ')' BEGIN  (35)

	ID  shift 176
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 177
	parametro  goto 178


state 159
	declare_fun_header : var_type FUN ID '(' . parametro ')' BEGIN  (34)
	declare_fun_header : var_type FUN ID '(' . error ')' BEGIN  (36)

	error  shift 179
	ID  shift 176
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 177
	parametro  goto 180


state 160
	var_list : var_list ',' ID .  (42)

	.  reduce 42


state 161
	expr_list : expr ',' . expr  (118)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 181
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 162
	expr_list : expr_list ',' . expr  (119)

	error  shift 58
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 182
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 163
	fun_invoc : ID '(' expr error . ')'  (98)

	')'  shift 183
	.  error


state 164
	fun_invoc : ID '(' expr ')' .  (97)

	.  reduce 97


state 165
	if_statement : IF '(' cond THEN ctrl_block_statement . END_IF  (54)
	if_statement : IF '(' cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (66)

	ELSE  shift 184
	END_IF  shift 185
	.  error


state 166
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (52)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (56)
	if_statement : IF '(' cond ')' THEN . END_IF  (57)
	if_statement : IF '(' cond ')' THEN . error END_IF  (58)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond ')' THEN . ELSE END_IF  (60)
	if_statement : IF '(' cond ')' THEN . ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE END_IF  (62)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE error END_IF  (63)
	if_statement : IF '(' cond ')' THEN . error ELSE ctrl_block_statement END_IF  (64)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (68)

	error  shift 186
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	ELSE  shift 187
	END_IF  shift 188
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 189
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 167
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (65)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 190
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 168
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (53)

	.  reduce 53


state 169
	if_statement : IF cond ')' THEN ctrl_block_statement . END_IF  (55)
	if_statement : IF cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (67)

	ELSE  shift 191
	END_IF  shift 192
	.  error


state 170
	declare_pair : TYPEDEF PAIR '<' var_type '>' . ID  (37)
	declare_pair : TYPEDEF PAIR '<' var_type '>' . error  (40)

	error  shift 193
	ID  shift 194
	.  error


state 171
	declare_pair : TYPEDEF '<' var_type '>' ID .  (38)

	.  reduce 38


state 172
	repeat_statement : REPEAT BEGIN END UNTIL '(' . cond ')'  (106)
	repeat_statement : REPEAT BEGIN END UNTIL '(' . cond  (108)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 195
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 173
	repeat_statement : REPEAT BEGIN END UNTIL cond .  (107)
	repeat_statement : REPEAT BEGIN END UNTIL cond . ')'  (109)

	')'  shift 196
	$end  reduce 107
	error  reduce 107
	ID  reduce 107
	TAG  reduce 107
	IF  reduce 107
	ELSE  reduce 107
	END  reduce 107
	END_IF  reduce 107
	OUTF  reduce 107
	TYPEDEF  reduce 107
	RET  reduce 107
	UINTEGER  reduce 107
	SINGLE  reduce 107
	REPEAT  reduce 107
	GOTO  reduce 107
	';'  reduce 107


state 174
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond  (104)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond ')'  (105)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' ')'  (111)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'('  shift 197
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 198
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 175
	repeat_statement : REPEAT BEGIN executable_statement_list END '(' . cond ')'  (110)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 199
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 176
	parametro : ID .  (44)
	var_type : ID .  (51)

	error  reduce 51
	ID  reduce 51
	')'  reduce 44


state 177
	parametro : var_type . ID  (43)
	parametro : var_type . error  (45)

	error  shift 200
	ID  shift 201
	.  error


state 178
	declare_fun_header : var_type FUN error '(' parametro . ')' BEGIN  (35)

	')'  shift 202
	.  error


state 179
	declare_fun_header : var_type FUN ID '(' error . ')' BEGIN  (36)

	')'  shift 203
	.  error


state 180
	declare_fun_header : var_type FUN ID '(' parametro . ')' BEGIN  (34)

	')'  shift 204
	.  error


state 181
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)
	expr_list : expr ',' expr .  (118)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 118
	error  reduce 118
	ID  reduce 118
	TAG  reduce 118
	IF  reduce 118
	ELSE  reduce 118
	END  reduce 118
	END_IF  reduce 118
	OUTF  reduce 118
	TYPEDEF  reduce 118
	RET  reduce 118
	UINTEGER  reduce 118
	SINGLE  reduce 118
	REPEAT  reduce 118
	GOTO  reduce 118
	';'  reduce 118
	','  reduce 118


state 182
	expr : expr . '+' term  (82)
	expr : expr . '-' term  (83)
	expr_list : expr_list ',' expr .  (119)

	'+'  shift 97
	'-'  shift 98
	$end  reduce 119
	error  reduce 119
	ID  reduce 119
	TAG  reduce 119
	IF  reduce 119
	ELSE  reduce 119
	END  reduce 119
	END_IF  reduce 119
	OUTF  reduce 119
	TYPEDEF  reduce 119
	RET  reduce 119
	UINTEGER  reduce 119
	SINGLE  reduce 119
	REPEAT  reduce 119
	GOTO  reduce 119
	';'  reduce 119
	','  reduce 119


state 183
	fun_invoc : ID '(' expr error ')' .  (98)

	.  reduce 98


state 184
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (66)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 205
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 185
	if_statement : IF '(' cond THEN ctrl_block_statement END_IF .  (54)

	.  reduce 54


state 186
	if_statement : IF '(' cond ')' THEN error . END_IF  (58)
	if_statement : IF '(' cond ')' THEN error . ELSE ctrl_block_statement END_IF  (64)

	ELSE  shift 206
	END_IF  shift 207
	.  error


state 187
	if_statement : IF '(' cond ')' THEN ELSE . END_IF  (60)
	if_statement : IF '(' cond ')' THEN ELSE . ctrl_block_statement END_IF  (61)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 208
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 209
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 188
	if_statement : IF '(' cond ')' THEN END_IF .  (57)

	.  reduce 57


state 189
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (52)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (56)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE END_IF  (62)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE error END_IF  (63)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (68)

	error  shift 210
	ELSE  shift 211
	END_IF  shift 212
	.  error


state 190
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (65)

	END_IF  shift 213
	.  error


state 191
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (67)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 214
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 192
	if_statement : IF cond ')' THEN ctrl_block_statement END_IF .  (55)

	.  reduce 55


state 193
	declare_pair : TYPEDEF PAIR '<' var_type '>' error .  (40)

	.  reduce 40


state 194
	declare_pair : TYPEDEF PAIR '<' var_type '>' ID .  (37)

	.  reduce 37


state 195
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond . ')'  (106)
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond .  (108)

	')'  shift 215
	$end  reduce 108
	error  reduce 108
	ID  reduce 108
	TAG  reduce 108
	IF  reduce 108
	ELSE  reduce 108
	END  reduce 108
	END_IF  reduce 108
	OUTF  reduce 108
	TYPEDEF  reduce 108
	RET  reduce 108
	UINTEGER  reduce 108
	SINGLE  reduce 108
	REPEAT  reduce 108
	GOTO  reduce 108
	';'  reduce 108


state 196
	repeat_statement : REPEAT BEGIN END UNTIL cond ')' .  (109)

	.  reduce 109


state 197
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond  (104)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . ')'  (111)

	error  shift 41
	ID  shift 42
	CTE  shift 43
	CHARCH  shift 44
	')'  shift 216
	'-'  shift 46
	.  error

	expr  goto 47
	cond  goto 217
	expr_pair  goto 49
	term  goto 50
	fact  goto 51
	fun_invoc  goto 52


state 198
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (103)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond . ')'  (105)

	')'  shift 218
	$end  reduce 103
	error  reduce 103
	ID  reduce 103
	TAG  reduce 103
	IF  reduce 103
	ELSE  reduce 103
	END  reduce 103
	END_IF  reduce 103
	OUTF  reduce 103
	TYPEDEF  reduce 103
	RET  reduce 103
	UINTEGER  reduce 103
	SINGLE  reduce 103
	REPEAT  reduce 103
	GOTO  reduce 103
	';'  reduce 103


state 199
	repeat_statement : REPEAT BEGIN executable_statement_list END '(' cond . ')'  (110)

	')'  shift 219
	.  error


state 200
	parametro : var_type error .  (45)

	.  reduce 45


state 201
	parametro : var_type ID .  (43)

	.  reduce 43


state 202
	declare_fun_header : var_type FUN error '(' parametro ')' . BEGIN  (35)

	BEGIN  shift 220
	.  error


state 203
	declare_fun_header : var_type FUN ID '(' error ')' . BEGIN  (36)

	BEGIN  shift 221
	.  error


state 204
	declare_fun_header : var_type FUN ID '(' parametro ')' . BEGIN  (34)

	BEGIN  shift 222
	.  error


state 205
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (66)

	END_IF  shift 223
	.  error


state 206
	if_statement : IF '(' cond ')' THEN error ELSE . ctrl_block_statement END_IF  (64)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 224
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 207
	if_statement : IF '(' cond ')' THEN error END_IF .  (58)

	.  reduce 58


state 208
	if_statement : IF '(' cond ')' THEN ELSE END_IF .  (60)

	.  reduce 60


state 209
	if_statement : IF '(' cond ')' THEN ELSE ctrl_block_statement . END_IF  (61)

	END_IF  shift 225
	.  error


state 210
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (56)

	.  reduce 56


state 211
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (59)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . END_IF  (62)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . error END_IF  (63)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (68)

	error  shift 226
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 227
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 114
	if_statement  goto 23
	assign_statement  goto 24
	outf_statement  goto 25
	repeat_statement  goto 26
	goto_statement  goto 27
	mult_assign_statement  goto 28
	return_statement  goto 29
	executable_statement_list  goto 142
	var_type  goto 116
	ctrl_block_statement  goto 228
	expr_pair  goto 32
	id_list  goto 33
	elem_list  goto 34


state 212
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (52)

	.  reduce 52


state 213
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (65)

	.  reduce 65


state 214
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (67)

	END_IF  shift 229
	.  error


state 215
	repeat_statement : REPEAT BEGIN END UNTIL '(' cond ')' .  (106)

	.  reduce 106


state 216
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' ')' .  (111)

	.  reduce 111


state 217
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')'  (102)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond .  (104)

	')'  shift 230
	$end  reduce 104
	error  reduce 104
	ID  reduce 104
	TAG  reduce 104
	IF  reduce 104
	ELSE  reduce 104
	END  reduce 104
	END_IF  reduce 104
	OUTF  reduce 104
	TYPEDEF  reduce 104
	RET  reduce 104
	UINTEGER  reduce 104
	SINGLE  reduce 104
	REPEAT  reduce 104
	GOTO  reduce 104
	';'  reduce 104


state 218
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond ')' .  (105)

	.  reduce 105


state 219
	repeat_statement : REPEAT BEGIN executable_statement_list END '(' cond ')' .  (110)

	.  reduce 110


state 220
	declare_fun_header : var_type FUN error '(' parametro ')' BEGIN .  (35)

	.  reduce 35


state 221
	declare_fun_header : var_type FUN ID '(' error ')' BEGIN .  (36)

	.  reduce 36


state 222
	declare_fun_header : var_type FUN ID '(' parametro ')' BEGIN .  (34)

	.  reduce 34


state 223
	if_statement : IF '(' cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (66)

	.  reduce 66


state 224
	if_statement : IF '(' cond ')' THEN error ELSE ctrl_block_statement . END_IF  (64)

	END_IF  shift 231
	.  error


state 225
	if_statement : IF '(' cond ')' THEN ELSE ctrl_block_statement END_IF .  (61)

	.  reduce 61


state 226
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error . END_IF  (63)

	END_IF  shift 232
	.  error


state 227
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE END_IF .  (62)

	.  reduce 62


state 228
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (59)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (68)

	error  shift 233
	END_IF  shift 234
	.  error


state 229
	if_statement : IF cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (67)

	.  reduce 67


state 230
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' .  (102)

	.  reduce 102


state 231
	if_statement : IF '(' cond ')' THEN error ELSE ctrl_block_statement END_IF .  (64)

	.  reduce 64


state 232
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF .  (63)

	.  reduce 63


state 233
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (68)

	.  reduce 68


state 234
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (59)

	.  reduce 59


Rules never reduced:
	if_cond : IF '(' cond ')'  (69)


39 terminals, 35 nonterminals
122 grammar rules, 235 states
