   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error
   4       | ID statement_list END
   5       | ID BEGIN statement_list error
   6       | ID statement_list
   7       |

   8  statement_list : statement
   9                 | statement_list statement

  10  statement : executable_statement
  11            | declare_pair optional_semicolon
  12            | declare_var
  13            | declare_fun
  14            | error ';'

  15  optional_semicolon : ';'
  16                     |

  17  optional_not_semicolon : ';'
  18                         |

  19  executable_statement : if_statement optional_semicolon
  20                       | assign_statement optional_semicolon
  21                       | outf_statement optional_semicolon
  22                       | repeat_statement optional_semicolon
  23                       | goto_statement optional_semicolon
  24                       | mult_assign_statement optional_semicolon
  25                       | return_statement optional_semicolon
  26                       | tag_statement optional_not_semicolon

  27  executable_statement_list : executable_statement
  28                            | executable_statement_list executable_statement

  29  declare_var : var_type var_list ';'
  30              | var_type var_list error
  31              | var_type ID ';'
  32              | var_type ID error

  33  var_list : ID ',' ID
  34           | var_list ',' ID

  35  declare_fun : declare_fun_header fun_body END

  36  declare_fun_header : var_type FUN ID '(' parametro ')' BEGIN
  37                     | var_type FUN error '(' parametro ')' BEGIN
  38                     | var_type FUN ID '(' error ')' BEGIN

  39  declare_pair : TYPEDEF PAIR '<' var_type '>' ID
  40               | TYPEDEF '<' var_type '>' ID
  41               | TYPEDEF PAIR var_type ID
  42               | TYPEDEF PAIR '<' var_type '>' error

  43  parametro : var_type ID
  44            | ID
  45            | var_type error

  46  return_statement : RET '(' expr ')'
  47                   | RET expr

  48  fun_body : statement_list

  49  var_type : UINTEGER
  50           | SINGLE
  51           | HEXA
  52           | ID

  53  if_statement : if_cond then_statement END_IF
  54               | if_cond then_statement error
  55               | if_cond then_statement else_statement

  56  if_cond : IF '(' cond ')'
  57          | IF cond
  58          | IF '(' cond
  59          | IF cond ')'

  60  then_statement : THEN ctrl_block_statement
  61                 | THEN error

  62  else_statement : else_tk ctrl_block_statement END_IF
  63                 | else_tk END_IF
  64                 | else_tk error END_IF
  65                 | else_tk ctrl_block_statement error

  66  else_tk : ELSE

  67  ctrl_block_statement : executable_statement_list

  68  cond : expr cond_op expr
  69       | error

  70  cond_op : '<'
  71          | '>'
  72          | '='
  73          | NEQ
  74          | LEQ
  75          | MEQ

  76  assign_statement : ID ASSIGN expr
  77                   | expr_pair ASSIGN expr
  78                   | var_type ID ASSIGN expr

  79  expr : expr '+' term
  80       | expr '-' term
  81       | term
  82       | error

  83  term : term '*' fact
  84       | term '/' fact
  85       | fact

  86  fact : ID
  87       | CTE
  88       | '-' CTE
  89       | fun_invoc
  90       | expr_pair

  91  expr_pair : ID '{' CTE '}'

  92  fun_invoc : ID '(' expr ')'
  93            | ID '(' expr error ')'

  94  outf_statement : OUTF '(' expr ')'
  95                 | OUTF '(' CHARCH ')'
  96                 | OUTF '(' ')'
  97                 | OUTF error

  98  repeat_statement : repeat_begin executable_statement_list END UNTIL '(' cond ')'
  99                   | repeat_begin executable_statement_list END UNTIL cond
 100                   | repeat_begin executable_statement_list END UNTIL '(' cond
 101                   | repeat_begin executable_statement_list END UNTIL cond ')'
 102                   | repeat_begin END UNTIL '(' cond ')'
 103                   | repeat_begin END UNTIL cond
 104                   | repeat_begin END UNTIL '(' cond
 105                   | repeat_begin END UNTIL cond ')'
 106                   | repeat_begin executable_statement_list END '(' cond ')'
 107                   | repeat_begin executable_statement_list END UNTIL '(' ')'

 108  repeat_begin : REPEAT BEGIN

 109  mult_assign_statement : id_list ASSIGN expr_list
 110                        | ID ASSIGN expr_list
 111                        | id_list ASSIGN error

 112  id_list : elem_list ',' elem_list
 113          | id_list ',' elem_list

 114  elem_list : ID
 115            | expr_pair

 116  expr_list : expr ',' expr
 117            | expr_list ',' expr

 118  tag_statement : TAG

 119  goto_statement : GOTO TAG
 120                 | GOTO error

state 0
	$accept : . prog $end  (0)
	prog : .  (7)

	error  shift 1
	ID  shift 2
	$end  reduce 7

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)
	prog : ID . statement_list END  (4)
	prog : ID . BEGIN statement_list error  (5)
	prog : ID . statement_list  (6)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	BEGIN  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	statement_list  goto 18
	statement  goto 19
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	statement_list  goto 39
	statement  goto 19
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 5
	statement : error . ';'  (14)

	';'  shift 40
	.  error


state 6
	var_type : ID .  (52)
	assign_statement : ID . ASSIGN expr  (76)
	expr_pair : ID . '{' CTE '}'  (91)
	mult_assign_statement : ID . ASSIGN expr_list  (110)
	elem_list : ID .  (114)

	ASSIGN  shift 41
	'{'  shift 42
	ID  reduce 52
	FUN  reduce 52
	','  reduce 114


state 7
	tag_statement : TAG .  (118)

	.  reduce 118


state 8
	if_cond : IF . '(' cond ')'  (56)
	if_cond : IF . cond  (57)
	if_cond : IF . '(' cond  (58)
	if_cond : IF . cond ')'  (59)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	'('  shift 46
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 49
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 9
	prog : ID BEGIN . statement_list END  (1)
	prog : ID BEGIN . statement_list error  (5)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	statement_list  goto 54
	statement  goto 19
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 10
	outf_statement : OUTF . '(' expr ')'  (94)
	outf_statement : OUTF . '(' CHARCH ')'  (95)
	outf_statement : OUTF . '(' ')'  (96)
	outf_statement : OUTF . error  (97)

	error  shift 55
	'('  shift 56
	.  error


state 11
	declare_pair : TYPEDEF . PAIR '<' var_type '>' ID  (39)
	declare_pair : TYPEDEF . '<' var_type '>' ID  (40)
	declare_pair : TYPEDEF . PAIR var_type ID  (41)
	declare_pair : TYPEDEF . PAIR '<' var_type '>' error  (42)

	PAIR  shift 57
	'<'  shift 58
	.  error


state 12
	return_statement : RET . '(' expr ')'  (46)
	return_statement : RET . expr  (47)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'('  shift 60
	'-'  shift 47
	.  error

	expr  goto 61
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 13
	var_type : UINTEGER .  (49)

	.  reduce 49


state 14
	var_type : SINGLE .  (50)

	.  reduce 50


state 15
	repeat_begin : REPEAT . BEGIN  (108)

	BEGIN  shift 62
	.  error


state 16
	var_type : HEXA .  (51)

	.  reduce 51


state 17
	goto_statement : GOTO . TAG  (119)
	goto_statement : GOTO . error  (120)

	error  shift 63
	TAG  shift 64
	.  error


state 18
	prog : ID statement_list . END  (4)
	prog : ID statement_list .  (6)
	statement_list : statement_list . statement  (9)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 65
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	$end  reduce 6

	statement  goto 66
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 19
	statement_list : statement .  (8)

	.  reduce 8


state 20
	statement : executable_statement .  (10)

	.  reduce 10


state 21
	statement : declare_pair . optional_semicolon  (11)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	END  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 68


state 22
	statement : declare_var .  (12)

	.  reduce 12


state 23
	statement : declare_fun .  (13)

	.  reduce 13


state 24
	executable_statement : if_statement . optional_semicolon  (19)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 69


state 25
	executable_statement : assign_statement . optional_semicolon  (20)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 70


state 26
	executable_statement : outf_statement . optional_semicolon  (21)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 71


state 27
	executable_statement : repeat_statement . optional_semicolon  (22)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 72


state 28
	executable_statement : goto_statement . optional_semicolon  (23)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 73


state 29
	executable_statement : mult_assign_statement . optional_semicolon  (24)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 74


state 30
	executable_statement : return_statement . optional_semicolon  (25)
	optional_semicolon : .  (16)

	';'  shift 67
	$end  reduce 16
	error  reduce 16
	ID  reduce 16
	TAG  reduce 16
	IF  reduce 16
	ELSE  reduce 16
	END  reduce 16
	END_IF  reduce 16
	OUTF  reduce 16
	TYPEDEF  reduce 16
	RET  reduce 16
	UINTEGER  reduce 16
	SINGLE  reduce 16
	REPEAT  reduce 16
	HEXA  reduce 16
	GOTO  reduce 16

	optional_semicolon  goto 75


state 31
	executable_statement : tag_statement . optional_not_semicolon  (26)
	optional_not_semicolon : .  (18)

	';'  shift 76
	$end  reduce 18
	error  reduce 18
	ID  reduce 18
	TAG  reduce 18
	IF  reduce 18
	ELSE  reduce 18
	END  reduce 18
	END_IF  reduce 18
	OUTF  reduce 18
	TYPEDEF  reduce 18
	RET  reduce 18
	UINTEGER  reduce 18
	SINGLE  reduce 18
	REPEAT  reduce 18
	HEXA  reduce 18
	GOTO  reduce 18

	optional_not_semicolon  goto 77


state 32
	declare_var : var_type . var_list ';'  (29)
	declare_var : var_type . var_list error  (30)
	declare_var : var_type . ID ';'  (31)
	declare_var : var_type . ID error  (32)
	declare_fun_header : var_type . FUN ID '(' parametro ')' BEGIN  (36)
	declare_fun_header : var_type . FUN error '(' parametro ')' BEGIN  (37)
	declare_fun_header : var_type . FUN ID '(' error ')' BEGIN  (38)
	assign_statement : var_type . ID ASSIGN expr  (78)

	ID  shift 78
	FUN  shift 79
	.  error

	var_list  goto 80


state 33
	declare_fun : declare_fun_header . fun_body END  (35)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	statement_list  goto 81
	statement  goto 19
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	fun_body  goto 82
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 34
	if_statement : if_cond . then_statement END_IF  (53)
	if_statement : if_cond . then_statement error  (54)
	if_statement : if_cond . then_statement else_statement  (55)

	THEN  shift 83
	.  error

	then_statement  goto 84


state 35
	assign_statement : expr_pair . ASSIGN expr  (77)
	elem_list : expr_pair .  (115)

	ASSIGN  shift 85
	','  reduce 115


state 36
	repeat_statement : repeat_begin . executable_statement_list END UNTIL '(' cond ')'  (98)
	repeat_statement : repeat_begin . executable_statement_list END UNTIL cond  (99)
	repeat_statement : repeat_begin . executable_statement_list END UNTIL '(' cond  (100)
	repeat_statement : repeat_begin . executable_statement_list END UNTIL cond ')'  (101)
	repeat_statement : repeat_begin . END UNTIL '(' cond ')'  (102)
	repeat_statement : repeat_begin . END UNTIL cond  (103)
	repeat_statement : repeat_begin . END UNTIL '(' cond  (104)
	repeat_statement : repeat_begin . END UNTIL cond ')'  (105)
	repeat_statement : repeat_begin . executable_statement_list END '(' cond ')'  (106)
	repeat_statement : repeat_begin . executable_statement_list END UNTIL '(' ')'  (107)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 86
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	executable_statement  goto 87
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	executable_statement_list  goto 88
	var_type  goto 89
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 37
	mult_assign_statement : id_list . ASSIGN expr_list  (109)
	mult_assign_statement : id_list . ASSIGN error  (111)
	id_list : id_list . ',' elem_list  (113)

	ASSIGN  shift 90
	','  shift 91
	.  error


state 38
	id_list : elem_list . ',' elem_list  (112)

	','  shift 92
	.  error


state 39
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (9)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 93
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	statement  goto 66
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 40
	statement : error ';' .  (14)

	.  reduce 14


state 41
	assign_statement : ID ASSIGN . expr  (76)
	mult_assign_statement : ID ASSIGN . expr_list  (110)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 94
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53
	expr_list  goto 95


state 42
	expr_pair : ID '{' . CTE '}'  (91)

	CTE  shift 96
	.  error


state 43
	cond : error .  (69)
	expr : error .  (82)

	$end  reduce 69
	error  reduce 69
	ID  reduce 69
	NEQ  reduce 82
	LEQ  reduce 82
	MEQ  reduce 82
	TAG  reduce 69
	IF  reduce 69
	THEN  reduce 69
	ELSE  reduce 69
	END  reduce 69
	END_IF  reduce 69
	OUTF  reduce 69
	TYPEDEF  reduce 69
	RET  reduce 69
	UINTEGER  reduce 69
	SINGLE  reduce 69
	REPEAT  reduce 69
	HEXA  reduce 69
	GOTO  reduce 69
	';'  reduce 69
	')'  reduce 69
	'<'  reduce 82
	'>'  reduce 82
	'='  reduce 82
	'+'  reduce 82
	'-'  reduce 82


state 44
	fact : ID .  (86)
	expr_pair : ID . '{' CTE '}'  (91)
	fun_invoc : ID . '(' expr ')'  (92)
	fun_invoc : ID . '(' expr error ')'  (93)

	'('  shift 97
	'{'  shift 42
	$end  reduce 86
	error  reduce 86
	ID  reduce 86
	NEQ  reduce 86
	LEQ  reduce 86
	MEQ  reduce 86
	TAG  reduce 86
	IF  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	END  reduce 86
	END_IF  reduce 86
	OUTF  reduce 86
	TYPEDEF  reduce 86
	RET  reduce 86
	UINTEGER  reduce 86
	SINGLE  reduce 86
	REPEAT  reduce 86
	HEXA  reduce 86
	GOTO  reduce 86
	';'  reduce 86
	','  reduce 86
	')'  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	'='  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	'*'  reduce 86
	'/'  reduce 86


state 45
	fact : CTE .  (87)

	.  reduce 87


state 46
	if_cond : IF '(' . cond ')'  (56)
	if_cond : IF '(' . cond  (58)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 98
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 47
	fact : '-' . CTE  (88)

	CTE  shift 99
	.  error


state 48
	cond : expr . cond_op expr  (68)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)

	NEQ  shift 100
	LEQ  shift 101
	MEQ  shift 102
	'<'  shift 103
	'>'  shift 104
	'='  shift 105
	'+'  shift 106
	'-'  shift 107
	.  error

	cond_op  goto 108


state 49
	if_cond : IF cond .  (57)
	if_cond : IF cond . ')'  (59)

	')'  shift 109
	THEN  reduce 57


state 50
	fact : expr_pair .  (90)

	.  reduce 90


state 51
	expr : term .  (81)
	term : term . '*' fact  (83)
	term : term . '/' fact  (84)

	'*'  shift 110
	'/'  shift 111
	$end  reduce 81
	error  reduce 81
	ID  reduce 81
	NEQ  reduce 81
	LEQ  reduce 81
	MEQ  reduce 81
	TAG  reduce 81
	IF  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	END  reduce 81
	END_IF  reduce 81
	OUTF  reduce 81
	TYPEDEF  reduce 81
	RET  reduce 81
	UINTEGER  reduce 81
	SINGLE  reduce 81
	REPEAT  reduce 81
	HEXA  reduce 81
	GOTO  reduce 81
	';'  reduce 81
	','  reduce 81
	')'  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	'='  reduce 81
	'+'  reduce 81
	'-'  reduce 81


state 52
	term : fact .  (85)

	.  reduce 85


state 53
	fact : fun_invoc .  (89)

	.  reduce 89


state 54
	prog : ID BEGIN statement_list . END  (1)
	prog : ID BEGIN statement_list . error  (5)
	statement_list : statement_list . statement  (9)

	error  shift 112
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 113
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	statement  goto 66
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 55
	outf_statement : OUTF error .  (97)

	.  reduce 97


state 56
	outf_statement : OUTF '(' . expr ')'  (94)
	outf_statement : OUTF '(' . CHARCH ')'  (95)
	outf_statement : OUTF '(' . ')'  (96)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	CHARCH  shift 114
	')'  shift 115
	'-'  shift 47
	.  error

	expr  goto 116
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 57
	declare_pair : TYPEDEF PAIR . '<' var_type '>' ID  (39)
	declare_pair : TYPEDEF PAIR . var_type ID  (41)
	declare_pair : TYPEDEF PAIR . '<' var_type '>' error  (42)

	ID  shift 117
	UINTEGER  shift 13
	SINGLE  shift 14
	HEXA  shift 16
	'<'  shift 118
	.  error

	var_type  goto 119


state 58
	declare_pair : TYPEDEF '<' . var_type '>' ID  (40)

	ID  shift 117
	UINTEGER  shift 13
	SINGLE  shift 14
	HEXA  shift 16
	.  error

	var_type  goto 120


state 59
	expr : error .  (82)

	.  reduce 82


state 60
	return_statement : RET '(' . expr ')'  (46)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 121
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 61
	return_statement : RET expr .  (47)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)

	'+'  shift 106
	'-'  shift 107
	$end  reduce 47
	error  reduce 47
	ID  reduce 47
	TAG  reduce 47
	IF  reduce 47
	ELSE  reduce 47
	END  reduce 47
	END_IF  reduce 47
	OUTF  reduce 47
	TYPEDEF  reduce 47
	RET  reduce 47
	UINTEGER  reduce 47
	SINGLE  reduce 47
	REPEAT  reduce 47
	HEXA  reduce 47
	GOTO  reduce 47
	';'  reduce 47


state 62
	repeat_begin : REPEAT BEGIN .  (108)

	.  reduce 108


state 63
	goto_statement : GOTO error .  (120)

	.  reduce 120


state 64
	goto_statement : GOTO TAG .  (119)

	.  reduce 119


state 65
	prog : ID statement_list END .  (4)

	.  reduce 4


state 66
	statement_list : statement_list statement .  (9)

	.  reduce 9


state 67
	optional_semicolon : ';' .  (15)

	.  reduce 15


state 68
	statement : declare_pair optional_semicolon .  (11)

	.  reduce 11


state 69
	executable_statement : if_statement optional_semicolon .  (19)

	.  reduce 19


state 70
	executable_statement : assign_statement optional_semicolon .  (20)

	.  reduce 20


state 71
	executable_statement : outf_statement optional_semicolon .  (21)

	.  reduce 21


state 72
	executable_statement : repeat_statement optional_semicolon .  (22)

	.  reduce 22


state 73
	executable_statement : goto_statement optional_semicolon .  (23)

	.  reduce 23


state 74
	executable_statement : mult_assign_statement optional_semicolon .  (24)

	.  reduce 24


state 75
	executable_statement : return_statement optional_semicolon .  (25)

	.  reduce 25


state 76
	optional_not_semicolon : ';' .  (17)

	.  reduce 17


state 77
	executable_statement : tag_statement optional_not_semicolon .  (26)

	.  reduce 26


state 78
	declare_var : var_type ID . ';'  (31)
	declare_var : var_type ID . error  (32)
	var_list : ID . ',' ID  (33)
	assign_statement : var_type ID . ASSIGN expr  (78)

	error  shift 122
	ASSIGN  shift 123
	';'  shift 124
	','  shift 125
	.  error


state 79
	declare_fun_header : var_type FUN . ID '(' parametro ')' BEGIN  (36)
	declare_fun_header : var_type FUN . error '(' parametro ')' BEGIN  (37)
	declare_fun_header : var_type FUN . ID '(' error ')' BEGIN  (38)

	error  shift 126
	ID  shift 127
	.  error


state 80
	declare_var : var_type var_list . ';'  (29)
	declare_var : var_type var_list . error  (30)
	var_list : var_list . ',' ID  (34)

	error  shift 128
	';'  shift 129
	','  shift 130
	.  error


state 81
	statement_list : statement_list . statement  (9)
	fun_body : statement_list .  (48)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	END  reduce 48

	statement  goto 66
	executable_statement  goto 20
	declare_pair  goto 21
	declare_var  goto 22
	declare_fun  goto 23
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 32
	declare_fun_header  goto 33
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 82
	declare_fun : declare_fun_header fun_body . END  (35)

	END  shift 131
	.  error


state 83
	then_statement : THEN . ctrl_block_statement  (60)
	then_statement : THEN . error  (61)

	error  shift 132
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	executable_statement  goto 87
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	executable_statement_list  goto 133
	var_type  goto 89
	if_cond  goto 34
	ctrl_block_statement  goto 134
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 84
	if_statement : if_cond then_statement . END_IF  (53)
	if_statement : if_cond then_statement . error  (54)
	if_statement : if_cond then_statement . else_statement  (55)

	error  shift 135
	ELSE  shift 136
	END_IF  shift 137
	.  error

	else_statement  goto 138
	else_tk  goto 139


state 85
	assign_statement : expr_pair ASSIGN . expr  (77)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 140
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 86
	repeat_statement : repeat_begin END . UNTIL '(' cond ')'  (102)
	repeat_statement : repeat_begin END . UNTIL cond  (103)
	repeat_statement : repeat_begin END . UNTIL '(' cond  (104)
	repeat_statement : repeat_begin END . UNTIL cond ')'  (105)

	UNTIL  shift 141
	.  error


state 87
	executable_statement_list : executable_statement .  (27)

	.  reduce 27


state 88
	executable_statement_list : executable_statement_list . executable_statement  (28)
	repeat_statement : repeat_begin executable_statement_list . END UNTIL '(' cond ')'  (98)
	repeat_statement : repeat_begin executable_statement_list . END UNTIL cond  (99)
	repeat_statement : repeat_begin executable_statement_list . END UNTIL '(' cond  (100)
	repeat_statement : repeat_begin executable_statement_list . END UNTIL cond ')'  (101)
	repeat_statement : repeat_begin executable_statement_list . END '(' cond ')'  (106)
	repeat_statement : repeat_begin executable_statement_list . END UNTIL '(' ')'  (107)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 142
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	executable_statement  goto 143
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 89
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 89
	assign_statement : var_type . ID ASSIGN expr  (78)

	ID  shift 144
	.  error


state 90
	mult_assign_statement : id_list ASSIGN . expr_list  (109)
	mult_assign_statement : id_list ASSIGN . error  (111)

	error  shift 145
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 146
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53
	expr_list  goto 147


state 91
	id_list : id_list ',' . elem_list  (113)

	ID  shift 148
	.  error

	expr_pair  goto 149
	elem_list  goto 150


state 92
	id_list : elem_list ',' . elem_list  (112)

	ID  shift 148
	.  error

	expr_pair  goto 149
	elem_list  goto 151


state 93
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 94
	assign_statement : ID ASSIGN expr .  (76)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)
	expr_list : expr . ',' expr  (116)

	','  shift 152
	'+'  shift 106
	'-'  shift 107
	$end  reduce 76
	error  reduce 76
	ID  reduce 76
	TAG  reduce 76
	IF  reduce 76
	ELSE  reduce 76
	END  reduce 76
	END_IF  reduce 76
	OUTF  reduce 76
	TYPEDEF  reduce 76
	RET  reduce 76
	UINTEGER  reduce 76
	SINGLE  reduce 76
	REPEAT  reduce 76
	HEXA  reduce 76
	GOTO  reduce 76
	';'  reduce 76


state 95
	mult_assign_statement : ID ASSIGN expr_list .  (110)
	expr_list : expr_list . ',' expr  (117)

	','  shift 153
	$end  reduce 110
	error  reduce 110
	ID  reduce 110
	TAG  reduce 110
	IF  reduce 110
	ELSE  reduce 110
	END  reduce 110
	END_IF  reduce 110
	OUTF  reduce 110
	TYPEDEF  reduce 110
	RET  reduce 110
	UINTEGER  reduce 110
	SINGLE  reduce 110
	REPEAT  reduce 110
	HEXA  reduce 110
	GOTO  reduce 110
	';'  reduce 110


state 96
	expr_pair : ID '{' CTE . '}'  (91)

	'}'  shift 154
	.  error


state 97
	fun_invoc : ID '(' . expr ')'  (92)
	fun_invoc : ID '(' . expr error ')'  (93)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 155
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 98
	if_cond : IF '(' cond . ')'  (56)
	if_cond : IF '(' cond .  (58)

	')'  shift 156
	THEN  reduce 58


state 99
	fact : '-' CTE .  (88)

	.  reduce 88


state 100
	cond_op : NEQ .  (73)

	.  reduce 73


state 101
	cond_op : LEQ .  (74)

	.  reduce 74


state 102
	cond_op : MEQ .  (75)

	.  reduce 75


state 103
	cond_op : '<' .  (70)

	.  reduce 70


state 104
	cond_op : '>' .  (71)

	.  reduce 71


state 105
	cond_op : '=' .  (72)

	.  reduce 72


state 106
	expr : expr '+' . term  (79)

	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr_pair  goto 50
	term  goto 157
	fact  goto 52
	fun_invoc  goto 53


state 107
	expr : expr '-' . term  (80)

	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr_pair  goto 50
	term  goto 158
	fact  goto 52
	fun_invoc  goto 53


state 108
	cond : expr cond_op . expr  (68)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 159
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 109
	if_cond : IF cond ')' .  (59)

	.  reduce 59


state 110
	term : term '*' . fact  (83)

	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr_pair  goto 50
	fact  goto 160
	fun_invoc  goto 53


state 111
	term : term '/' . fact  (84)

	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr_pair  goto 50
	fact  goto 161
	fun_invoc  goto 53


state 112
	prog : ID BEGIN statement_list error .  (5)
	statement : error . ';'  (14)

	';'  shift 40
	$end  reduce 5


state 113
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 114
	outf_statement : OUTF '(' CHARCH . ')'  (95)

	')'  shift 162
	.  error


state 115
	outf_statement : OUTF '(' ')' .  (96)

	.  reduce 96


state 116
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)
	outf_statement : OUTF '(' expr . ')'  (94)

	')'  shift 163
	'+'  shift 106
	'-'  shift 107
	.  error


state 117
	var_type : ID .  (52)

	.  reduce 52


state 118
	declare_pair : TYPEDEF PAIR '<' . var_type '>' ID  (39)
	declare_pair : TYPEDEF PAIR '<' . var_type '>' error  (42)

	ID  shift 117
	UINTEGER  shift 13
	SINGLE  shift 14
	HEXA  shift 16
	.  error

	var_type  goto 164


state 119
	declare_pair : TYPEDEF PAIR var_type . ID  (41)

	ID  shift 165
	.  error


state 120
	declare_pair : TYPEDEF '<' var_type . '>' ID  (40)

	'>'  shift 166
	.  error


state 121
	return_statement : RET '(' expr . ')'  (46)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)

	')'  shift 167
	'+'  shift 106
	'-'  shift 107
	.  error


state 122
	declare_var : var_type ID error .  (32)

	.  reduce 32


state 123
	assign_statement : var_type ID ASSIGN . expr  (78)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 168
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 124
	declare_var : var_type ID ';' .  (31)

	.  reduce 31


state 125
	var_list : ID ',' . ID  (33)

	ID  shift 169
	.  error


state 126
	declare_fun_header : var_type FUN error . '(' parametro ')' BEGIN  (37)

	'('  shift 170
	.  error


state 127
	declare_fun_header : var_type FUN ID . '(' parametro ')' BEGIN  (36)
	declare_fun_header : var_type FUN ID . '(' error ')' BEGIN  (38)

	'('  shift 171
	.  error


state 128
	declare_var : var_type var_list error .  (30)

	.  reduce 30


state 129
	declare_var : var_type var_list ';' .  (29)

	.  reduce 29


state 130
	var_list : var_list ',' . ID  (34)

	ID  shift 172
	.  error


state 131
	declare_fun : declare_fun_header fun_body END .  (35)

	.  reduce 35


state 132
	then_statement : THEN error .  (61)

	.  reduce 61


state 133
	executable_statement_list : executable_statement_list . executable_statement  (28)
	ctrl_block_statement : executable_statement_list .  (67)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	error  reduce 67
	ELSE  reduce 67
	END_IF  reduce 67

	executable_statement  goto 143
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	var_type  goto 89
	if_cond  goto 34
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 134
	then_statement : THEN ctrl_block_statement .  (60)

	.  reduce 60


state 135
	if_statement : if_cond then_statement error .  (54)

	.  reduce 54


state 136
	else_tk : ELSE .  (66)

	.  reduce 66


state 137
	if_statement : if_cond then_statement END_IF .  (53)

	.  reduce 53


state 138
	if_statement : if_cond then_statement else_statement .  (55)

	.  reduce 55


state 139
	else_statement : else_tk . ctrl_block_statement END_IF  (62)
	else_statement : else_tk . END_IF  (63)
	else_statement : else_tk . error END_IF  (64)
	else_statement : else_tk . ctrl_block_statement error  (65)

	error  shift 173
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END_IF  shift 174
	OUTF  shift 10
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	HEXA  shift 16
	GOTO  shift 17
	.  error

	executable_statement  goto 87
	if_statement  goto 24
	assign_statement  goto 25
	outf_statement  goto 26
	repeat_statement  goto 27
	goto_statement  goto 28
	mult_assign_statement  goto 29
	return_statement  goto 30
	tag_statement  goto 31
	executable_statement_list  goto 133
	var_type  goto 89
	if_cond  goto 34
	ctrl_block_statement  goto 175
	expr_pair  goto 35
	repeat_begin  goto 36
	id_list  goto 37
	elem_list  goto 38


state 140
	assign_statement : expr_pair ASSIGN expr .  (77)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)

	'+'  shift 106
	'-'  shift 107
	$end  reduce 77
	error  reduce 77
	ID  reduce 77
	TAG  reduce 77
	IF  reduce 77
	ELSE  reduce 77
	END  reduce 77
	END_IF  reduce 77
	OUTF  reduce 77
	TYPEDEF  reduce 77
	RET  reduce 77
	UINTEGER  reduce 77
	SINGLE  reduce 77
	REPEAT  reduce 77
	HEXA  reduce 77
	GOTO  reduce 77
	';'  reduce 77


state 141
	repeat_statement : repeat_begin END UNTIL . '(' cond ')'  (102)
	repeat_statement : repeat_begin END UNTIL . cond  (103)
	repeat_statement : repeat_begin END UNTIL . '(' cond  (104)
	repeat_statement : repeat_begin END UNTIL . cond ')'  (105)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	'('  shift 176
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 177
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 142
	repeat_statement : repeat_begin executable_statement_list END . UNTIL '(' cond ')'  (98)
	repeat_statement : repeat_begin executable_statement_list END . UNTIL cond  (99)
	repeat_statement : repeat_begin executable_statement_list END . UNTIL '(' cond  (100)
	repeat_statement : repeat_begin executable_statement_list END . UNTIL cond ')'  (101)
	repeat_statement : repeat_begin executable_statement_list END . '(' cond ')'  (106)
	repeat_statement : repeat_begin executable_statement_list END . UNTIL '(' ')'  (107)

	UNTIL  shift 178
	'('  shift 179
	.  error


state 143
	executable_statement_list : executable_statement_list executable_statement .  (28)

	.  reduce 28


state 144
	assign_statement : var_type ID . ASSIGN expr  (78)

	ASSIGN  shift 123
	.  error


state 145
	expr : error .  (82)
	mult_assign_statement : id_list ASSIGN error .  (111)

	$end  reduce 111
	error  reduce 111
	ID  reduce 111
	TAG  reduce 111
	IF  reduce 111
	ELSE  reduce 111
	END  reduce 111
	END_IF  reduce 111
	OUTF  reduce 111
	TYPEDEF  reduce 111
	RET  reduce 111
	UINTEGER  reduce 111
	SINGLE  reduce 111
	REPEAT  reduce 111
	HEXA  reduce 111
	GOTO  reduce 111
	';'  reduce 111
	','  reduce 82
	'+'  reduce 82
	'-'  reduce 82


state 146
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)
	expr_list : expr . ',' expr  (116)

	','  shift 152
	'+'  shift 106
	'-'  shift 107
	.  error


state 147
	mult_assign_statement : id_list ASSIGN expr_list .  (109)
	expr_list : expr_list . ',' expr  (117)

	','  shift 153
	$end  reduce 109
	error  reduce 109
	ID  reduce 109
	TAG  reduce 109
	IF  reduce 109
	ELSE  reduce 109
	END  reduce 109
	END_IF  reduce 109
	OUTF  reduce 109
	TYPEDEF  reduce 109
	RET  reduce 109
	UINTEGER  reduce 109
	SINGLE  reduce 109
	REPEAT  reduce 109
	HEXA  reduce 109
	GOTO  reduce 109
	';'  reduce 109


state 148
	expr_pair : ID . '{' CTE '}'  (91)
	elem_list : ID .  (114)

	'{'  shift 42
	ASSIGN  reduce 114
	','  reduce 114


state 149
	elem_list : expr_pair .  (115)

	.  reduce 115


state 150
	id_list : id_list ',' elem_list .  (113)

	.  reduce 113


state 151
	id_list : elem_list ',' elem_list .  (112)

	.  reduce 112


state 152
	expr_list : expr ',' . expr  (116)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 180
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 153
	expr_list : expr_list ',' . expr  (117)

	error  shift 59
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 181
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 154
	expr_pair : ID '{' CTE '}' .  (91)

	.  reduce 91


state 155
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)
	fun_invoc : ID '(' expr . ')'  (92)
	fun_invoc : ID '(' expr . error ')'  (93)

	error  shift 182
	')'  shift 183
	'+'  shift 106
	'-'  shift 107
	.  error


state 156
	if_cond : IF '(' cond ')' .  (56)

	.  reduce 56


state 157
	expr : expr '+' term .  (79)
	term : term . '*' fact  (83)
	term : term . '/' fact  (84)

	'*'  shift 110
	'/'  shift 111
	$end  reduce 79
	error  reduce 79
	ID  reduce 79
	NEQ  reduce 79
	LEQ  reduce 79
	MEQ  reduce 79
	TAG  reduce 79
	IF  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	HEXA  reduce 79
	GOTO  reduce 79
	';'  reduce 79
	','  reduce 79
	')'  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	'='  reduce 79
	'+'  reduce 79
	'-'  reduce 79


state 158
	expr : expr '-' term .  (80)
	term : term . '*' fact  (83)
	term : term . '/' fact  (84)

	'*'  shift 110
	'/'  shift 111
	$end  reduce 80
	error  reduce 80
	ID  reduce 80
	NEQ  reduce 80
	LEQ  reduce 80
	MEQ  reduce 80
	TAG  reduce 80
	IF  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	END  reduce 80
	END_IF  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	UINTEGER  reduce 80
	SINGLE  reduce 80
	REPEAT  reduce 80
	HEXA  reduce 80
	GOTO  reduce 80
	';'  reduce 80
	','  reduce 80
	')'  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	'='  reduce 80
	'+'  reduce 80
	'-'  reduce 80


state 159
	cond : expr cond_op expr .  (68)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)

	'+'  shift 106
	'-'  shift 107
	$end  reduce 68
	error  reduce 68
	ID  reduce 68
	TAG  reduce 68
	IF  reduce 68
	THEN  reduce 68
	ELSE  reduce 68
	END  reduce 68
	END_IF  reduce 68
	OUTF  reduce 68
	TYPEDEF  reduce 68
	RET  reduce 68
	UINTEGER  reduce 68
	SINGLE  reduce 68
	REPEAT  reduce 68
	HEXA  reduce 68
	GOTO  reduce 68
	';'  reduce 68
	')'  reduce 68


state 160
	term : term '*' fact .  (83)

	.  reduce 83


state 161
	term : term '/' fact .  (84)

	.  reduce 84


state 162
	outf_statement : OUTF '(' CHARCH ')' .  (95)

	.  reduce 95


state 163
	outf_statement : OUTF '(' expr ')' .  (94)

	.  reduce 94


state 164
	declare_pair : TYPEDEF PAIR '<' var_type . '>' ID  (39)
	declare_pair : TYPEDEF PAIR '<' var_type . '>' error  (42)

	'>'  shift 184
	.  error


state 165
	declare_pair : TYPEDEF PAIR var_type ID .  (41)

	.  reduce 41


state 166
	declare_pair : TYPEDEF '<' var_type '>' . ID  (40)

	ID  shift 185
	.  error


state 167
	return_statement : RET '(' expr ')' .  (46)

	.  reduce 46


state 168
	assign_statement : var_type ID ASSIGN expr .  (78)
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)

	'+'  shift 106
	'-'  shift 107
	$end  reduce 78
	error  reduce 78
	ID  reduce 78
	TAG  reduce 78
	IF  reduce 78
	ELSE  reduce 78
	END  reduce 78
	END_IF  reduce 78
	OUTF  reduce 78
	TYPEDEF  reduce 78
	RET  reduce 78
	UINTEGER  reduce 78
	SINGLE  reduce 78
	REPEAT  reduce 78
	HEXA  reduce 78
	GOTO  reduce 78
	';'  reduce 78


state 169
	var_list : ID ',' ID .  (33)

	.  reduce 33


state 170
	declare_fun_header : var_type FUN error '(' . parametro ')' BEGIN  (37)

	ID  shift 186
	UINTEGER  shift 13
	SINGLE  shift 14
	HEXA  shift 16
	.  error

	var_type  goto 187
	parametro  goto 188


state 171
	declare_fun_header : var_type FUN ID '(' . parametro ')' BEGIN  (36)
	declare_fun_header : var_type FUN ID '(' . error ')' BEGIN  (38)

	error  shift 189
	ID  shift 186
	UINTEGER  shift 13
	SINGLE  shift 14
	HEXA  shift 16
	.  error

	var_type  goto 187
	parametro  goto 190


state 172
	var_list : var_list ',' ID .  (34)

	.  reduce 34


state 173
	else_statement : else_tk error . END_IF  (64)

	END_IF  shift 191
	.  error


state 174
	else_statement : else_tk END_IF .  (63)

	.  reduce 63


state 175
	else_statement : else_tk ctrl_block_statement . END_IF  (62)
	else_statement : else_tk ctrl_block_statement . error  (65)

	error  shift 192
	END_IF  shift 193
	.  error


state 176
	repeat_statement : repeat_begin END UNTIL '(' . cond ')'  (102)
	repeat_statement : repeat_begin END UNTIL '(' . cond  (104)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 194
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 177
	repeat_statement : repeat_begin END UNTIL cond .  (103)
	repeat_statement : repeat_begin END UNTIL cond . ')'  (105)

	')'  shift 195
	$end  reduce 103
	error  reduce 103
	ID  reduce 103
	TAG  reduce 103
	IF  reduce 103
	ELSE  reduce 103
	END  reduce 103
	END_IF  reduce 103
	OUTF  reduce 103
	TYPEDEF  reduce 103
	RET  reduce 103
	UINTEGER  reduce 103
	SINGLE  reduce 103
	REPEAT  reduce 103
	HEXA  reduce 103
	GOTO  reduce 103
	';'  reduce 103


state 178
	repeat_statement : repeat_begin executable_statement_list END UNTIL . '(' cond ')'  (98)
	repeat_statement : repeat_begin executable_statement_list END UNTIL . cond  (99)
	repeat_statement : repeat_begin executable_statement_list END UNTIL . '(' cond  (100)
	repeat_statement : repeat_begin executable_statement_list END UNTIL . cond ')'  (101)
	repeat_statement : repeat_begin executable_statement_list END UNTIL . '(' ')'  (107)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	'('  shift 196
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 197
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 179
	repeat_statement : repeat_begin executable_statement_list END '(' . cond ')'  (106)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 198
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 180
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)
	expr_list : expr ',' expr .  (116)

	'+'  shift 106
	'-'  shift 107
	$end  reduce 116
	error  reduce 116
	ID  reduce 116
	TAG  reduce 116
	IF  reduce 116
	ELSE  reduce 116
	END  reduce 116
	END_IF  reduce 116
	OUTF  reduce 116
	TYPEDEF  reduce 116
	RET  reduce 116
	UINTEGER  reduce 116
	SINGLE  reduce 116
	REPEAT  reduce 116
	HEXA  reduce 116
	GOTO  reduce 116
	';'  reduce 116
	','  reduce 116


state 181
	expr : expr . '+' term  (79)
	expr : expr . '-' term  (80)
	expr_list : expr_list ',' expr .  (117)

	'+'  shift 106
	'-'  shift 107
	$end  reduce 117
	error  reduce 117
	ID  reduce 117
	TAG  reduce 117
	IF  reduce 117
	ELSE  reduce 117
	END  reduce 117
	END_IF  reduce 117
	OUTF  reduce 117
	TYPEDEF  reduce 117
	RET  reduce 117
	UINTEGER  reduce 117
	SINGLE  reduce 117
	REPEAT  reduce 117
	HEXA  reduce 117
	GOTO  reduce 117
	';'  reduce 117
	','  reduce 117


state 182
	fun_invoc : ID '(' expr error . ')'  (93)

	')'  shift 199
	.  error


state 183
	fun_invoc : ID '(' expr ')' .  (92)

	.  reduce 92


state 184
	declare_pair : TYPEDEF PAIR '<' var_type '>' . ID  (39)
	declare_pair : TYPEDEF PAIR '<' var_type '>' . error  (42)

	error  shift 200
	ID  shift 201
	.  error


state 185
	declare_pair : TYPEDEF '<' var_type '>' ID .  (40)

	.  reduce 40


state 186
	parametro : ID .  (44)
	var_type : ID .  (52)

	error  reduce 52
	ID  reduce 52
	')'  reduce 44


state 187
	parametro : var_type . ID  (43)
	parametro : var_type . error  (45)

	error  shift 202
	ID  shift 203
	.  error


state 188
	declare_fun_header : var_type FUN error '(' parametro . ')' BEGIN  (37)

	')'  shift 204
	.  error


state 189
	declare_fun_header : var_type FUN ID '(' error . ')' BEGIN  (38)

	')'  shift 205
	.  error


state 190
	declare_fun_header : var_type FUN ID '(' parametro . ')' BEGIN  (36)

	')'  shift 206
	.  error


state 191
	else_statement : else_tk error END_IF .  (64)

	.  reduce 64


state 192
	else_statement : else_tk ctrl_block_statement error .  (65)

	.  reduce 65


state 193
	else_statement : else_tk ctrl_block_statement END_IF .  (62)

	.  reduce 62


state 194
	repeat_statement : repeat_begin END UNTIL '(' cond . ')'  (102)
	repeat_statement : repeat_begin END UNTIL '(' cond .  (104)

	')'  shift 207
	$end  reduce 104
	error  reduce 104
	ID  reduce 104
	TAG  reduce 104
	IF  reduce 104
	ELSE  reduce 104
	END  reduce 104
	END_IF  reduce 104
	OUTF  reduce 104
	TYPEDEF  reduce 104
	RET  reduce 104
	UINTEGER  reduce 104
	SINGLE  reduce 104
	REPEAT  reduce 104
	HEXA  reduce 104
	GOTO  reduce 104
	';'  reduce 104


state 195
	repeat_statement : repeat_begin END UNTIL cond ')' .  (105)

	.  reduce 105


state 196
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' . cond ')'  (98)
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' . cond  (100)
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' . ')'  (107)

	error  shift 43
	ID  shift 44
	CTE  shift 45
	')'  shift 208
	'-'  shift 47
	.  error

	expr  goto 48
	cond  goto 209
	expr_pair  goto 50
	term  goto 51
	fact  goto 52
	fun_invoc  goto 53


state 197
	repeat_statement : repeat_begin executable_statement_list END UNTIL cond .  (99)
	repeat_statement : repeat_begin executable_statement_list END UNTIL cond . ')'  (101)

	')'  shift 210
	$end  reduce 99
	error  reduce 99
	ID  reduce 99
	TAG  reduce 99
	IF  reduce 99
	ELSE  reduce 99
	END  reduce 99
	END_IF  reduce 99
	OUTF  reduce 99
	TYPEDEF  reduce 99
	RET  reduce 99
	UINTEGER  reduce 99
	SINGLE  reduce 99
	REPEAT  reduce 99
	HEXA  reduce 99
	GOTO  reduce 99
	';'  reduce 99


state 198
	repeat_statement : repeat_begin executable_statement_list END '(' cond . ')'  (106)

	')'  shift 211
	.  error


state 199
	fun_invoc : ID '(' expr error ')' .  (93)

	.  reduce 93


state 200
	declare_pair : TYPEDEF PAIR '<' var_type '>' error .  (42)

	.  reduce 42


state 201
	declare_pair : TYPEDEF PAIR '<' var_type '>' ID .  (39)

	.  reduce 39


state 202
	parametro : var_type error .  (45)

	.  reduce 45


state 203
	parametro : var_type ID .  (43)

	.  reduce 43


state 204
	declare_fun_header : var_type FUN error '(' parametro ')' . BEGIN  (37)

	BEGIN  shift 212
	.  error


state 205
	declare_fun_header : var_type FUN ID '(' error ')' . BEGIN  (38)

	BEGIN  shift 213
	.  error


state 206
	declare_fun_header : var_type FUN ID '(' parametro ')' . BEGIN  (36)

	BEGIN  shift 214
	.  error


state 207
	repeat_statement : repeat_begin END UNTIL '(' cond ')' .  (102)

	.  reduce 102


state 208
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' ')' .  (107)

	.  reduce 107


state 209
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' cond . ')'  (98)
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' cond .  (100)

	')'  shift 215
	$end  reduce 100
	error  reduce 100
	ID  reduce 100
	TAG  reduce 100
	IF  reduce 100
	ELSE  reduce 100
	END  reduce 100
	END_IF  reduce 100
	OUTF  reduce 100
	TYPEDEF  reduce 100
	RET  reduce 100
	UINTEGER  reduce 100
	SINGLE  reduce 100
	REPEAT  reduce 100
	HEXA  reduce 100
	GOTO  reduce 100
	';'  reduce 100


state 210
	repeat_statement : repeat_begin executable_statement_list END UNTIL cond ')' .  (101)

	.  reduce 101


state 211
	repeat_statement : repeat_begin executable_statement_list END '(' cond ')' .  (106)

	.  reduce 106


state 212
	declare_fun_header : var_type FUN error '(' parametro ')' BEGIN .  (37)

	.  reduce 37


state 213
	declare_fun_header : var_type FUN ID '(' error ')' BEGIN .  (38)

	.  reduce 38


state 214
	declare_fun_header : var_type FUN ID '(' parametro ')' BEGIN .  (36)

	.  reduce 36


state 215
	repeat_statement : repeat_begin executable_statement_list END UNTIL '(' cond ')' .  (98)

	.  reduce 98


40 terminals, 40 nonterminals
121 grammar rules, 216 states
