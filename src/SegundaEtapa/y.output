   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | ID error statement_list END
   4       | ID BEGIN statement_list error
   5       | ID statement_list
   6       |

   7  statement_list : statement
   8                 | statement_list statement
   9                 | statement_list error

  10  statement : executable_statement optional_semicolon
  11            | declare_statement optional_semicolon
  12            | return_statement optional_semicolon

  13  optional_semicolon : ';'
  14                     |

  15  executable_statement : if_statement
  16                       | assign_statement
  17                       | outf_statement
  18                       | repeat_statement
  19                       | goto_statement
  20                       | mult_assign_statement
  21                       | TAG

  22  executable_statement_list : executable_statement
  23                            | executable_statement_list executable_statement

  24  declare_statement : var_type var_list
  25                    | var_type ID
  26                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END
  27                    | var_type FUN error '(' parametro ')' BEGIN fun_body END
  28                    | var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END
  29                    | var_type FUN ID '(' error ')' BEGIN fun_body END
  30                    | TYPEDEF PAIR '<' var_type '>' ID
  31                    | TYPEDEF error
  32                    | TYPEDEF PAIR error
  33                    | TYPEDEF PAIR '<' var_type '>' error

  34  var_list : ID ',' ID
  35           | var_list ',' ID
  36           | error

  37  parametro : var_type ID
  38            | ID
  39            | var_type error

  40  return_statement : RET '(' expr ')'

  41  fun_body : statement_list

  42  var_type : UINTEGER
  43           | SINGLE
  44           | ID

  45  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  46               | IF cond THEN ctrl_block_statement END_IF
  47               | IF '(' cond ')' THEN ctrl_block_statement error
  48               | IF '(' cond ')' THEN error END_IF
  49               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  50               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  51               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  52               | IF cond THEN error ELSE ctrl_block_statement END_IF
  53               | IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF
  54               | IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF
  55               | IF fun_invoc THEN ctrl_block_statement END_IF
  56               | IF '(' fun_invoc ')' THEN ctrl_block_statement error
  57               | IF '(' fun_invoc ')' THEN error END_IF
  58               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  59               | IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  60               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  61               | IF fun_invoc THEN error ELSE ctrl_block_statement END_IF

  62  ctrl_block_statement : executable_statement_list

  63  cond : expr cond_op expr
  64       | expr error expr

  65  cond_op : '<'
  66          | '>'
  67          | '='
  68          | NEQ
  69          | LEQ
  70          | MEQ

  71  assign_statement : ID ASSIGN expr
  72                   | expr_pair ASSIGN expr

  73  expr : expr '+' term
  74       | expr '-' term
  75       | term

  76  term : term '*' fact
  77       | term '/' fact
  78       | fact

  79  fact : ID
  80       | CTE
  81       | '-' CTE
  82       | '-' ID
  83       | fun_invoc
  84       | expr_pair
  85       | CHARCH

  86  expr_pair : ID '{' CTE '}'

  87  fun_invoc : ID '(' expr ')'
  88            | ID '(' expr error ')'

  89  outf_statement : OUTF '(' expr ')'
  90                 | OUTF error

  91  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')'
  92                   | REPEAT BEGIN executable_statement_list END UNTIL cond
  93                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')'
  94                   | REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';'
  95                   | REPEAT BEGIN error
  96                   | REPEAT BEGIN executable_statement_list END error

  97  mult_assign_statement : id_list ASSIGN expr_list
  98                        | id_list ASSIGN error

  99  id_list : elem_list ',' elem_list
 100          | id_list ',' elem_list

 101  elem_list : ID
 102            | expr_pair

 103  expr_list : expr ',' expr
 104            | expr_list ',' expr

 105  goto_statement : GOTO TAG
 106                 | GOTO error

state 0
	$accept : . prog $end  (0)
	prog : .  (6)

	error  shift 1
	ID  shift 2
	$end  reduce 6

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)

	BEGIN  shift 4
	.  error


state 2
	prog : ID . BEGIN statement_list END  (1)
	prog : ID . error statement_list END  (3)
	prog : ID . BEGIN statement_list error  (4)
	prog : ID . statement_list  (5)

	error  shift 5
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	BEGIN  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 17
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 32
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 5
	prog : ID error . statement_list END  (3)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 33
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 6
	var_type : ID .  (44)
	assign_statement : ID . ASSIGN expr  (71)
	expr_pair : ID . '{' CTE '}'  (86)
	elem_list : ID .  (101)

	ASSIGN  shift 34
	'{'  shift 35
	error  reduce 44
	ID  reduce 44
	FUN  reduce 44
	','  reduce 101


state 7
	executable_statement : TAG .  (21)

	.  reduce 21


state 8
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (45)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (46)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (47)
	if_statement : IF . '(' cond ')' THEN error END_IF  (48)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (49)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (51)
	if_statement : IF . cond THEN error ELSE ctrl_block_statement END_IF  (52)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE error END_IF  (53)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF . fun_invoc THEN ctrl_block_statement END_IF  (55)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement error  (56)
	if_statement : IF . '(' fun_invoc ')' THEN error END_IF  (57)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF . fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)
	if_statement : IF . fun_invoc THEN error ELSE ctrl_block_statement END_IF  (61)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'('  shift 39
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 42
	fun_invoc  goto 43
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 9
	prog : ID BEGIN . statement_list END  (1)
	prog : ID BEGIN . statement_list error  (4)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 47
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 10
	outf_statement : OUTF . '(' expr ')'  (89)
	outf_statement : OUTF . error  (90)

	error  shift 48
	'('  shift 49
	.  error


state 11
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID  (30)
	declare_statement : TYPEDEF . error  (31)
	declare_statement : TYPEDEF . PAIR error  (32)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' error  (33)

	error  shift 50
	PAIR  shift 51
	.  error


state 12
	return_statement : RET . '(' expr ')'  (40)

	'('  shift 52
	.  error


state 13
	var_type : UINTEGER .  (42)

	.  reduce 42


state 14
	var_type : SINGLE .  (43)

	.  reduce 43


state 15
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')'  (91)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (92)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')'  (93)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT . BEGIN error  (95)
	repeat_statement : REPEAT . BEGIN executable_statement_list END error  (96)

	BEGIN  shift 53
	.  error


state 16
	goto_statement : GOTO . TAG  (105)
	goto_statement : GOTO . error  (106)

	error  shift 54
	TAG  shift 55
	.  error


state 17
	prog : ID statement_list .  (5)
	statement_list : statement_list . statement  (8)
	statement_list : statement_list . error  (9)

	error  shift 56
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	$end  reduce 5

	statement  goto 57
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 18
	statement_list : statement .  (7)

	.  reduce 7


state 19
	statement : executable_statement . optional_semicolon  (10)
	optional_semicolon : .  (14)

	';'  shift 58
	$end  reduce 14
	error  reduce 14
	ID  reduce 14
	TAG  reduce 14
	IF  reduce 14
	END  reduce 14
	OUTF  reduce 14
	TYPEDEF  reduce 14
	RET  reduce 14
	UINTEGER  reduce 14
	SINGLE  reduce 14
	REPEAT  reduce 14
	GOTO  reduce 14

	optional_semicolon  goto 59


state 20
	statement : declare_statement . optional_semicolon  (11)
	optional_semicolon : .  (14)

	';'  shift 58
	$end  reduce 14
	error  reduce 14
	ID  reduce 14
	TAG  reduce 14
	IF  reduce 14
	END  reduce 14
	OUTF  reduce 14
	TYPEDEF  reduce 14
	RET  reduce 14
	UINTEGER  reduce 14
	SINGLE  reduce 14
	REPEAT  reduce 14
	GOTO  reduce 14

	optional_semicolon  goto 60


state 21
	statement : return_statement . optional_semicolon  (12)
	optional_semicolon : .  (14)

	';'  shift 58
	$end  reduce 14
	error  reduce 14
	ID  reduce 14
	TAG  reduce 14
	IF  reduce 14
	END  reduce 14
	OUTF  reduce 14
	TYPEDEF  reduce 14
	RET  reduce 14
	UINTEGER  reduce 14
	SINGLE  reduce 14
	REPEAT  reduce 14
	GOTO  reduce 14

	optional_semicolon  goto 61


state 22
	executable_statement : if_statement .  (15)

	.  reduce 15


state 23
	executable_statement : assign_statement .  (16)

	.  reduce 16


state 24
	executable_statement : outf_statement .  (17)

	.  reduce 17


state 25
	executable_statement : repeat_statement .  (18)

	.  reduce 18


state 26
	executable_statement : goto_statement .  (19)

	.  reduce 19


state 27
	executable_statement : mult_assign_statement .  (20)

	.  reduce 20


state 28
	declare_statement : var_type . var_list  (24)
	declare_statement : var_type . ID  (25)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END  (26)
	declare_statement : var_type . FUN error '(' parametro ')' BEGIN fun_body END  (27)
	declare_statement : var_type . FUN ID '(' parametro ',' ')' BEGIN fun_body END  (28)
	declare_statement : var_type . FUN ID '(' error ')' BEGIN fun_body END  (29)

	error  shift 62
	ID  shift 63
	FUN  shift 64
	.  error

	var_list  goto 65


state 29
	assign_statement : expr_pair . ASSIGN expr  (72)
	elem_list : expr_pair .  (102)

	ASSIGN  shift 66
	','  reduce 102


state 30
	mult_assign_statement : id_list . ASSIGN expr_list  (97)
	mult_assign_statement : id_list . ASSIGN error  (98)
	id_list : id_list . ',' elem_list  (100)

	ASSIGN  shift 67
	','  shift 68
	.  error


state 31
	id_list : elem_list . ',' elem_list  (99)

	','  shift 69
	.  error


state 32
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (8)
	statement_list : statement_list . error  (9)

	error  shift 56
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 70
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 57
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 33
	prog : ID error statement_list . END  (3)
	statement_list : statement_list . statement  (8)
	statement_list : statement_list . error  (9)

	error  shift 56
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 71
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 57
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 34
	assign_statement : ID ASSIGN . expr  (71)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 72
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 35
	expr_pair : ID '{' . CTE '}'  (86)

	CTE  shift 74
	.  error


state 36
	fact : ID .  (79)
	expr_pair : ID . '{' CTE '}'  (86)
	fun_invoc : ID . '(' expr ')'  (87)
	fun_invoc : ID . '(' expr error ')'  (88)

	'('  shift 75
	'{'  shift 35
	$end  reduce 79
	error  reduce 79
	ID  reduce 79
	NEQ  reduce 79
	LEQ  reduce 79
	MEQ  reduce 79
	TAG  reduce 79
	IF  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	GOTO  reduce 79
	';'  reduce 79
	')'  reduce 79
	','  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	'='  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79


state 37
	fact : CTE .  (80)

	.  reduce 80


state 38
	fact : CHARCH .  (85)

	.  reduce 85


state 39
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (45)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (47)
	if_statement : IF '(' . cond ')' THEN error END_IF  (48)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (49)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (51)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE error END_IF  (53)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement error  (56)
	if_statement : IF '(' . fun_invoc ')' THEN error END_IF  (57)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 76
	fun_invoc  goto 77
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 40
	fact : '-' . CTE  (81)
	fact : '-' . ID  (82)

	ID  shift 78
	CTE  shift 79
	.  error


state 41
	cond : expr . cond_op expr  (63)
	cond : expr . error expr  (64)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)

	error  shift 80
	NEQ  shift 81
	LEQ  shift 82
	MEQ  shift 83
	'<'  shift 84
	'>'  shift 85
	'='  shift 86
	'+'  shift 87
	'-'  shift 88
	.  error

	cond_op  goto 89


state 42
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (46)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF cond . THEN error ELSE ctrl_block_statement END_IF  (52)

	THEN  shift 90
	.  error


state 43
	if_statement : IF fun_invoc . THEN ctrl_block_statement END_IF  (55)
	if_statement : IF fun_invoc . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF fun_invoc . THEN error ELSE ctrl_block_statement END_IF  (61)
	fact : fun_invoc .  (83)

	THEN  shift 91
	error  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 44
	fact : expr_pair .  (84)

	.  reduce 84


state 45
	expr : term .  (75)
	term : term . '*' fact  (76)
	term : term . '/' fact  (77)

	'*'  shift 92
	'/'  shift 93
	$end  reduce 75
	error  reduce 75
	ID  reduce 75
	NEQ  reduce 75
	LEQ  reduce 75
	MEQ  reduce 75
	TAG  reduce 75
	IF  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	END  reduce 75
	END_IF  reduce 75
	OUTF  reduce 75
	TYPEDEF  reduce 75
	RET  reduce 75
	UINTEGER  reduce 75
	SINGLE  reduce 75
	REPEAT  reduce 75
	GOTO  reduce 75
	';'  reduce 75
	')'  reduce 75
	','  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	'='  reduce 75
	'+'  reduce 75
	'-'  reduce 75


state 46
	term : fact .  (78)

	.  reduce 78


state 47
	prog : ID BEGIN statement_list . END  (1)
	prog : ID BEGIN statement_list . error  (4)
	statement_list : statement_list . statement  (8)
	statement_list : statement_list . error  (9)

	error  shift 94
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	END  shift 95
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 57
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 48
	outf_statement : OUTF error .  (90)

	.  reduce 90


state 49
	outf_statement : OUTF '(' . expr ')'  (89)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 96
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 50
	declare_statement : TYPEDEF error .  (31)

	.  reduce 31


state 51
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID  (30)
	declare_statement : TYPEDEF PAIR . error  (32)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' error  (33)

	error  shift 97
	'<'  shift 98
	.  error


state 52
	return_statement : RET '(' . expr ')'  (40)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 99
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 53
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')'  (91)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (92)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')'  (93)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT BEGIN . error  (95)
	repeat_statement : REPEAT BEGIN . executable_statement_list END error  (96)

	error  shift 100
	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 103
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 54
	goto_statement : GOTO error .  (106)

	.  reduce 106


state 55
	goto_statement : GOTO TAG .  (105)

	.  reduce 105


state 56
	statement_list : statement_list error .  (9)

	.  reduce 9


state 57
	statement_list : statement_list statement .  (8)

	.  reduce 8


state 58
	optional_semicolon : ';' .  (13)

	.  reduce 13


state 59
	statement : executable_statement optional_semicolon .  (10)

	.  reduce 10


state 60
	statement : declare_statement optional_semicolon .  (11)

	.  reduce 11


state 61
	statement : return_statement optional_semicolon .  (12)

	.  reduce 12


state 62
	var_list : error .  (36)

	.  reduce 36


state 63
	declare_statement : var_type ID .  (25)
	var_list : ID . ',' ID  (34)

	','  shift 104
	$end  reduce 25
	error  reduce 25
	ID  reduce 25
	TAG  reduce 25
	IF  reduce 25
	END  reduce 25
	OUTF  reduce 25
	TYPEDEF  reduce 25
	RET  reduce 25
	UINTEGER  reduce 25
	SINGLE  reduce 25
	REPEAT  reduce 25
	GOTO  reduce 25
	';'  reduce 25


state 64
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END  (26)
	declare_statement : var_type FUN . error '(' parametro ')' BEGIN fun_body END  (27)
	declare_statement : var_type FUN . ID '(' parametro ',' ')' BEGIN fun_body END  (28)
	declare_statement : var_type FUN . ID '(' error ')' BEGIN fun_body END  (29)

	error  shift 105
	ID  shift 106
	.  error


state 65
	declare_statement : var_type var_list .  (24)
	var_list : var_list . ',' ID  (35)

	','  shift 107
	$end  reduce 24
	error  reduce 24
	ID  reduce 24
	TAG  reduce 24
	IF  reduce 24
	END  reduce 24
	OUTF  reduce 24
	TYPEDEF  reduce 24
	RET  reduce 24
	UINTEGER  reduce 24
	SINGLE  reduce 24
	REPEAT  reduce 24
	GOTO  reduce 24
	';'  reduce 24


state 66
	assign_statement : expr_pair ASSIGN . expr  (72)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 108
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 67
	mult_assign_statement : id_list ASSIGN . expr_list  (97)
	mult_assign_statement : id_list ASSIGN . error  (98)

	error  shift 109
	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 110
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46
	expr_list  goto 111


state 68
	id_list : id_list ',' . elem_list  (100)

	ID  shift 112
	.  error

	expr_pair  goto 113
	elem_list  goto 114


state 69
	id_list : elem_list ',' . elem_list  (99)

	ID  shift 112
	.  error

	expr_pair  goto 113
	elem_list  goto 115


state 70
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 71
	prog : ID error statement_list END .  (3)

	.  reduce 3


state 72
	assign_statement : ID ASSIGN expr .  (71)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)

	'+'  shift 87
	'-'  shift 88
	$end  reduce 71
	error  reduce 71
	ID  reduce 71
	TAG  reduce 71
	IF  reduce 71
	ELSE  reduce 71
	END  reduce 71
	END_IF  reduce 71
	OUTF  reduce 71
	TYPEDEF  reduce 71
	RET  reduce 71
	UINTEGER  reduce 71
	SINGLE  reduce 71
	REPEAT  reduce 71
	GOTO  reduce 71
	';'  reduce 71


state 73
	fact : fun_invoc .  (83)

	.  reduce 83


state 74
	expr_pair : ID '{' CTE . '}'  (86)

	'}'  shift 116
	.  error


state 75
	fun_invoc : ID '(' . expr ')'  (87)
	fun_invoc : ID '(' . expr error ')'  (88)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 117
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 76
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (45)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (47)
	if_statement : IF '(' cond . ')' THEN error END_IF  (48)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (51)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE error END_IF  (53)

	')'  shift 118
	.  error


state 77
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement error  (56)
	if_statement : IF '(' fun_invoc . ')' THEN error END_IF  (57)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)
	fact : fun_invoc .  (83)

	')'  shift 119
	error  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 78
	fact : '-' ID .  (82)

	.  reduce 82


state 79
	fact : '-' CTE .  (81)

	.  reduce 81


state 80
	cond : expr error . expr  (64)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 120
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 81
	cond_op : NEQ .  (68)

	.  reduce 68


state 82
	cond_op : LEQ .  (69)

	.  reduce 69


state 83
	cond_op : MEQ .  (70)

	.  reduce 70


state 84
	cond_op : '<' .  (65)

	.  reduce 65


state 85
	cond_op : '>' .  (66)

	.  reduce 66


state 86
	cond_op : '=' .  (67)

	.  reduce 67


state 87
	expr : expr '+' . term  (73)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 121
	fact  goto 46


state 88
	expr : expr '-' . term  (74)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 122
	fact  goto 46


state 89
	cond : expr cond_op . expr  (63)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 123
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 90
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (46)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (50)
	if_statement : IF cond THEN . error ELSE ctrl_block_statement END_IF  (52)

	error  shift 124
	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 126
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 91
	if_statement : IF fun_invoc THEN . ctrl_block_statement END_IF  (55)
	if_statement : IF fun_invoc THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (59)
	if_statement : IF fun_invoc THEN . error ELSE ctrl_block_statement END_IF  (61)

	error  shift 127
	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 128
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 92
	term : term '*' . fact  (76)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 73
	expr_pair  goto 44
	fact  goto 129


state 93
	term : term '/' . fact  (77)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 73
	expr_pair  goto 44
	fact  goto 130


state 94
	prog : ID BEGIN statement_list error .  (4)
	statement_list : statement_list error .  (9)

	$end  reduce 4
	error  reduce 9
	ID  reduce 9
	TAG  reduce 9
	IF  reduce 9
	END  reduce 9
	OUTF  reduce 9
	TYPEDEF  reduce 9
	RET  reduce 9
	UINTEGER  reduce 9
	SINGLE  reduce 9
	REPEAT  reduce 9
	GOTO  reduce 9


state 95
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 96
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	outf_statement : OUTF '(' expr . ')'  (89)

	')'  shift 131
	'+'  shift 87
	'-'  shift 88
	.  error


state 97
	declare_statement : TYPEDEF PAIR error .  (32)

	.  reduce 32


state 98
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID  (30)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' error  (33)

	ID  shift 132
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 133


state 99
	return_statement : RET '(' expr . ')'  (40)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)

	')'  shift 134
	'+'  shift 87
	'-'  shift 88
	.  error


state 100
	repeat_statement : REPEAT BEGIN error .  (95)

	.  reduce 95


state 101
	assign_statement : ID . ASSIGN expr  (71)
	expr_pair : ID . '{' CTE '}'  (86)
	elem_list : ID .  (101)

	ASSIGN  shift 34
	'{'  shift 35
	','  reduce 101


state 102
	executable_statement_list : executable_statement .  (22)

	.  reduce 22


state 103
	executable_statement_list : executable_statement_list . executable_statement  (23)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')'  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')'  (93)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT BEGIN executable_statement_list . END error  (96)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	END  shift 135
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 136
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 104
	var_list : ID ',' . ID  (34)

	ID  shift 137
	.  error


state 105
	declare_statement : var_type FUN error . '(' parametro ')' BEGIN fun_body END  (27)

	'('  shift 138
	.  error


state 106
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END  (26)
	declare_statement : var_type FUN ID . '(' parametro ',' ')' BEGIN fun_body END  (28)
	declare_statement : var_type FUN ID . '(' error ')' BEGIN fun_body END  (29)

	'('  shift 139
	.  error


state 107
	var_list : var_list ',' . ID  (35)

	ID  shift 140
	.  error


state 108
	assign_statement : expr_pair ASSIGN expr .  (72)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)

	'+'  shift 87
	'-'  shift 88
	$end  reduce 72
	error  reduce 72
	ID  reduce 72
	TAG  reduce 72
	IF  reduce 72
	ELSE  reduce 72
	END  reduce 72
	END_IF  reduce 72
	OUTF  reduce 72
	TYPEDEF  reduce 72
	RET  reduce 72
	UINTEGER  reduce 72
	SINGLE  reduce 72
	REPEAT  reduce 72
	GOTO  reduce 72
	';'  reduce 72


state 109
	mult_assign_statement : id_list ASSIGN error .  (98)

	.  reduce 98


state 110
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr_list : expr . ',' expr  (103)

	','  shift 141
	'+'  shift 87
	'-'  shift 88
	.  error


state 111
	mult_assign_statement : id_list ASSIGN expr_list .  (97)
	expr_list : expr_list . ',' expr  (104)

	','  shift 142
	$end  reduce 97
	error  reduce 97
	ID  reduce 97
	TAG  reduce 97
	IF  reduce 97
	ELSE  reduce 97
	END  reduce 97
	END_IF  reduce 97
	OUTF  reduce 97
	TYPEDEF  reduce 97
	RET  reduce 97
	UINTEGER  reduce 97
	SINGLE  reduce 97
	REPEAT  reduce 97
	GOTO  reduce 97
	';'  reduce 97


state 112
	expr_pair : ID . '{' CTE '}'  (86)
	elem_list : ID .  (101)

	'{'  shift 35
	ASSIGN  reduce 101
	','  reduce 101


state 113
	elem_list : expr_pair .  (102)

	.  reduce 102


state 114
	id_list : id_list ',' elem_list .  (100)

	.  reduce 100


state 115
	id_list : elem_list ',' elem_list .  (99)

	.  reduce 99


state 116
	expr_pair : ID '{' CTE '}' .  (86)

	.  reduce 86


state 117
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	fun_invoc : ID '(' expr . ')'  (87)
	fun_invoc : ID '(' expr . error ')'  (88)

	error  shift 143
	')'  shift 144
	'+'  shift 87
	'-'  shift 88
	.  error


state 118
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (45)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (47)
	if_statement : IF '(' cond ')' . THEN error END_IF  (48)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (51)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE error END_IF  (53)

	THEN  shift 145
	.  error


state 119
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement END_IF  (54)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement error  (56)
	if_statement : IF '(' fun_invoc ')' . THEN error END_IF  (57)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (60)

	THEN  shift 146
	.  error


state 120
	cond : expr error expr .  (64)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)

	'+'  shift 87
	'-'  shift 88
	$end  reduce 64
	error  reduce 64
	ID  reduce 64
	TAG  reduce 64
	IF  reduce 64
	THEN  reduce 64
	ELSE  reduce 64
	END  reduce 64
	END_IF  reduce 64
	OUTF  reduce 64
	TYPEDEF  reduce 64
	RET  reduce 64
	UINTEGER  reduce 64
	SINGLE  reduce 64
	REPEAT  reduce 64
	GOTO  reduce 64
	';'  reduce 64
	')'  reduce 64


state 121
	expr : expr '+' term .  (73)
	term : term . '*' fact  (76)
	term : term . '/' fact  (77)

	'*'  shift 92
	'/'  shift 93
	$end  reduce 73
	error  reduce 73
	ID  reduce 73
	NEQ  reduce 73
	LEQ  reduce 73
	MEQ  reduce 73
	TAG  reduce 73
	IF  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	END  reduce 73
	END_IF  reduce 73
	OUTF  reduce 73
	TYPEDEF  reduce 73
	RET  reduce 73
	UINTEGER  reduce 73
	SINGLE  reduce 73
	REPEAT  reduce 73
	GOTO  reduce 73
	';'  reduce 73
	')'  reduce 73
	','  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	'='  reduce 73
	'+'  reduce 73
	'-'  reduce 73


state 122
	expr : expr '-' term .  (74)
	term : term . '*' fact  (76)
	term : term . '/' fact  (77)

	'*'  shift 92
	'/'  shift 93
	$end  reduce 74
	error  reduce 74
	ID  reduce 74
	NEQ  reduce 74
	LEQ  reduce 74
	MEQ  reduce 74
	TAG  reduce 74
	IF  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	END  reduce 74
	END_IF  reduce 74
	OUTF  reduce 74
	TYPEDEF  reduce 74
	RET  reduce 74
	UINTEGER  reduce 74
	SINGLE  reduce 74
	REPEAT  reduce 74
	GOTO  reduce 74
	';'  reduce 74
	')'  reduce 74
	','  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	'='  reduce 74
	'+'  reduce 74
	'-'  reduce 74


state 123
	cond : expr cond_op expr .  (63)
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)

	'+'  shift 87
	'-'  shift 88
	$end  reduce 63
	error  reduce 63
	ID  reduce 63
	TAG  reduce 63
	IF  reduce 63
	THEN  reduce 63
	ELSE  reduce 63
	END  reduce 63
	END_IF  reduce 63
	OUTF  reduce 63
	TYPEDEF  reduce 63
	RET  reduce 63
	UINTEGER  reduce 63
	SINGLE  reduce 63
	REPEAT  reduce 63
	GOTO  reduce 63
	';'  reduce 63
	')'  reduce 63


state 124
	if_statement : IF cond THEN error . ELSE ctrl_block_statement END_IF  (52)

	ELSE  shift 147
	.  error


state 125
	executable_statement_list : executable_statement_list . executable_statement  (23)
	ctrl_block_statement : executable_statement_list .  (62)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	error  reduce 62
	ELSE  reduce 62
	END_IF  reduce 62

	executable_statement  goto 136
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 126
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (46)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (50)

	ELSE  shift 148
	END_IF  shift 149
	.  error


state 127
	if_statement : IF fun_invoc THEN error . ELSE ctrl_block_statement END_IF  (61)

	ELSE  shift 150
	.  error


state 128
	if_statement : IF fun_invoc THEN ctrl_block_statement . END_IF  (55)
	if_statement : IF fun_invoc THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (59)

	ELSE  shift 151
	END_IF  shift 152
	.  error


state 129
	term : term '*' fact .  (76)

	.  reduce 76


state 130
	term : term '/' fact .  (77)

	.  reduce 77


state 131
	outf_statement : OUTF '(' expr ')' .  (89)

	.  reduce 89


state 132
	var_type : ID .  (44)

	.  reduce 44


state 133
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID  (30)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' error  (33)

	'>'  shift 153
	.  error


state 134
	return_statement : RET '(' expr ')' .  (40)

	.  reduce 40


state 135
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')'  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')'  (93)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL fun_invoc ';'  (94)
	repeat_statement : REPEAT BEGIN executable_statement_list END . error  (96)

	error  shift 154
	UNTIL  shift 155
	.  error


state 136
	executable_statement_list : executable_statement_list executable_statement .  (23)

	.  reduce 23


state 137
	var_list : ID ',' ID .  (34)

	.  reduce 34


state 138
	declare_statement : var_type FUN error '(' . parametro ')' BEGIN fun_body END  (27)

	ID  shift 156
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 157
	parametro  goto 158


state 139
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END  (26)
	declare_statement : var_type FUN ID '(' . parametro ',' ')' BEGIN fun_body END  (28)
	declare_statement : var_type FUN ID '(' . error ')' BEGIN fun_body END  (29)

	error  shift 159
	ID  shift 156
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 157
	parametro  goto 160


state 140
	var_list : var_list ',' ID .  (35)

	.  reduce 35


state 141
	expr_list : expr ',' . expr  (103)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 161
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 142
	expr_list : expr_list ',' . expr  (104)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 162
	fun_invoc  goto 73
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 143
	fun_invoc : ID '(' expr error . ')'  (88)

	')'  shift 163
	.  error


state 144
	fun_invoc : ID '(' expr ')' .  (87)

	.  reduce 87


state 145
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (45)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (47)
	if_statement : IF '(' cond ')' THEN . error END_IF  (48)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (51)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE error END_IF  (53)

	error  shift 164
	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 165
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 146
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement END_IF  (54)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement error  (56)
	if_statement : IF '(' fun_invoc ')' THEN . error END_IF  (57)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (60)

	error  shift 166
	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 167
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 147
	if_statement : IF cond THEN error ELSE . ctrl_block_statement END_IF  (52)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 168
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 148
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (50)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 169
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 149
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (46)

	.  reduce 46


state 150
	if_statement : IF fun_invoc THEN error ELSE . ctrl_block_statement END_IF  (61)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 170
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 151
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (59)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 171
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 152
	if_statement : IF fun_invoc THEN ctrl_block_statement END_IF .  (55)

	.  reduce 55


state 153
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID  (30)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . error  (33)

	error  shift 172
	ID  shift 173
	.  error


state 154
	repeat_statement : REPEAT BEGIN executable_statement_list END error .  (96)

	.  reduce 96


state 155
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')'  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (92)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')'  (93)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . fun_invoc ';'  (94)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'('  shift 174
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 175
	fun_invoc  goto 176
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 156
	parametro : ID .  (38)
	var_type : ID .  (44)

	error  reduce 44
	ID  reduce 44
	')'  reduce 38
	','  reduce 38


state 157
	parametro : var_type . ID  (37)
	parametro : var_type . error  (39)

	error  shift 177
	ID  shift 178
	.  error


state 158
	declare_statement : var_type FUN error '(' parametro . ')' BEGIN fun_body END  (27)

	')'  shift 179
	.  error


state 159
	declare_statement : var_type FUN ID '(' error . ')' BEGIN fun_body END  (29)

	')'  shift 180
	.  error


state 160
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END  (26)
	declare_statement : var_type FUN ID '(' parametro . ',' ')' BEGIN fun_body END  (28)

	')'  shift 181
	','  shift 182
	.  error


state 161
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr_list : expr ',' expr .  (103)

	'+'  shift 87
	'-'  shift 88
	$end  reduce 103
	error  reduce 103
	ID  reduce 103
	TAG  reduce 103
	IF  reduce 103
	ELSE  reduce 103
	END  reduce 103
	END_IF  reduce 103
	OUTF  reduce 103
	TYPEDEF  reduce 103
	RET  reduce 103
	UINTEGER  reduce 103
	SINGLE  reduce 103
	REPEAT  reduce 103
	GOTO  reduce 103
	';'  reduce 103
	','  reduce 103


state 162
	expr : expr . '+' term  (73)
	expr : expr . '-' term  (74)
	expr_list : expr_list ',' expr .  (104)

	'+'  shift 87
	'-'  shift 88
	$end  reduce 104
	error  reduce 104
	ID  reduce 104
	TAG  reduce 104
	IF  reduce 104
	ELSE  reduce 104
	END  reduce 104
	END_IF  reduce 104
	OUTF  reduce 104
	TYPEDEF  reduce 104
	RET  reduce 104
	UINTEGER  reduce 104
	SINGLE  reduce 104
	REPEAT  reduce 104
	GOTO  reduce 104
	';'  reduce 104
	','  reduce 104


state 163
	fun_invoc : ID '(' expr error ')' .  (88)

	.  reduce 88


state 164
	if_statement : IF '(' cond ')' THEN error . END_IF  (48)

	END_IF  shift 183
	.  error


state 165
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (45)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (47)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE error END_IF  (53)

	error  shift 184
	ELSE  shift 185
	END_IF  shift 186
	.  error


state 166
	if_statement : IF '(' fun_invoc ')' THEN error . END_IF  (57)

	END_IF  shift 187
	.  error


state 167
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . END_IF  (54)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . error  (56)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (60)

	error  shift 188
	ELSE  shift 189
	END_IF  shift 190
	.  error


state 168
	if_statement : IF cond THEN error ELSE ctrl_block_statement . END_IF  (52)

	END_IF  shift 191
	.  error


state 169
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (50)

	END_IF  shift 192
	.  error


state 170
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement . END_IF  (61)

	END_IF  shift 193
	.  error


state 171
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (59)

	END_IF  shift 194
	.  error


state 172
	declare_statement : TYPEDEF PAIR '<' var_type '>' error .  (33)

	.  reduce 33


state 173
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID .  (30)

	.  reduce 30


state 174
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')'  (91)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')'  (93)

	ID  shift 36
	CTE  shift 37
	CHARCH  shift 38
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 195
	fun_invoc  goto 196
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 175
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (92)

	.  reduce 92


state 176
	fact : fun_invoc .  (83)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc . ';'  (94)

	';'  shift 197
	error  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 177
	parametro : var_type error .  (39)

	.  reduce 39


state 178
	parametro : var_type ID .  (37)

	.  reduce 37


state 179
	declare_statement : var_type FUN error '(' parametro ')' . BEGIN fun_body END  (27)

	BEGIN  shift 198
	.  error


state 180
	declare_statement : var_type FUN ID '(' error ')' . BEGIN fun_body END  (29)

	BEGIN  shift 199
	.  error


state 181
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END  (26)

	BEGIN  shift 200
	.  error


state 182
	declare_statement : var_type FUN ID '(' parametro ',' . ')' BEGIN fun_body END  (28)

	')'  shift 201
	.  error


state 183
	if_statement : IF '(' cond ')' THEN error END_IF .  (48)

	.  reduce 48


state 184
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (47)

	.  reduce 47


state 185
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . error END_IF  (53)

	error  shift 202
	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 203
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 186
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (45)

	.  reduce 45


state 187
	if_statement : IF '(' fun_invoc ')' THEN error END_IF .  (57)

	.  reduce 57


state 188
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement error .  (56)

	.  reduce 56


state 189
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (60)

	ID  shift 101
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 102
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 125
	ctrl_block_statement  goto 204
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 190
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF .  (54)

	.  reduce 54


state 191
	if_statement : IF cond THEN error ELSE ctrl_block_statement END_IF .  (52)

	.  reduce 52


state 192
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (50)

	.  reduce 50


state 193
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement END_IF .  (61)

	.  reduce 61


state 194
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (59)

	.  reduce 59


state 195
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')'  (91)

	')'  shift 205
	.  error


state 196
	fact : fun_invoc .  (83)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')'  (93)

	')'  shift 206
	error  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	MEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'='  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83


state 197
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';' .  (94)

	.  reduce 94


state 198
	declare_statement : var_type FUN error '(' parametro ')' BEGIN . fun_body END  (27)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 207
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 208
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 199
	declare_statement : var_type FUN ID '(' error ')' BEGIN . fun_body END  (29)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 207
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 209
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 200
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END  (26)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 207
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 210
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 201
	declare_statement : var_type FUN ID '(' parametro ',' ')' . BEGIN fun_body END  (28)

	BEGIN  shift 211
	.  error


state 202
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error . END_IF  (53)

	END_IF  shift 212
	.  error


state 203
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (49)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (51)

	error  shift 213
	END_IF  shift 214
	.  error


state 204
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (58)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (60)

	error  shift 215
	END_IF  shift 216
	.  error


state 205
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' .  (91)

	.  reduce 91


state 206
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' .  (93)

	.  reduce 93


state 207
	statement_list : statement_list . statement  (8)
	statement_list : statement_list . error  (9)
	fun_body : statement_list .  (41)

	error  shift 56
	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	END  reduce 41

	statement  goto 57
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 208
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body . END  (27)

	END  shift 217
	.  error


state 209
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body . END  (29)

	END  shift 218
	.  error


state 210
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END  (26)

	END  shift 219
	.  error


state 211
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN . fun_body END  (28)

	ID  shift 6
	TAG  shift 7
	IF  shift 8
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 207
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 220
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 212
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE error END_IF .  (53)

	.  reduce 53


state 213
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (51)

	.  reduce 51


state 214
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (49)

	.  reduce 49


state 215
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (60)

	.  reduce 60


state 216
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (58)

	.  reduce 58


state 217
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body END .  (27)

	.  reduce 27


state 218
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body END .  (29)

	.  reduce 29


state 219
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END .  (26)

	.  reduce 26


state 220
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body . END  (28)

	END  shift 221
	.  error


state 221
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END .  (28)

	.  reduce 28


39 terminals, 30 nonterminals
107 grammar rules, 222 states
