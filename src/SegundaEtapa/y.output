   0  $accept : prog $end

   1  prog : ID BEGIN statement_list END
   2       | error BEGIN statement_list END
   3       | error

   4  statement_list : statement
   5                 | statement_list statement

   6  statement : executable_statement
   7            | declare_statement
   8            | return_statement ';'
   9            | return_statement error
  10            | error ';'

  11  executable_statement : if_statement ';'
  12                       | if_statement error
  13                       | assign_statement
  14                       | outf_statement ';'
  15                       | outf_statement error
  16                       | repeat_statement
  17                       | goto_statement ';'
  18                       | goto_statement error
  19                       | mult_assign_statement ';'
  20                       | mult_assign_statement error
  21                       | TAG

  22  executable_statement_list : executable_statement
  23                            | executable_statement_list executable_statement

  24  declare_statement : var_type var_list ';'
  25                    | var_type var_list error
  26                    | var_type ID ';'
  27                    | var_type ID error
  28                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END ';'
  29                    | var_type FUN ID '(' parametro ')' BEGIN fun_body END error
  30                    | var_type FUN error '(' parametro ')' BEGIN fun_body END
  31                    | var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END ';'
  32                    | var_type FUN ID '(' error ')' BEGIN fun_body END ';'
  33                    | TYPEDEF PAIR '<' var_type '>' ID ';'
  34                    | TYPEDEF PAIR '<' var_type '>' ID error
  35                    | TYPEDEF error
  36                    | TYPEDEF PAIR error
  37                    | TYPEDEF PAIR '<' var_type '>' error

  38  var_list : ID ',' ID
  39           | ID ',' var_list
  40           | ID ID

  41  parametro : var_type ID
  42            | ID
  43            | var_type error

  44  return_statement : RET '(' expr ')'

  45  fun_body : statement_list

  46  var_type : UINTEGER
  47           | SINGLE
  48           | ID

  49  if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF
  50               | IF cond THEN ctrl_block_statement END_IF
  51               | IF '(' cond ')' THEN ctrl_block_statement error
  52               | IF '(' cond ')' THEN error END_IF
  53               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  54               | IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  55               | IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  56               | IF cond THEN error ELSE ctrl_block_statement END_IF
  57               | IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF
  58               | IF fun_invoc THEN ctrl_block_statement END_IF
  59               | IF '(' fun_invoc ')' THEN ctrl_block_statement error
  60               | IF '(' fun_invoc ')' THEN error END_IF
  61               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  62               | IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF
  63               | IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error
  64               | IF fun_invoc THEN error ELSE ctrl_block_statement END_IF

  65  ctrl_block_statement : executable_statement_list

  66  cond : expr cond_op expr
  67       | expr error expr

  68  cond_op : '<'
  69          | '>'
  70          | '='
  71          | NEQ
  72          | LEQ
  73          | MEQ

  74  assign_statement : ID ASSIGN expr ';'
  75                   | expr_pair ASSIGN expr ';'
  76                   | ID ASSIGN expr error
  77                   | expr_pair ASSIGN expr error

  78  expr : expr '+' term
  79       | expr '-' term
  80       | term
  81       | error

  82  term : term '*' fact
  83       | term '/' fact
  84       | fact

  85  fact : ID
  86       | CTE
  87       | '-' CTE
  88       | fun_invoc
  89       | expr_pair

  90  expr_pair : ID '{' CTE '}'

  91  fun_invoc : ID '(' expr ')'
  92            | ID '(' expr ',' expr ')'

  93  outf_statement : OUTF '(' expr ')'
  94                 | OUTF '(' CHARCH ')'
  95                 | OUTF error

  96  repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' ';'
  97                   | REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' error
  98                   | REPEAT BEGIN executable_statement_list END UNTIL cond
  99                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';'
 100                   | REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error
 101                   | REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';'
 102                   | REPEAT BEGIN error
 103                   | REPEAT BEGIN executable_statement_list END error

 104  mult_assign_statement : id_list ASSIGN expr_list
 105                        | id_list ASSIGN error

 106  id_list : elem_list ',' elem_list
 107          | id_list ',' elem_list

 108  elem_list : ID
 109            | expr_pair

 110  expr_list : expr ',' expr
 111            | expr_list ',' expr

 112  goto_statement : GOTO TAG
 113                 | GOTO error

state 0
	$accept : . prog $end  (0)

	error  shift 1
	ID  shift 2
	.  error

	prog  goto 3


state 1
	prog : error . BEGIN statement_list END  (2)
	prog : error .  (3)

	BEGIN  shift 4
	$end  reduce 3


state 2
	prog : ID . BEGIN statement_list END  (1)

	BEGIN  shift 5
	.  error


state 3
	$accept : prog . $end  (0)

	$end  accept


state 4
	prog : error BEGIN . statement_list END  (2)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 17
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 5
	prog : ID BEGIN . statement_list END  (1)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 32
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 6
	statement : error . ';'  (10)

	';'  shift 33
	.  error


state 7
	var_type : ID .  (48)
	assign_statement : ID . ASSIGN expr ';'  (74)
	assign_statement : ID . ASSIGN expr error  (76)
	expr_pair : ID . '{' CTE '}'  (90)
	elem_list : ID .  (108)

	ASSIGN  shift 34
	'{'  shift 35
	ID  reduce 48
	FUN  reduce 48
	','  reduce 108


state 8
	executable_statement : TAG .  (21)

	.  reduce 21


state 9
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement END_IF  (49)
	if_statement : IF . cond THEN ctrl_block_statement END_IF  (50)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement error  (51)
	if_statement : IF . '(' cond ')' THEN error END_IF  (52)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF . cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (54)
	if_statement : IF . '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (55)
	if_statement : IF . cond THEN error ELSE ctrl_block_statement END_IF  (56)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement END_IF  (57)
	if_statement : IF . fun_invoc THEN ctrl_block_statement END_IF  (58)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement error  (59)
	if_statement : IF . '(' fun_invoc ')' THEN error END_IF  (60)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF . fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF . '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (63)
	if_statement : IF . fun_invoc THEN error ELSE ctrl_block_statement END_IF  (64)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'('  shift 39
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 42
	fun_invoc  goto 43
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 10
	outf_statement : OUTF . '(' expr ')'  (93)
	outf_statement : OUTF . '(' CHARCH ')'  (94)
	outf_statement : OUTF . error  (95)

	error  shift 47
	'('  shift 48
	.  error


state 11
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID ';'  (33)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' ID error  (34)
	declare_statement : TYPEDEF . error  (35)
	declare_statement : TYPEDEF . PAIR error  (36)
	declare_statement : TYPEDEF . PAIR '<' var_type '>' error  (37)

	error  shift 49
	PAIR  shift 50
	.  error


state 12
	return_statement : RET . '(' expr ')'  (44)

	'('  shift 51
	.  error


state 13
	var_type : UINTEGER .  (46)

	.  reduce 46


state 14
	var_type : SINGLE .  (47)

	.  reduce 47


state 15
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL cond  (98)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT . BEGIN executable_statement_list END UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT . BEGIN error  (102)
	repeat_statement : REPEAT . BEGIN executable_statement_list END error  (103)

	BEGIN  shift 52
	.  error


state 16
	goto_statement : GOTO . TAG  (112)
	goto_statement : GOTO . error  (113)

	error  shift 53
	TAG  shift 54
	.  error


state 17
	prog : error BEGIN statement_list . END  (2)
	statement_list : statement_list . statement  (5)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	END  shift 55
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 56
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 18
	statement_list : statement .  (4)

	.  reduce 4


state 19
	statement : executable_statement .  (6)

	.  reduce 6


state 20
	statement : declare_statement .  (7)

	.  reduce 7


state 21
	statement : return_statement . ';'  (8)
	statement : return_statement . error  (9)

	error  shift 57
	';'  shift 58
	.  error


state 22
	executable_statement : if_statement . ';'  (11)
	executable_statement : if_statement . error  (12)

	error  shift 59
	';'  shift 60
	.  error


state 23
	executable_statement : assign_statement .  (13)

	.  reduce 13


state 24
	executable_statement : outf_statement . ';'  (14)
	executable_statement : outf_statement . error  (15)

	error  shift 61
	';'  shift 62
	.  error


state 25
	executable_statement : repeat_statement .  (16)

	.  reduce 16


state 26
	executable_statement : goto_statement . ';'  (17)
	executable_statement : goto_statement . error  (18)

	error  shift 63
	';'  shift 64
	.  error


state 27
	executable_statement : mult_assign_statement . ';'  (19)
	executable_statement : mult_assign_statement . error  (20)

	error  shift 65
	';'  shift 66
	.  error


state 28
	declare_statement : var_type . var_list ';'  (24)
	declare_statement : var_type . var_list error  (25)
	declare_statement : var_type . ID ';'  (26)
	declare_statement : var_type . ID error  (27)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END ';'  (28)
	declare_statement : var_type . FUN ID '(' parametro ')' BEGIN fun_body END error  (29)
	declare_statement : var_type . FUN error '(' parametro ')' BEGIN fun_body END  (30)
	declare_statement : var_type . FUN ID '(' parametro ',' ')' BEGIN fun_body END ';'  (31)
	declare_statement : var_type . FUN ID '(' error ')' BEGIN fun_body END ';'  (32)

	ID  shift 67
	FUN  shift 68
	.  error

	var_list  goto 69


state 29
	assign_statement : expr_pair . ASSIGN expr ';'  (75)
	assign_statement : expr_pair . ASSIGN expr error  (77)
	elem_list : expr_pair .  (109)

	ASSIGN  shift 70
	','  reduce 109


state 30
	mult_assign_statement : id_list . ASSIGN expr_list  (104)
	mult_assign_statement : id_list . ASSIGN error  (105)
	id_list : id_list . ',' elem_list  (107)

	ASSIGN  shift 71
	','  shift 72
	.  error


state 31
	id_list : elem_list . ',' elem_list  (106)

	','  shift 73
	.  error


state 32
	prog : ID BEGIN statement_list . END  (1)
	statement_list : statement_list . statement  (5)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	END  shift 74
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement  goto 56
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 33
	statement : error ';' .  (10)

	.  reduce 10


state 34
	assign_statement : ID ASSIGN . expr ';'  (74)
	assign_statement : ID ASSIGN . expr error  (76)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 75
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 35
	expr_pair : ID '{' . CTE '}'  (90)

	CTE  shift 77
	.  error


state 36
	expr : error .  (81)

	.  reduce 81


state 37
	fact : ID .  (85)
	expr_pair : ID . '{' CTE '}'  (90)
	fun_invoc : ID . '(' expr ')'  (91)
	fun_invoc : ID . '(' expr ',' expr ')'  (92)

	'('  shift 78
	'{'  shift 35
	error  reduce 85
	ID  reduce 85
	NEQ  reduce 85
	LEQ  reduce 85
	MEQ  reduce 85
	TAG  reduce 85
	IF  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	END  reduce 85
	END_IF  reduce 85
	OUTF  reduce 85
	TYPEDEF  reduce 85
	RET  reduce 85
	UINTEGER  reduce 85
	SINGLE  reduce 85
	REPEAT  reduce 85
	GOTO  reduce 85
	';'  reduce 85
	')'  reduce 85
	','  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	'='  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	'*'  reduce 85
	'/'  reduce 85


state 38
	fact : CTE .  (86)

	.  reduce 86


state 39
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement END_IF  (49)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement error  (51)
	if_statement : IF '(' . cond ')' THEN error END_IF  (52)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF '(' . cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (55)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement END_IF  (57)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement error  (59)
	if_statement : IF '(' . fun_invoc ')' THEN error END_IF  (60)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' . fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (63)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 79
	fun_invoc  goto 80
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 40
	fact : '-' . CTE  (87)

	CTE  shift 81
	.  error


state 41
	cond : expr . cond_op expr  (66)
	cond : expr . error expr  (67)
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)

	error  shift 82
	NEQ  shift 83
	LEQ  shift 84
	MEQ  shift 85
	'<'  shift 86
	'>'  shift 87
	'='  shift 88
	'+'  shift 89
	'-'  shift 90
	.  error

	cond_op  goto 91


state 42
	if_statement : IF cond . THEN ctrl_block_statement END_IF  (50)
	if_statement : IF cond . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (54)
	if_statement : IF cond . THEN error ELSE ctrl_block_statement END_IF  (56)

	THEN  shift 92
	.  error


state 43
	if_statement : IF fun_invoc . THEN ctrl_block_statement END_IF  (58)
	if_statement : IF fun_invoc . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF fun_invoc . THEN error ELSE ctrl_block_statement END_IF  (64)
	fact : fun_invoc .  (88)

	THEN  shift 93
	error  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	MEQ  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'='  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88


state 44
	fact : expr_pair .  (89)

	.  reduce 89


state 45
	expr : term .  (80)
	term : term . '*' fact  (82)
	term : term . '/' fact  (83)

	'*'  shift 94
	'/'  shift 95
	error  reduce 80
	ID  reduce 80
	NEQ  reduce 80
	LEQ  reduce 80
	MEQ  reduce 80
	TAG  reduce 80
	IF  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	END  reduce 80
	END_IF  reduce 80
	OUTF  reduce 80
	TYPEDEF  reduce 80
	RET  reduce 80
	UINTEGER  reduce 80
	SINGLE  reduce 80
	REPEAT  reduce 80
	GOTO  reduce 80
	';'  reduce 80
	')'  reduce 80
	','  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	'='  reduce 80
	'+'  reduce 80
	'-'  reduce 80


state 46
	term : fact .  (84)

	.  reduce 84


state 47
	outf_statement : OUTF error .  (95)

	.  reduce 95


state 48
	outf_statement : OUTF '(' . expr ')'  (93)
	outf_statement : OUTF '(' . CHARCH ')'  (94)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	CHARCH  shift 96
	'-'  shift 40
	.  error

	expr  goto 97
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 49
	declare_statement : TYPEDEF error .  (35)

	.  reduce 35


state 50
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID ';'  (33)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' ID error  (34)
	declare_statement : TYPEDEF PAIR . error  (36)
	declare_statement : TYPEDEF PAIR . '<' var_type '>' error  (37)

	error  shift 98
	'<'  shift 99
	.  error


state 51
	return_statement : RET '(' . expr ')'  (44)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 100
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 52
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL cond  (98)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN . executable_statement_list END UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT BEGIN . error  (102)
	repeat_statement : REPEAT BEGIN . executable_statement_list END error  (103)

	error  shift 101
	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 104
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 53
	goto_statement : GOTO error .  (113)

	.  reduce 113


state 54
	goto_statement : GOTO TAG .  (112)

	.  reduce 112


state 55
	prog : error BEGIN statement_list END .  (2)

	.  reduce 2


state 56
	statement_list : statement_list statement .  (5)

	.  reduce 5


state 57
	statement : return_statement error .  (9)

	.  reduce 9


state 58
	statement : return_statement ';' .  (8)

	.  reduce 8


state 59
	executable_statement : if_statement error .  (12)

	.  reduce 12


state 60
	executable_statement : if_statement ';' .  (11)

	.  reduce 11


state 61
	executable_statement : outf_statement error .  (15)

	.  reduce 15


state 62
	executable_statement : outf_statement ';' .  (14)

	.  reduce 14


state 63
	executable_statement : goto_statement error .  (18)

	.  reduce 18


state 64
	executable_statement : goto_statement ';' .  (17)

	.  reduce 17


state 65
	executable_statement : mult_assign_statement error .  (20)

	.  reduce 20


state 66
	executable_statement : mult_assign_statement ';' .  (19)

	.  reduce 19


state 67
	declare_statement : var_type ID . ';'  (26)
	declare_statement : var_type ID . error  (27)
	var_list : ID . ',' ID  (38)
	var_list : ID . ',' var_list  (39)
	var_list : ID . ID  (40)

	error  shift 105
	ID  shift 106
	';'  shift 107
	','  shift 108
	.  error


state 68
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END ';'  (28)
	declare_statement : var_type FUN . ID '(' parametro ')' BEGIN fun_body END error  (29)
	declare_statement : var_type FUN . error '(' parametro ')' BEGIN fun_body END  (30)
	declare_statement : var_type FUN . ID '(' parametro ',' ')' BEGIN fun_body END ';'  (31)
	declare_statement : var_type FUN . ID '(' error ')' BEGIN fun_body END ';'  (32)

	error  shift 109
	ID  shift 110
	.  error


state 69
	declare_statement : var_type var_list . ';'  (24)
	declare_statement : var_type var_list . error  (25)

	error  shift 111
	';'  shift 112
	.  error


state 70
	assign_statement : expr_pair ASSIGN . expr ';'  (75)
	assign_statement : expr_pair ASSIGN . expr error  (77)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 113
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 71
	mult_assign_statement : id_list ASSIGN . expr_list  (104)
	mult_assign_statement : id_list ASSIGN . error  (105)

	error  shift 114
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 115
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46
	expr_list  goto 116


state 72
	id_list : id_list ',' . elem_list  (107)

	ID  shift 117
	.  error

	expr_pair  goto 118
	elem_list  goto 119


state 73
	id_list : elem_list ',' . elem_list  (106)

	ID  shift 117
	.  error

	expr_pair  goto 118
	elem_list  goto 120


state 74
	prog : ID BEGIN statement_list END .  (1)

	.  reduce 1


state 75
	assign_statement : ID ASSIGN expr . ';'  (74)
	assign_statement : ID ASSIGN expr . error  (76)
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)

	error  shift 121
	';'  shift 122
	'+'  shift 89
	'-'  shift 90
	.  error


state 76
	fact : fun_invoc .  (88)

	.  reduce 88


state 77
	expr_pair : ID '{' CTE . '}'  (90)

	'}'  shift 123
	.  error


state 78
	fun_invoc : ID '(' . expr ')'  (91)
	fun_invoc : ID '(' . expr ',' expr ')'  (92)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 124
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 79
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement error  (51)
	if_statement : IF '(' cond . ')' THEN error END_IF  (52)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (55)

	')'  shift 125
	.  error


state 80
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement END_IF  (57)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement error  (59)
	if_statement : IF '(' fun_invoc . ')' THEN error END_IF  (60)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' fun_invoc . ')' THEN ctrl_block_statement ELSE ctrl_block_statement error  (63)
	fact : fun_invoc .  (88)

	')'  shift 126
	error  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	MEQ  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'='  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88


state 81
	fact : '-' CTE .  (87)

	.  reduce 87


state 82
	cond : expr error . expr  (67)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 127
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 83
	cond_op : NEQ .  (71)

	.  reduce 71


state 84
	cond_op : LEQ .  (72)

	.  reduce 72


state 85
	cond_op : MEQ .  (73)

	.  reduce 73


state 86
	cond_op : '<' .  (68)

	.  reduce 68


state 87
	cond_op : '>' .  (69)

	.  reduce 69


state 88
	cond_op : '=' .  (70)

	.  reduce 70


state 89
	expr : expr '+' . term  (78)

	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 128
	fact  goto 46


state 90
	expr : expr '-' . term  (79)

	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 129
	fact  goto 46


state 91
	cond : expr cond_op . expr  (66)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 130
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 92
	if_statement : IF cond THEN . ctrl_block_statement END_IF  (50)
	if_statement : IF cond THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (54)
	if_statement : IF cond THEN . error ELSE ctrl_block_statement END_IF  (56)

	error  shift 131
	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 133
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 93
	if_statement : IF fun_invoc THEN . ctrl_block_statement END_IF  (58)
	if_statement : IF fun_invoc THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (62)
	if_statement : IF fun_invoc THEN . error ELSE ctrl_block_statement END_IF  (64)

	error  shift 134
	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 135
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 94
	term : term '*' . fact  (82)

	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 76
	expr_pair  goto 44
	fact  goto 136


state 95
	term : term '/' . fact  (83)

	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	fun_invoc  goto 76
	expr_pair  goto 44
	fact  goto 137


state 96
	outf_statement : OUTF '(' CHARCH . ')'  (94)

	')'  shift 138
	.  error


state 97
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)
	outf_statement : OUTF '(' expr . ')'  (93)

	')'  shift 139
	'+'  shift 89
	'-'  shift 90
	.  error


state 98
	declare_statement : TYPEDEF PAIR error .  (36)

	.  reduce 36


state 99
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID ';'  (33)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' ID error  (34)
	declare_statement : TYPEDEF PAIR '<' . var_type '>' error  (37)

	ID  shift 140
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 141


state 100
	return_statement : RET '(' expr . ')'  (44)
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)

	')'  shift 142
	'+'  shift 89
	'-'  shift 90
	.  error


state 101
	repeat_statement : REPEAT BEGIN error .  (102)

	.  reduce 102


state 102
	assign_statement : ID . ASSIGN expr ';'  (74)
	assign_statement : ID . ASSIGN expr error  (76)
	expr_pair : ID . '{' CTE '}'  (90)
	elem_list : ID .  (108)

	ASSIGN  shift 34
	'{'  shift 35
	','  reduce 108


state 103
	executable_statement_list : executable_statement .  (22)

	.  reduce 22


state 104
	executable_statement_list : executable_statement_list . executable_statement  (23)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL cond  (98)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list . END UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list . END error  (103)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	END  shift 143
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 144
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 105
	declare_statement : var_type ID error .  (27)

	.  reduce 27


state 106
	var_list : ID ID .  (40)

	.  reduce 40


state 107
	declare_statement : var_type ID ';' .  (26)

	.  reduce 26


state 108
	var_list : ID ',' . ID  (38)
	var_list : ID ',' . var_list  (39)

	ID  shift 145
	.  error

	var_list  goto 146


state 109
	declare_statement : var_type FUN error . '(' parametro ')' BEGIN fun_body END  (30)

	'('  shift 147
	.  error


state 110
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END ';'  (28)
	declare_statement : var_type FUN ID . '(' parametro ')' BEGIN fun_body END error  (29)
	declare_statement : var_type FUN ID . '(' parametro ',' ')' BEGIN fun_body END ';'  (31)
	declare_statement : var_type FUN ID . '(' error ')' BEGIN fun_body END ';'  (32)

	'('  shift 148
	.  error


state 111
	declare_statement : var_type var_list error .  (25)

	.  reduce 25


state 112
	declare_statement : var_type var_list ';' .  (24)

	.  reduce 24


state 113
	assign_statement : expr_pair ASSIGN expr . ';'  (75)
	assign_statement : expr_pair ASSIGN expr . error  (77)
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)

	error  shift 149
	';'  shift 150
	'+'  shift 89
	'-'  shift 90
	.  error


state 114
	expr : error .  (81)
	mult_assign_statement : id_list ASSIGN error .  (105)

	error  reduce 105
	';'  reduce 105
	','  reduce 81
	'+'  reduce 81
	'-'  reduce 81


state 115
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)
	expr_list : expr . ',' expr  (110)

	','  shift 151
	'+'  shift 89
	'-'  shift 90
	.  error


state 116
	mult_assign_statement : id_list ASSIGN expr_list .  (104)
	expr_list : expr_list . ',' expr  (111)

	','  shift 152
	error  reduce 104
	';'  reduce 104


state 117
	expr_pair : ID . '{' CTE '}'  (90)
	elem_list : ID .  (108)

	'{'  shift 35
	ASSIGN  reduce 108
	','  reduce 108


state 118
	elem_list : expr_pair .  (109)

	.  reduce 109


state 119
	id_list : id_list ',' elem_list .  (107)

	.  reduce 107


state 120
	id_list : elem_list ',' elem_list .  (106)

	.  reduce 106


state 121
	assign_statement : ID ASSIGN expr error .  (76)

	.  reduce 76


state 122
	assign_statement : ID ASSIGN expr ';' .  (74)

	.  reduce 74


state 123
	expr_pair : ID '{' CTE '}' .  (90)

	.  reduce 90


state 124
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)
	fun_invoc : ID '(' expr . ')'  (91)
	fun_invoc : ID '(' expr . ',' expr ')'  (92)

	')'  shift 153
	','  shift 154
	'+'  shift 89
	'-'  shift 90
	.  error


state 125
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement error  (51)
	if_statement : IF '(' cond ')' . THEN error END_IF  (52)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (55)

	THEN  shift 155
	.  error


state 126
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement END_IF  (57)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement error  (59)
	if_statement : IF '(' fun_invoc ')' . THEN error END_IF  (60)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' fun_invoc ')' . THEN ctrl_block_statement ELSE ctrl_block_statement error  (63)

	THEN  shift 156
	.  error


state 127
	cond : expr error expr .  (67)
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)

	'+'  shift 89
	'-'  shift 90
	error  reduce 67
	ID  reduce 67
	TAG  reduce 67
	IF  reduce 67
	THEN  reduce 67
	ELSE  reduce 67
	END  reduce 67
	END_IF  reduce 67
	OUTF  reduce 67
	TYPEDEF  reduce 67
	RET  reduce 67
	UINTEGER  reduce 67
	SINGLE  reduce 67
	REPEAT  reduce 67
	GOTO  reduce 67
	')'  reduce 67


state 128
	expr : expr '+' term .  (78)
	term : term . '*' fact  (82)
	term : term . '/' fact  (83)

	'*'  shift 94
	'/'  shift 95
	error  reduce 78
	ID  reduce 78
	NEQ  reduce 78
	LEQ  reduce 78
	MEQ  reduce 78
	TAG  reduce 78
	IF  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	END  reduce 78
	END_IF  reduce 78
	OUTF  reduce 78
	TYPEDEF  reduce 78
	RET  reduce 78
	UINTEGER  reduce 78
	SINGLE  reduce 78
	REPEAT  reduce 78
	GOTO  reduce 78
	';'  reduce 78
	')'  reduce 78
	','  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	'='  reduce 78
	'+'  reduce 78
	'-'  reduce 78


state 129
	expr : expr '-' term .  (79)
	term : term . '*' fact  (82)
	term : term . '/' fact  (83)

	'*'  shift 94
	'/'  shift 95
	error  reduce 79
	ID  reduce 79
	NEQ  reduce 79
	LEQ  reduce 79
	MEQ  reduce 79
	TAG  reduce 79
	IF  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	END  reduce 79
	END_IF  reduce 79
	OUTF  reduce 79
	TYPEDEF  reduce 79
	RET  reduce 79
	UINTEGER  reduce 79
	SINGLE  reduce 79
	REPEAT  reduce 79
	GOTO  reduce 79
	';'  reduce 79
	')'  reduce 79
	','  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	'='  reduce 79
	'+'  reduce 79
	'-'  reduce 79


state 130
	cond : expr cond_op expr .  (66)
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)

	'+'  shift 89
	'-'  shift 90
	error  reduce 66
	ID  reduce 66
	TAG  reduce 66
	IF  reduce 66
	THEN  reduce 66
	ELSE  reduce 66
	END  reduce 66
	END_IF  reduce 66
	OUTF  reduce 66
	TYPEDEF  reduce 66
	RET  reduce 66
	UINTEGER  reduce 66
	SINGLE  reduce 66
	REPEAT  reduce 66
	GOTO  reduce 66
	')'  reduce 66


state 131
	if_statement : IF cond THEN error . ELSE ctrl_block_statement END_IF  (56)

	ELSE  shift 157
	.  error


state 132
	executable_statement_list : executable_statement_list . executable_statement  (23)
	ctrl_block_statement : executable_statement_list .  (65)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	error  reduce 65
	ELSE  reduce 65
	END_IF  reduce 65

	executable_statement  goto 144
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 133
	if_statement : IF cond THEN ctrl_block_statement . END_IF  (50)
	if_statement : IF cond THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (54)

	ELSE  shift 158
	END_IF  shift 159
	.  error


state 134
	if_statement : IF fun_invoc THEN error . ELSE ctrl_block_statement END_IF  (64)

	ELSE  shift 160
	.  error


state 135
	if_statement : IF fun_invoc THEN ctrl_block_statement . END_IF  (58)
	if_statement : IF fun_invoc THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (62)

	ELSE  shift 161
	END_IF  shift 162
	.  error


state 136
	term : term '*' fact .  (82)

	.  reduce 82


state 137
	term : term '/' fact .  (83)

	.  reduce 83


state 138
	outf_statement : OUTF '(' CHARCH ')' .  (94)

	.  reduce 94


state 139
	outf_statement : OUTF '(' expr ')' .  (93)

	.  reduce 93


state 140
	var_type : ID .  (48)

	.  reduce 48


state 141
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID ';'  (33)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' ID error  (34)
	declare_statement : TYPEDEF PAIR '<' var_type . '>' error  (37)

	'>'  shift 163
	.  error


state 142
	return_statement : RET '(' expr ')' .  (44)

	.  reduce 44


state 143
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL cond  (98)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END . UNTIL fun_invoc ';'  (101)
	repeat_statement : REPEAT BEGIN executable_statement_list END . error  (103)

	error  shift 164
	UNTIL  shift 165
	.  error


state 144
	executable_statement_list : executable_statement_list executable_statement .  (23)

	.  reduce 23


state 145
	var_list : ID . ',' ID  (38)
	var_list : ID ',' ID .  (38)
	var_list : ID . ',' var_list  (39)
	var_list : ID . ID  (40)

	ID  shift 106
	','  shift 108
	error  reduce 38
	';'  reduce 38


state 146
	var_list : ID ',' var_list .  (39)

	.  reduce 39


state 147
	declare_statement : var_type FUN error '(' . parametro ')' BEGIN fun_body END  (30)

	ID  shift 166
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 167
	parametro  goto 168


state 148
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END ';'  (28)
	declare_statement : var_type FUN ID '(' . parametro ')' BEGIN fun_body END error  (29)
	declare_statement : var_type FUN ID '(' . parametro ',' ')' BEGIN fun_body END ';'  (31)
	declare_statement : var_type FUN ID '(' . error ')' BEGIN fun_body END ';'  (32)

	error  shift 169
	ID  shift 166
	UINTEGER  shift 13
	SINGLE  shift 14
	.  error

	var_type  goto 167
	parametro  goto 170


state 149
	assign_statement : expr_pair ASSIGN expr error .  (77)

	.  reduce 77


state 150
	assign_statement : expr_pair ASSIGN expr ';' .  (75)

	.  reduce 75


state 151
	expr_list : expr ',' . expr  (110)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 171
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 152
	expr_list : expr_list ',' . expr  (111)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 172
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 153
	fun_invoc : ID '(' expr ')' .  (91)

	.  reduce 91


state 154
	fun_invoc : ID '(' expr ',' . expr ')'  (92)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 173
	fun_invoc  goto 76
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 155
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement END_IF  (49)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement error  (51)
	if_statement : IF '(' cond ')' THEN . error END_IF  (52)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (55)

	error  shift 174
	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 175
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 156
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement END_IF  (57)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement error  (59)
	if_statement : IF '(' fun_invoc ')' THEN . error END_IF  (60)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' fun_invoc ')' THEN . ctrl_block_statement ELSE ctrl_block_statement error  (63)

	error  shift 176
	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 177
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 157
	if_statement : IF cond THEN error ELSE . ctrl_block_statement END_IF  (56)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 178
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 158
	if_statement : IF cond THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (54)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 179
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 159
	if_statement : IF cond THEN ctrl_block_statement END_IF .  (50)

	.  reduce 50


state 160
	if_statement : IF fun_invoc THEN error ELSE . ctrl_block_statement END_IF  (64)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 180
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 161
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (62)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 181
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 162
	if_statement : IF fun_invoc THEN ctrl_block_statement END_IF .  (58)

	.  reduce 58


state 163
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID ';'  (33)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . ID error  (34)
	declare_statement : TYPEDEF PAIR '<' var_type '>' . error  (37)

	error  shift 182
	ID  shift 183
	.  error


state 164
	repeat_statement : REPEAT BEGIN executable_statement_list END error .  (103)

	.  reduce 103


state 165
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . cond  (98)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . '(' fun_invoc ')' error  (100)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL . fun_invoc ';'  (101)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'('  shift 184
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 185
	fun_invoc  goto 186
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 166
	parametro : ID .  (42)
	var_type : ID .  (48)

	error  reduce 48
	ID  reduce 48
	')'  reduce 42
	','  reduce 42


state 167
	parametro : var_type . ID  (41)
	parametro : var_type . error  (43)

	error  shift 187
	ID  shift 188
	.  error


state 168
	declare_statement : var_type FUN error '(' parametro . ')' BEGIN fun_body END  (30)

	')'  shift 189
	.  error


state 169
	declare_statement : var_type FUN ID '(' error . ')' BEGIN fun_body END ';'  (32)

	')'  shift 190
	.  error


state 170
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END ';'  (28)
	declare_statement : var_type FUN ID '(' parametro . ')' BEGIN fun_body END error  (29)
	declare_statement : var_type FUN ID '(' parametro . ',' ')' BEGIN fun_body END ';'  (31)

	')'  shift 191
	','  shift 192
	.  error


state 171
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)
	expr_list : expr ',' expr .  (110)

	'+'  shift 89
	'-'  shift 90
	error  reduce 110
	';'  reduce 110
	','  reduce 110


state 172
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)
	expr_list : expr_list ',' expr .  (111)

	'+'  shift 89
	'-'  shift 90
	error  reduce 111
	';'  reduce 111
	','  reduce 111


state 173
	expr : expr . '+' term  (78)
	expr : expr . '-' term  (79)
	fun_invoc : ID '(' expr ',' expr . ')'  (92)

	')'  shift 193
	'+'  shift 89
	'-'  shift 90
	.  error


state 174
	if_statement : IF '(' cond ')' THEN error . END_IF  (52)

	END_IF  shift 194
	.  error


state 175
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . END_IF  (49)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . error  (51)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (55)

	error  shift 195
	ELSE  shift 196
	END_IF  shift 197
	.  error


state 176
	if_statement : IF '(' fun_invoc ')' THEN error . END_IF  (60)

	END_IF  shift 198
	.  error


state 177
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . END_IF  (57)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . error  (59)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement END_IF  (61)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement . ELSE ctrl_block_statement error  (63)

	error  shift 199
	ELSE  shift 200
	END_IF  shift 201
	.  error


state 178
	if_statement : IF cond THEN error ELSE ctrl_block_statement . END_IF  (56)

	END_IF  shift 202
	.  error


state 179
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (54)

	END_IF  shift 203
	.  error


state 180
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement . END_IF  (64)

	END_IF  shift 204
	.  error


state 181
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (62)

	END_IF  shift 205
	.  error


state 182
	declare_statement : TYPEDEF PAIR '<' var_type '>' error .  (37)

	.  reduce 37


state 183
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID . ';'  (33)
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID . error  (34)

	error  shift 206
	';'  shift 207
	.  error


state 184
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . cond ')' error  (97)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' . fun_invoc ')' error  (100)

	error  shift 36
	ID  shift 37
	CTE  shift 38
	'-'  shift 40
	.  error

	expr  goto 41
	cond  goto 208
	fun_invoc  goto 209
	expr_pair  goto 44
	term  goto 45
	fact  goto 46


state 185
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL cond .  (98)

	.  reduce 98


state 186
	fact : fun_invoc .  (88)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc . ';'  (101)

	';'  shift 210
	error  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	MEQ  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'='  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88


state 187
	parametro : var_type error .  (43)

	.  reduce 43


state 188
	parametro : var_type ID .  (41)

	.  reduce 41


state 189
	declare_statement : var_type FUN error '(' parametro ')' . BEGIN fun_body END  (30)

	BEGIN  shift 211
	.  error


state 190
	declare_statement : var_type FUN ID '(' error ')' . BEGIN fun_body END ';'  (32)

	BEGIN  shift 212
	.  error


state 191
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END ';'  (28)
	declare_statement : var_type FUN ID '(' parametro ')' . BEGIN fun_body END error  (29)

	BEGIN  shift 213
	.  error


state 192
	declare_statement : var_type FUN ID '(' parametro ',' . ')' BEGIN fun_body END ';'  (31)

	')'  shift 214
	.  error


state 193
	fun_invoc : ID '(' expr ',' expr ')' .  (92)

	.  reduce 92


state 194
	if_statement : IF '(' cond ')' THEN error END_IF .  (52)

	.  reduce 52


state 195
	if_statement : IF '(' cond ')' THEN ctrl_block_statement error .  (51)

	.  reduce 51


state 196
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (53)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (55)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 215
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 197
	if_statement : IF '(' cond ')' THEN ctrl_block_statement END_IF .  (49)

	.  reduce 49


state 198
	if_statement : IF '(' fun_invoc ')' THEN error END_IF .  (60)

	.  reduce 60


state 199
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement error .  (59)

	.  reduce 59


state 200
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement END_IF  (61)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE . ctrl_block_statement error  (63)

	ID  shift 102
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	executable_statement  goto 103
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	executable_statement_list  goto 132
	ctrl_block_statement  goto 216
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 201
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement END_IF .  (57)

	.  reduce 57


state 202
	if_statement : IF cond THEN error ELSE ctrl_block_statement END_IF .  (56)

	.  reduce 56


state 203
	if_statement : IF cond THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (54)

	.  reduce 54


state 204
	if_statement : IF fun_invoc THEN error ELSE ctrl_block_statement END_IF .  (64)

	.  reduce 64


state 205
	if_statement : IF fun_invoc THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (62)

	.  reduce 62


state 206
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID error .  (34)

	.  reduce 34


state 207
	declare_statement : TYPEDEF PAIR '<' var_type '>' ID ';' .  (33)

	.  reduce 33


state 208
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')' ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond . ')' error  (97)

	')'  shift 217
	.  error


state 209
	fact : fun_invoc .  (88)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')' ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc . ')' error  (100)

	')'  shift 218
	error  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	MEQ  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'='  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88


state 210
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL fun_invoc ';' .  (101)

	.  reduce 101


state 211
	declare_statement : var_type FUN error '(' parametro ')' BEGIN . fun_body END  (30)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 219
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 220
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 212
	declare_statement : var_type FUN ID '(' error ')' BEGIN . fun_body END ';'  (32)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 219
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 221
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 213
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END ';'  (28)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN . fun_body END error  (29)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 219
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 222
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 214
	declare_statement : var_type FUN ID '(' parametro ',' ')' . BEGIN fun_body END ';'  (31)

	BEGIN  shift 223
	.  error


state 215
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (53)
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (55)

	error  shift 224
	END_IF  shift 225
	.  error


state 216
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . END_IF  (61)
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement . error  (63)

	error  shift 226
	END_IF  shift 227
	.  error


state 217
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' . ';'  (96)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' . error  (97)

	error  shift 228
	';'  shift 229
	.  error


state 218
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' . ';'  (99)
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' . error  (100)

	error  shift 230
	';'  shift 231
	.  error


state 219
	statement_list : statement_list . statement  (5)
	fun_body : statement_list .  (45)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	END  reduce 45

	statement  goto 56
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 220
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body . END  (30)

	END  shift 232
	.  error


state 221
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body . END ';'  (32)

	END  shift 233
	.  error


state 222
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END ';'  (28)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body . END error  (29)

	END  shift 234
	.  error


state 223
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN . fun_body END ';'  (31)

	error  shift 6
	ID  shift 7
	TAG  shift 8
	IF  shift 9
	OUTF  shift 10
	TYPEDEF  shift 11
	RET  shift 12
	UINTEGER  shift 13
	SINGLE  shift 14
	REPEAT  shift 15
	GOTO  shift 16
	.  error

	statement_list  goto 219
	statement  goto 18
	executable_statement  goto 19
	declare_statement  goto 20
	return_statement  goto 21
	if_statement  goto 22
	assign_statement  goto 23
	outf_statement  goto 24
	repeat_statement  goto 25
	goto_statement  goto 26
	mult_assign_statement  goto 27
	var_type  goto 28
	fun_body  goto 235
	expr_pair  goto 29
	id_list  goto 30
	elem_list  goto 31


state 224
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (55)

	.  reduce 55


state 225
	if_statement : IF '(' cond ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (53)

	.  reduce 53


state 226
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement error .  (63)

	.  reduce 63


state 227
	if_statement : IF '(' fun_invoc ')' THEN ctrl_block_statement ELSE ctrl_block_statement END_IF .  (61)

	.  reduce 61


state 228
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' error .  (97)

	.  reduce 97


state 229
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' cond ')' ';' .  (96)

	.  reduce 96


state 230
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' error .  (100)

	.  reduce 100


state 231
	repeat_statement : REPEAT BEGIN executable_statement_list END UNTIL '(' fun_invoc ')' ';' .  (99)

	.  reduce 99


state 232
	declare_statement : var_type FUN error '(' parametro ')' BEGIN fun_body END .  (30)

	.  reduce 30


state 233
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body END . ';'  (32)

	';'  shift 236
	.  error


state 234
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END . ';'  (28)
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END . error  (29)

	error  shift 237
	';'  shift 238
	.  error


state 235
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body . END ';'  (31)

	END  shift 239
	.  error


state 236
	declare_statement : var_type FUN ID '(' error ')' BEGIN fun_body END ';' .  (32)

	.  reduce 32


state 237
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END error .  (29)

	.  reduce 29


state 238
	declare_statement : var_type FUN ID '(' parametro ')' BEGIN fun_body END ';' .  (28)

	.  reduce 28


state 239
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END . ';'  (31)

	';'  shift 240
	.  error


state 240
	declare_statement : var_type FUN ID '(' parametro ',' ')' BEGIN fun_body END ';' .  (31)

	.  reduce 31


39 terminals, 29 nonterminals
114 grammar rules, 241 states
